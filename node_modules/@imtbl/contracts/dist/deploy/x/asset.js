"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("hardhat/config");
const utils_1 = require("../utils");
// Deploy Immutable X Asset contract
// this is used in the Zero-to-Hero guide
// https://docs.immutable.com/docs/x/zero-to-hero-nft-minting/
const deployAsset = (0, config_1.task)("deploy:x:asset", "Deploy the Asset contract")
    .addParam("name", "Contract name")
    .addParam("symbol", "Contract symbol")
    .setAction(async (taskArgs, hre) => {
    const [deployer] = await hre.ethers.getSigners();
    const owner = deployer.address;
    const { name, symbol } = taskArgs;
    const allowedNetworks = ["mainnet", "sepolia"];
    if (!allowedNetworks.includes(hre.network.name)) {
        throw new Error(`please pass a valid --network [ ${allowedNetworks.join(" | ")} ]`);
    }
    const Asset = await hre.ethers.getContractFactory("Asset");
    const immutableBridgeAddress = (0, utils_1.getImmutableBridgeAddress)(hre.network.name);
    const asset = await Asset.deploy(owner, name, symbol, immutableBridgeAddress);
    console.log("Deployed Contract Address:", asset.address);
    console.log("Verifying contract in 5 minutes...");
    await (0, utils_1.sleep)(60000 * 5);
    await hre.run("verify:verify", {
        address: asset.address,
        constructorArguments: [owner, name, symbol, immutableBridgeAddress],
    });
});
exports.default = deployAsset;
