import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type { Asset, AssetInterface } from "../../../../../contracts/token/erc721/x/Asset";
type AssetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Asset__factory extends ContractFactory {
    constructor(...args: AssetConstructorParams);
    deploy(_owner: PromiseOrValue<string>, _name: PromiseOrValue<string>, _symbol: PromiseOrValue<string>, _imx: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Asset>;
    getDeployTransaction(_owner: PromiseOrValue<string>, _name: PromiseOrValue<string>, _symbol: PromiseOrValue<string>, _imx: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Asset;
    connect(signer: Signer): Asset__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b506040516200214d3803806200214d833981016040819052620000349162000312565b83818484600062000046838262000431565b50600162000055828262000431565b505050620000726200006c620000fd60201b60201c565b62000101565b600780546001600160a01b0319166001600160a01b03838116919091179091558216620000e65760405162461bcd60e51b815260206004820152601760248201527f4f776e6572206d757374206e6f7420626520656d70747900000000000000000060448201526064015b60405180910390fd5b620000f18262000153565b505050505050620004fd565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200015d620001d2565b6001600160a01b038116620001c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000dd565b620001cf8162000101565b50565b6006546001600160a01b031633146200022e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000dd565b565b80516001600160a01b03811681146200024857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027557600080fd5b81516001600160401b03808211156200029257620002926200024d565b604051601f8301601f19908116603f01168101908282118183101715620002bd57620002bd6200024d565b81604052838152602092508683858801011115620002da57600080fd5b600091505b83821015620002fe5785820183015181830184015290820190620002df565b600093810190920192909252949350505050565b600080600080608085870312156200032957600080fd5b620003348562000230565b60208601519094506001600160401b03808211156200035257600080fd5b620003608883890162000263565b945060408701519150808211156200037757600080fd5b50620003868782880162000263565b925050620003976060860162000230565b905092959194509250565b600181811c90821680620003b757607f821691505b602082108103620003d857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042c57600081815260208120601f850160051c81016020861015620004075750805b601f850160051c820191505b81811015620004285782815560010162000413565b5050505b505050565b81516001600160401b038111156200044d576200044d6200024d565b62000465816200045e8454620003a2565b84620003de565b602080601f8311600181146200049d5760008415620004845750858301515b600019600386901b1c1916600185901b17855562000428565b600085815260208120601f198616915b82811015620004ce57888601518255948401946001909101908401620004ad565b5085821015620004ed5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c40806200050d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806366bf33be116100ad578063a22cb46511610071578063a22cb46514610257578063b88d4fde1461026a578063c87b56dd1461027d578063e985e9c514610290578063f2fde38b146102a357600080fd5b806366bf33be1461020257806370a0823114610215578063715018a6146102365780638da5cb5b1461023e57806395d89b411461024f57600080fd5b80630f08025f116100f45780630f08025f146101a357806319ee6e3f146101b657806323b872dd146101c957806342842e0e146101dc5780636352211e146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611545565b6102b6565b60405190151581526020015b60405180910390f35b610156610308565b60405161014591906115b2565b6101766101713660046115c5565b61039a565b6040516001600160a01b039091168152602001610145565b6101a161019c3660046115fa565b6103c1565b005b600754610176906001600160a01b031681565b6101a16101c4366004611624565b6104db565b6101a16101d73660046116ab565b610626565b6101a16101ea3660046116ab565b610657565b6101766101fd3660046115c5565b610672565b6101566102103660046115c5565b6106d2565b6102286102233660046116e7565b61076c565b604051908152602001610145565b6101a16107f2565b6006546001600160a01b0316610176565b610156610806565b6101a1610265366004611702565b610815565b6101a1610278366004611754565b610824565b61015661028b3660046115c5565b61085c565b61013961029e366004611830565b6108d0565b6101a16102b13660046116e7565b6108fe565b60006001600160e01b031982166380ac58cd60e01b14806102e757506001600160e01b03198216635b5e139f60e01b145b8061030257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461031790611863565b80601f016020809104026020016040519081016040528092919081815260200182805461034390611863565b80156103905780601f1061036557610100808354040283529160200191610390565b820191906000526020600020905b81548152906001019060200180831161037357829003601f168201915b5050505050905090565b60006103a582610977565b506000908152600460205260409020546001600160a01b031690565b60006103cc82610672565b9050806001600160a01b0316836001600160a01b03160361043e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061045a575061045a81336108d0565b6104cc5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610435565b6104d683836109d6565b505050565b6007546001600160a01b03163314806104fe57506006546001600160a01b031633145b61055e5760405162461bcd60e51b815260206004820152602b60248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279206f60448201526a0eedccae440dee440929ab60ab1b6064820152608401610435565b826001146105ae5760405162461bcd60e51b815260206004820152601a60248201527f4d696e7461626c653a20696e76616c6964207175616e746974790000000000006044820152606401610435565b6000806105bb8484610a44565b915091506105ca868383610c02565b60008281526008602052604090206105e282826118eb565b507f31e594f6b36b98ec520a91cbbba7b8724b1cec27393f86d8f0f6aa6084db0aaf868383604051610616939291906119ab565b60405180910390a1505050505050565b6106303382610c0c565b61064c5760405162461bcd60e51b8152600401610435906119db565b6104d6838383610c6b565b6104d683838360405180602001604052806000815250610824565b6000818152600260205260408120546001600160a01b0316806103025760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610435565b600860205260009081526040902080546106eb90611863565b80601f016020809104026020016040519081016040528092919081815260200182805461071790611863565b80156107645780601f1061073957610100808354040283529160200191610764565b820191906000526020600020905b81548152906001019060200180831161074757829003601f168201915b505050505081565b60006001600160a01b0382166107d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610435565b506001600160a01b031660009081526003602052604090205490565b6107fa610dcf565b6108046000610e29565b565b60606001805461031790611863565b610820338383610e7b565b5050565b61082e3383610c0c565b61084a5760405162461bcd60e51b8152600401610435906119db565b61085684848484610f49565b50505050565b606061086782610977565b600061087e60408051602081019091526000815290565b9050600081511161089e57604051806020016040528060008152506108c9565b806108a884610f7c565b6040516020016108b9929190611a28565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610906610dcf565b6001600160a01b03811661096b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610435565b61097481610e29565b50565b6000818152600260205260409020546001600160a01b03166109745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610435565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a0b82610672565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600060606000610aa285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506040805180820190915260018152601d60f91b60208201529350915061100f9050565b90506000811215610aec5760405162461bcd60e51b815260206004820152601460248201527314d95c185c985d1bdc881b5d5cdd08195e1a5cdd60621b6044820152606401610435565b6000610b4686600187610aff8287611a6d565b92610b0c93929190611a80565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110a692505050565b905060006003610b568488611a6d565b610b609190611a6d565b905080600003610b8757816040518060200160405280600081525094509450505050610bfb565b3660008888610b97876002611aaa565b90610ba360018c611a6d565b92610bb093929190611a80565b9150915083828281818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959c50919a50505050505050505050505b9250929050565b6104d6838361117e565b600080610c1883610672565b9050806001600160a01b0316846001600160a01b03161480610c3f5750610c3f81856108d0565b80610c635750836001600160a01b0316610c588461039a565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c7e82610672565b6001600160a01b031614610ca45760405162461bcd60e51b815260040161043590611abd565b6001600160a01b038216610d065760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610435565b826001600160a01b0316610d1982610672565b6001600160a01b031614610d3f5760405162461bcd60e51b815260040161043590611abd565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146108045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610435565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610edc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610435565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f54848484610c6b565b610f6084848484611198565b6108565760405162461bcd60e51b815260040161043590611b02565b60606000610f8983611299565b600101905060008167ffffffffffffffff811115610fa957610fa961173e565b6040519080825280601f01601f191660200182016040528015610fd3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fdd57509392505050565b8151600090839060011461102557611025611b54565b825b8551811015611099578160008151811061104357611043611b6a565b602001015160f81c60f81b6001600160f81b03191686828151811061106a5761106a611b6a565b01602001516001600160f81b031916036110875791506108c99050565b8061109181611b80565b915050611027565b5060001995945050505050565b600080805b83518110156111775760008482815181106110c8576110c8611b6a565b016020015160f81c9050603081108015906110e4575060398111155b15611110576110f4603082611a6d565b6110ff84600a611b99565b6111099190611aaa565b9250611164565b60405162461bcd60e51b815260206004820152602360248201527f696e76616c696420696e7075742c206f6e6c79206e756d6265727320616c6c6f6044820152621dd95960ea1b6064820152608401610435565b508061116f81611b80565b9150506110ab565b5092915050565b610820828260405180602001604052806000815250611371565b60006001600160a01b0384163b1561128e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111dc903390899088908890600401611bb0565b6020604051808303816000875af1925050508015611217575060408051601f3d908101601f1916820190925261121491810190611bed565b60015b611274573d808015611245576040519150601f19603f3d011682016040523d82523d6000602084013e61124a565b606091505b50805160000361126c5760405162461bcd60e51b815260040161043590611b02565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c63565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112d85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611304576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061132257662386f26fc10000830492506010015b6305f5e100831061133a576305f5e100830492506008015b612710831061134e57612710830492506004015b60648310611360576064830492506002015b600a83106103025760010192915050565b61137b83836113a4565b6113886000848484611198565b6104d65760405162461bcd60e51b815260040161043590611b02565b6001600160a01b0382166113fa5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610435565b6000818152600260205260409020546001600160a01b03161561145f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610435565b6000818152600260205260409020546001600160a01b0316156114c45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610435565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461097457600080fd5b60006020828403121561155757600080fd5b81356108c98161152f565b60005b8381101561157d578181015183820152602001611565565b50506000910152565b6000815180845261159e816020860160208601611562565b601f01601f19169290920160200192915050565b6020815260006108c96020830184611586565b6000602082840312156115d757600080fd5b5035919050565b80356001600160a01b03811681146115f557600080fd5b919050565b6000806040838503121561160d57600080fd5b611616836115de565b946020939093013593505050565b6000806000806060858703121561163a57600080fd5b611643856115de565b935060208501359250604085013567ffffffffffffffff8082111561166757600080fd5b818701915087601f83011261167b57600080fd5b81358181111561168a57600080fd5b88602082850101111561169c57600080fd5b95989497505060200194505050565b6000806000606084860312156116c057600080fd5b6116c9846115de565b92506116d7602085016115de565b9150604084013590509250925092565b6000602082840312156116f957600080fd5b6108c9826115de565b6000806040838503121561171557600080fd5b61171e836115de565b91506020830135801515811461173357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561176a57600080fd5b611773856115de565b9350611781602086016115de565b925060408501359150606085013567ffffffffffffffff808211156117a557600080fd5b818701915087601f8301126117b957600080fd5b8135818111156117cb576117cb61173e565b604051601f8201601f19908116603f011681019083821181831017156117f3576117f361173e565b816040528281528a602084870101111561180c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561184357600080fd5b61184c836115de565b915061185a602084016115de565b90509250929050565b600181811c9082168061187757607f821691505b60208210810361189757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104d657600081815260208120601f850160051c810160208610156118c45750805b601f850160051c820191505b818110156118e3578281556001016118d0565b505050505050565b815167ffffffffffffffff8111156119055761190561173e565b611919816119138454611863565b8461189d565b602080601f83116001811461194e57600084156119365750858301515b600019600386901b1c1916600185901b1785556118e3565b600085815260208120601f198616915b8281101561197d5788860151825594840194600190910190840161195e565b508582101561199b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60018060a01b03841681528260208201526060604082015260006119d26060830184611586565b95945050505050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611a3a818460208801611562565b835190830190611a4e818360208801611562565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030257610302611a57565b60008085851115611a9057600080fd5b83861115611a9d57600080fd5b5050820193919092039150565b8082018082111561030257610302611a57565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611b9257611b92611a57565b5060010190565b808202811582820484141761030257610302611a57565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611be390830184611586565b9695505050505050565b600060208284031215611bff57600080fd5b81516108c98161152f56fea264697066735822122033fb3884db8b2f26425e1a0e6e8681aee5b8d4b9509b1f0e9a9fcf49c4bf413064736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_symbol";
            readonly type: "string";
        }, {
            readonly internalType: "address";
            readonly name: "_imx";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "approved";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "blueprint";
            readonly type: "bytes";
        }];
        readonly name: "AssetMinted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "blueprints";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "imx";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "quantity";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "mintingBlob";
            readonly type: "bytes";
        }];
        readonly name: "mintFor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): AssetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Asset;
}
export {};
