import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MockWallet, MockWalletInterface } from "../../../contracts/mocks/MockWallet";
type MockWalletConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockWallet__factory extends ContractFactory {
    constructor(...args: MockWalletConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockWallet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockWallet;
    connect(signer: Signer): MockWallet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610881806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806366d741de1461005c578063b030667114610071578063bc197c8114610084578063f23a6e61146100b4578063f6661621146100c7575b600080fd5b61006f61006a3660046103b8565b6100da565b005b61006f61007f36600461044e565b610145565b610097610092366004610527565b6101b5565b6040516001600160e01b0319909116815260200160405180910390f35b6100976100c23660046105e2565b61022a565b61006f6100d536600461065a565b610299565b604051631759616b60e11b81526001600160a01b03861690632eb2c2d69061010c9087908790879087906004016106ea565b600060405180830381600087803b15801561012657600080fd5b505af115801561013a573d6000803e3d6000fd5b505050505050505050565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b5050505050505050565b60007f404d80214303028d7ded1360d78a460a213e89a5a2c21ae1c90462629b422fe089898989898989896040516101f49897969594939291906107a0565b60405180910390a1507fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b60007fe4b060c773f3fcca980bf840b0e2856ca36598bb4da2c0c3913b89050630df3787878787878760405161026596959493929190610804565b60405180910390a1507ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c40161010c565b80356001600160a01b038116811461030257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261032e57600080fd5b8135602067ffffffffffffffff8083111561034b5761034b610307565b8260051b604051601f19603f8301168101818110848211171561037057610370610307565b60405293845285810183019383810192508785111561038e57600080fd5b83870191505b848210156103ad57813583529183019190830190610394565b979650505050505050565b600080600080600060a086880312156103d057600080fd5b6103d9866102eb565b94506103e7602087016102eb565b93506103f5604087016102eb565b9250606086013567ffffffffffffffff8082111561041257600080fd5b61041e89838a0161031d565b9350608088013591508082111561043457600080fd5b506104418882890161031d565b9150509295509295909350565b6000806000806080858703121561046457600080fd5b61046d856102eb565b935061047b602086016102eb565b9250610489604086016102eb565b9396929550929360600135925050565b60008083601f8401126104ab57600080fd5b50813567ffffffffffffffff8111156104c357600080fd5b6020830191508360208260051b85010111156104de57600080fd5b9250929050565b60008083601f8401126104f757600080fd5b50813567ffffffffffffffff81111561050f57600080fd5b6020830191508360208285010111156104de57600080fd5b60008060008060008060008060a0898b03121561054357600080fd5b61054c896102eb565b975061055a60208a016102eb565b9650604089013567ffffffffffffffff8082111561057757600080fd5b6105838c838d01610499565b909850965060608b013591508082111561059c57600080fd5b6105a88c838d01610499565b909650945060808b01359150808211156105c157600080fd5b506105ce8b828c016104e5565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156105fb57600080fd5b610604876102eb565b9550610612602088016102eb565b94506040870135935060608701359250608087013567ffffffffffffffff81111561063c57600080fd5b61064889828a016104e5565b979a9699509497509295939492505050565b600080600080600060a0868803121561067257600080fd5b61067b866102eb565b9450610689602087016102eb565b9350610697604087016102eb565b94979396509394606081013594506080013592915050565b600081518084526020808501945080840160005b838110156106df578151875295820195908201906001016106c3565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090610716908301856106af565b828103606084015261072881856106af565b838103608090940193909352505060008152602001949350505050565b81835260006001600160fb1b0383111561075e57600080fd5b8260051b80836020870137939093016020019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a0604082018190526000906107cd908301888a610745565b82810360608401526107e0818789610745565b905082810360808401526107f5818587610777565b9b9a5050505050505050505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905260009061083f9083018486610777565b9897505050505050505056fea26469706673582212207ef7544ff16aebc11ef15c5dac36583369d0063b87314da7c1bb2ca08671220464736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "Received";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "ReceivedBatch";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "tokenIds";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "amounts";
            readonly type: "uint256[]";
        }];
        readonly name: "batchTransfer1155";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "ids";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155BatchReceived";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155Received";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "transfer1155";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferNFT";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MockWalletInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockWallet;
}
export {};
