import merge from 'ts-deepmerge';

import { MakeResponsive, TooltipSize } from '../../types';
import { BiomeTheme } from '../../types/theme';
import { isError } from '../../utils/textStyleHelpers';

export const baseContainerSx = {
  position: 'absolute',
  maxw: '320px',
  brad: 'base.borderRadius.x4',
  boxShadow: 'base.shadow.500',
  zIndex: 'base.zLevel.tooltip',
  background: 'base.color.neutral.500',
  textAlign: 'center',
};

export function getContainerStyles({
  size,
  theme,
}: {
  size: TooltipSize;
  theme: BiomeTheme;
}) {
  switch (size) {
    case 'small':
      return {
        padding: theme.base.spacing.x3,
      };

    case 'large':
      return {
        padding: theme.base.spacing.x5,
      };

    case 'medium':
    default:
      return {
        padding: theme.base.spacing.x4,
      };
  }
}

export function responsiveContainerStyles({
  size,
  theme,
}: {
  size: MakeResponsive<TooltipSize>;
  theme: BiomeTheme;
}) {
  const sizeAsArray = Array.isArray(size) ? [...size] : [size];
  sizeAsArray.shift();

  const sizeStyles = merge(
    ...sizeAsArray.map((responsiveSize, index) => {
      if (responsiveSize != null && !isError(responsiveSize)) {
        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;
        return {
          [mediaStyleRule]: getContainerStyles({
            size: responsiveSize,
            theme,
          }),
        };
      }
      return {};
    }),
  );

  return sizeStyles;
}
