import { useEffect } from 'react';

/**
 * This function adds an event listener to the window object that triggers a callback function when
 * there are unsaved changes.
 * @param {boolean} unsavedChanges - A boolean value indicating whether there are unsaved changes in
 * the current state of the application.
 * @param callback - The `callback` parameter is a function that will be executed when the user tries
 * to leave the current page or close the browser window/tab, but only if there are unsaved changes.
 * The purpose of this function is to give the user a chance to save their changes before leaving the
 * page.
 */
export const useCallbackWhenDirty = (
  unsavedChanges: boolean,
  callback: () => boolean,
) => {
  useEffect(() => {
    if (unsavedChanges) {
      window.addEventListener('unload', callback);
    }
    return () => window.removeEventListener('unload', callback);
  }, [unsavedChanges, callback]);
};
