import { BodySize, BodyWeight } from '@biom3/design-tokens';
import { ReactElement } from 'react';

import { StandardComponentWithProps } from '../../../types/shared';
import { GetMultiTextProps } from '../../../types/text';
import { cloneElementWithCssProp } from '../../../utils';
import { staticMiddleEllipsis } from '../../../utils/ellipsisHelpers';
import { Body } from '../Body';

export type EllipsizedTextBaseProps = StandardComponentWithProps<
  HTMLSpanElement,
  {
    text: string;
    leftSideLength?: number;
    rightSideLength?: number;
    use?: ReactElement;
  }
>;

export type EllipsizedTextProps<
  RC extends ReactElement | undefined,
  Use extends ReactElement | undefined,
> = GetMultiTextProps<RC, Use, EllipsizedTextBaseProps>;

export function EllipsizedText<
  RC extends ReactElement | undefined = undefined,
  Use extends ReactElement | undefined = undefined,
>({
  leftSideLength = 8,
  rightSideLength = 4,
  text,
  rc = <span />,
  sx,
  ...props
}: EllipsizedTextProps<RC, Use>) {
  const { use, ...otherProps } =
    'use' in props ? props : { ...props, use: undefined };
  const { size } = 'size' in props ? props : { size: undefined };
  const { weight } = 'weight' in props ? props : { weight: undefined };
  const content = staticMiddleEllipsis({
    leftSideLength,
    rightSideLength,
    text,
  });
  return cloneElementWithCssProp(
    use || <Body size={size as BodySize} weight={weight as BodyWeight} />,
    {
      ...otherProps,
      rc,
      sx,
      children: content,
    },
  );
}

EllipsizedText.displayName = 'EllipsizedText';
