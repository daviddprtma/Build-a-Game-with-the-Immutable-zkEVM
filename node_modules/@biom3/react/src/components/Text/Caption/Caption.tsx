import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useTheme } from '../../../hooks';
import { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';
import { CaptionProps } from '../../../types/text';
import { cloneElementWithCssProp } from '../../../utils';
import { setDefaultSxTextColor } from '../../../utils/styleHelpers';
import { getCaptionTextStyles } from '../../../utils/textStyleHelpers';

export const DEFAULT_CAPTION_COLOR = 'base.color.text.primary';
export const DEFAULT_CAPTION_SIZE = 'medium';

export function Caption<RC extends ReactElement | undefined = undefined>({
  size = DEFAULT_CAPTION_SIZE,
  weight = 'regular',
  rc = <span />,
  sx = {},
  testId,
  children,
  domRef,
  ...spanDomAttributes
}: CaptionProps<RC>) {
  const themeProps = useTheme();
  const customStyles = useConvertSxToEmotionStyles(
    merge(setDefaultSxTextColor(sx, DEFAULT_CAPTION_COLOR), sx),
  );

  const css = merge(
    getCaptionTextStyles({ themeProps, size, weight }),
    customStyles,
  );

  return cloneElementWithCssProp(rc, {
    ...spanDomAttributes,
    ...(testId ? { 'data-testid': testId } : {}),
    ...(domRef ? { ref: domRef } : {}),
    css,
    children,
  });
}

Caption.displayName = 'Caption';
