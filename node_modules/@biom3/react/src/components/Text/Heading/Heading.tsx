import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useTheme } from '../../../hooks';
import { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';
import { HeadingProps } from '../../../types/text';
import { cloneElementWithCssProp } from '../../../utils';
import { slugify } from '../../../utils/slugHelpers';
import { setDefaultSxTextColor } from '../../../utils/styleHelpers';
import { getHeadingTextStyles } from '../../../utils/textStyleHelpers';

export const HEADING_DEFAULT_STYLES = {
  size: 'medium',
  weight: 'regular',
} as const;

export const DEFAULT_HEADING_COLOR = 'base.color.text.primary';

export function Heading<RC extends ReactElement | undefined = undefined>({
  size = HEADING_DEFAULT_STYLES.size,
  weight = HEADING_DEFAULT_STYLES.weight,
  testId,
  children,
  sx = {},
  rc = <h1 />,
  domRef,
  autoGenerateId,
  id = autoGenerateId && typeof children === 'string'
    ? slugify(children)
    : undefined,
  ...headingDomAttributes
}: HeadingProps<RC>) {
  const themeProps = useTheme();
  const customStyles = useConvertSxToEmotionStyles(
    merge(setDefaultSxTextColor(sx, DEFAULT_HEADING_COLOR), sx),
  );

  const css = merge(
    getHeadingTextStyles({ themeProps, size, weight }),
    customStyles,
  );

  return cloneElementWithCssProp(rc, {
    ...headingDomAttributes,
    ...(testId ? { 'data-testid': testId } : {}),
    ...(domRef ? { ref: domRef } : {}),
    css,
    id,
    children,
  });
}

Heading.displayName = 'Heading';
