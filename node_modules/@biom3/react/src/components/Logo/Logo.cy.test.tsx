import { useState } from 'react';

import { cyMountWithProviders, cySmartGet } from '../../utils/testHelpers';
import { Logo } from './Logo';

describe('<Logo />', () => {
  it('should have correct displayName', () => {
    expect(Logo.displayName).to.eq('Logo');
  });

  it('should correctly fetch icon, only when it doesnt already exist in cache', () => {
    cy.intercept(
      'GET',
      '**/logos/PassportSymbol.json',
      cy.spy().as('fetchPassportSymbolSpy'),
    ).as('fetchPassportSymbol');
    cy.intercept(
      'GET',
      '**/logos/MetaMaskSymbol.json',
      cy.spy().as('fetchMetaMaskSymbolSpy'),
    ).as('fetchMetaMaskSymbol');
    function ToggleLogoDemoApp() {
      const [swapLogo, setSwapLogo] = useState(false);
      return (
        <Logo
          onClick={() => setSwapLogo(old => !old)}
          logo={swapLogo ? 'MetaMaskSymbol' : 'PassportSymbol'}
          sx={{ w: 'base.icon.size.600' }}
          testId="moo"
        />
      );
    }

    cyMountWithProviders(<ToggleLogoDemoApp />);
    cySmartGet('@fetchPassportSymbolSpy').its('callCount').should('equal', 1);
    cySmartGet('@fetchMetaMaskSymbolSpy').its('callCount').should('equal', 0);
    cySmartGet('moo').click();
    cySmartGet('@fetchMetaMaskSymbolSpy').its('callCount').should('equal', 1);
    cySmartGet('moo').click();
    cySmartGet('moo').click();
    cySmartGet('moo').click();
    cySmartGet('moo').click();
    cySmartGet('@fetchMetaMaskSymbolSpy').its('callCount').should('equal', 1);
    cySmartGet('@fetchPassportSymbolSpy').its('callCount').should('equal', 1);
  });
});
