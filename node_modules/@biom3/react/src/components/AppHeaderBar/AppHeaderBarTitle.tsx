import { useTheme } from '@emotion/react';
import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import {
  GetHybridClickableRCandDomProps,
  isBaseClickable,
  isBox,
} from '../../types/clickable';
import { MakeResponsive } from '../../types/shared';
import { getStartingSize } from '../../utils/styleHelpers';
import { lineClamp } from '../../utils/sxChunks';
import { Box } from '../Box';
import { BaseClickable } from '../Clickable';
import {
  APP_HEADER_BAR_SIZES,
  AppHeaderBarContentAlign,
  AppHeaderBarSize,
  DEFAULT_APP_HEADER_BAR_SIZE,
} from './shared';
import { renderResponsiveTitleStyles, renderTitleStyles } from './styles';

export type AppHeaderBarTitleProps<
  RC extends ReactElement | undefined,
  OnClick extends Function | undefined,
> = GetHybridClickableRCandDomProps<RC, OnClick> & {
  size?: MakeResponsive<AppHeaderBarSize>;
  contentAlign?: AppHeaderBarContentAlign;
};

export function AppHeaderBarTitle<
  RC extends ReactElement | undefined = undefined,
  OnClick extends Function | undefined = undefined,
>({
  size = DEFAULT_APP_HEADER_BAR_SIZE,
  sx = {},
  contentAlign,
  rc,
  ...otherProps
}: AppHeaderBarTitleProps<RC, OnClick>) {
  const { onClick } = 'onClick' in otherProps ? otherProps : { onClick: null };
  const baseClickableProps = { onClick, rc, ...otherProps };
  const themeProps = useTheme();
  const startingSize = getStartingSize(
    size,
    DEFAULT_APP_HEADER_BAR_SIZE,
    APP_HEADER_BAR_SIZES,
  );
  const mergedSx = merge(
    { color: 'base.color.text.primary' },
    lineClamp(1),
    contentAlign === 'left'
      ? {
          flex: 1,
        }
      : {
          position: 'absolute',
          left: 0,
          w: '100%',
          px: 'base.spacing.x5',
          textAlign: 'center',
        },
    renderTitleStyles({ theme: themeProps, size: startingSize }),
    renderResponsiveTitleStyles({
      theme: themeProps,
      size,
    }),
    sx,
  );

  return isBaseClickable(onClick, rc, false, baseClickableProps) ? (
    <BaseClickable {...baseClickableProps} sx={mergedSx} />
  ) : isBox(onClick, rc, false, otherProps) ? (
    <Box {...otherProps} rc={rc || <h1 />} sx={mergedSx} />
  ) : null;
}

AppHeaderBarTitle.displayName = 'AppHeaderBar.Title';
