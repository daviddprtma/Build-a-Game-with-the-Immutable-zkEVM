import { ReactElement, useMemo } from 'react';
import merge from 'ts-deepmerge';

import { useGetSubcomponentChildren } from '../../hooks';
import { BiomeTheme } from '../../types/theme';
import { Box, BoxWithRCAndDomProps } from '../Box';
import { SpineMenuItem } from './SpineMenuItem';
import { spineMenuSx } from './styles';

export const SPINE_MENU_SIZES = ['small', 'medium', 'large'] as const;
export const DEFAULT_SPINE_MENU_SIZE: SpineMenuSize = 'medium';
export type SpineMenuSize = (typeof SPINE_MENU_SIZES)[number];

export type SpineMenuBaseProps<
  RC extends ReactElement | undefined = undefined,
> = BoxWithRCAndDomProps<RC> & { spinePosition?: 'left' | 'right' };

export function SpineMenu<RC extends ReactElement | undefined = undefined>({
  sx = {},
  children,
  // @TODO: size is not currently supported, but will be in the future
  // size = DEFAULT_SPINE_MENU_SIZE,
  rc = <aside />,
  spinePosition = 'left',
  ...props
}: SpineMenuBaseProps<RC>) {
  const items = useGetSubcomponentChildren(children, SpineMenuItem);
  const mergedSx = useMemo(
    () =>
      merge(
        spineMenuSx,
        {
          brad: (theme: BiomeTheme) =>
            spinePosition === 'left'
              ? `0px ${theme.base.borderRadius.x8} 0px 0px`
              : `${theme.base.borderRadius.x8} 0px 0px 0px`,
        },
        sx,
      ),
    [spinePosition, sx],
  );
  return (
    <Box {...props} rc={rc} sx={mergedSx}>
      {items}
    </Box>
  );
}

SpineMenu.displayName = 'SpineMenu';
SpineMenu.Item = SpineMenuItem;
