import { cyMountWithProviders, cySmartGet } from '../../utils/testHelpers';
import { Badge } from '../Badge';
import { Button } from '../Clickable';
import { Icon } from '../Icon';
import { Body, Caption } from '../Text';
import { SpineMenu } from './SpineMenu';

describe('<SpineMenu />', () => {
  it('should render as if on the left hand side, by default', () => {
    cyMountWithProviders(<SpineMenu testId="moo" />);
    cySmartGet('moo').should('have.css', 'border-radius', '0px 16px 0px 0px');
  });

  it('should render as if on the right hand side, when neccissary', () => {
    cyMountWithProviders(<SpineMenu testId="moo" spinePosition="right" />);
    cySmartGet('moo').should('have.css', 'border-radius', '16px 0px 0px');
  });

  it('should render as a <aside> by default, as anything the user specifies', () => {
    cyMountWithProviders(<SpineMenu testId="moo" />);
    cySmartGet('moo').its('0.nodeName').should('eq', 'ASIDE');

    cyMountWithProviders(<SpineMenu testId="moo" rc={<section />} />);
    cySmartGet('moo').its('0.nodeName').should('eq', 'SECTION');
  });

  it('should correctly forward domRef prop', () => {
    const ref = cy.stub().as('refStub');
    cySmartGet('@refStub').should('not.have.been.calledOnce');
    cyMountWithProviders(<SpineMenu testId="moo" domRef={ref} />);
    cySmartGet('@refStub').should('have.been.calledWithMatch', {
      nodeName: 'ASIDE',
    });
  });

  it('should correctly accept sx styles', () => {
    cyMountWithProviders(<SpineMenu testId="moo" sx={{ bg: 'gold' }} />);
    cySmartGet('moo').should('have.backgroundColor', 'gold');
  });

  it('should not render any content that is not a sub-component', () => {
    cyMountWithProviders(
      <SpineMenu>
        <Button testId="button">button wont show</Button>
        <div data-testid="hidden">something that also wont show</div>
        <>something that wont show up</>
        <SpineMenu.Item testId="moo">
          <SpineMenu.Item.Label>some title text</SpineMenu.Item.Label>
        </SpineMenu.Item>
        <SpineMenu.Item testId="cow">
          <Body>also render some text</Body>
        </SpineMenu.Item>
      </SpineMenu>,
    );

    cySmartGet('moo').should('exist').and('have.text', 'some title text');
    cySmartGet('cow').should('exist').and('have.text', 'also render some text');
    cySmartGet('hidden').should('not.exist');
    cySmartGet('something that wont show up').should('not.exist');
    cySmartGet('button').should('not.exist');
  });

  context('Subcomponents', () => {
    it('should all accept sx props', () => {
      cyMountWithProviders(
        <SpineMenu>
          <SpineMenu.Item testId="moo" sx={{ bg: 'gold' }}>
            <SpineMenu.Item.Icon
              testId="icon"
              sx={{ bg: 'gold' }}
              icon="Discord"
            />
            <SpineMenu.Item.Badge testId="badge" sx={{ bg: 'gold' }} />
            <SpineMenu.Item.Label testId="label" sx={{ bg: 'gold' }}>
              some title text
            </SpineMenu.Item.Label>
          </SpineMenu.Item>
        </SpineMenu>,
      );

      cySmartGet('moo').should('have.backgroundColor', 'gold');
      cySmartGet('icon').should('have.backgroundColor', 'gold');
      cySmartGet('badge').should('have.backgroundColor', 'gold');
      cySmartGet('label').should('have.backgroundColor', 'gold');
    });

    it('should all only render supported children', () => {
      cyMountWithProviders(
        <SpineMenu>
          <SpineMenu.Item>
            <Icon icon="Discord" testId="plainIcon" />
            <Badge testId="plainBadge" />
            <Body testId="plainLabel">some title text</Body>
          </SpineMenu.Item>
        </SpineMenu>,
      );
      cySmartGet('plainIcon').should('exist');
      cySmartGet('plainBadge').should('exist');
      cySmartGet('plainLabel').should('exist');

      cyMountWithProviders(
        <SpineMenu>
          <SpineMenu.Item>
            <SpineMenu.Item.Icon testId="subcomponentIcon" icon="Discord" />
            <SpineMenu.Item.Badge testId="subcomponentBadge" />
            <SpineMenu.Item.Label testId="subcomponentLabel">
              some title text
            </SpineMenu.Item.Label>
          </SpineMenu.Item>
        </SpineMenu>,
      );

      cySmartGet('subcomponentIcon').should('exist');
      cySmartGet('subcomponentBadge').should('exist');
      cySmartGet('subcomponentLabel').should('exist');

      cyMountWithProviders(
        <SpineMenu>
          <SpineMenu.Item>
            <>this wont render</>
            <Caption testId="caption">this wont render</Caption>
            <div data-testid="div">neither will this</div>
          </SpineMenu.Item>
        </SpineMenu>,
      );

      cySmartGet('div').should('not.exist');
      cySmartGet('this wont render').should('not.exist');
      cySmartGet('caption').should('not.exist');
    });
  });
});
