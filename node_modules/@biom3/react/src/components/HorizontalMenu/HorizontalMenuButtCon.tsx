import { ClassNames, DistributiveOmit } from '@emotion/react';
import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useTheme } from '../../hooks';
import { ButtConProps, BUTTON_SIZES } from '../../types/clickable';
import { getStartingSize } from '../../utils/styleHelpers';
import { ButtCon } from '../Clickable';
import { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';
import {
  buttonSxProps,
  getButtonStyles,
  renderResponsiveButtonStyles,
} from './styles';

export type HorizontalMenuButtConProps<
  RC extends ReactElement | undefined = undefined,
> = DistributiveOmit<ButtConProps<RC>, 'variant'> & { selected?: boolean };

export function HorizontalMenuButtCon<
  RC extends ReactElement | undefined = undefined,
>({
  sx = {},
  size = 'medium',
  selected,
  ...props
}: HorizontalMenuButtConProps<RC>) {
  const themeProps = useTheme();
  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);
  const { styles: responsiveStyles } = renderResponsiveButtonStyles({
    size,
    themeProps,
  });
  const mergedSx = merge(
    buttonSxProps,
    responsiveStyles,
    getButtonStyles({ size: startingSize, themeProps }),
    sx,
  );

  return (
    <ClassNames>
      {({ cx }) => (
        <ButtCon
          {...props}
          size={size}
          variant="tertiary"
          sx={mergedSx}
          className={cx({ selected })}
        />
      )}
    </ClassNames>
  );
}

HorizontalMenuButtCon.displayName = 'HorizontalMenuButtCon';
