import { DistributiveOmit } from '@emotion/react';
import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { AspectRatioImage, AspectRatioImageProps } from '../AspectRatioImage';

export type FramedImageProps<RC extends ReactElement | undefined = undefined> =
  DistributiveOmit<AspectRatioImageProps<RC>, 'aspectRatio'> & {
    circularFrame?: boolean;
  };

export function FramedImage<RC extends ReactElement | undefined = undefined>({
  sx = {},
  testId,
  circularFrame = false,
  responsiveSizes = [64, 128, 256, 450],
  className,
  ...props
}: FramedImageProps<RC>) {
  const allStyles = merge(
    {
      display: 'block',
      bg: 'base.color.translucent.standard.100',
      overflow: 'hidden',
      borderRadius: circularFrame ? '50%' : 'base.borderRadius.x2',
      objectFit: 'cover',
      objectPosition: 'center',
    },
    sx,
  );
  return (
    <AspectRatioImage
      {...props}
      className={`${className ?? ''} FramedImage`}
      responsiveSizes={responsiveSizes}
      aspectRatio="1:1"
      testId={testId}
      sx={allStyles}
    />
  );
}

FramedImage.displayName = 'FramedImage';
