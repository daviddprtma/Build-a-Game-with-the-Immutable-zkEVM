import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useTheme } from '../../hooks';
import { MenuItemProps } from '../../types/clickable';
import { DualVariantIconProps } from '../../types/icon';
import { getStartingSize } from '../../utils/styleHelpers';
import { Box } from '../Box';
import { BoxWithRCAndDomProps } from '../Box/Box';
import { FramedImageProps } from '../FramedImage';
import { Icon, IconProps } from '../Icon';
import { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';
import {
  baseFramedIconStyles,
  getFramedContainerSx,
  getResponsiveFramedContainerSx,
} from './styles';

export type MenuItemFramedIconProps<
  RC extends ReactElement | undefined = undefined,
> = BoxWithRCAndDomProps<RC> &
  Pick<IconProps, 'icon'> &
  Pick<DualVariantIconProps, 'variant'> &
  Pick<FramedImageProps<RC>, 'circularFrame'> &
  Pick<MenuItemProps, 'size'>;

export function MenuItemFramedIcon<
  RC extends ReactElement | undefined = undefined,
>({
  icon,
  sx = {},
  testId,
  variant,
  circularFrame,
  size = DEFAULT_MENU_ITEM_SIZE,
  rc = <span />,
  ...props
}: MenuItemFramedIconProps<RC>) {
  const theme = useTheme();
  const startingSize = getStartingSize(
    size,
    DEFAULT_MENU_ITEM_SIZE,
    MENU_ITEM_SIZES,
  );
  const allSx = merge(
    baseFramedIconStyles,
    getFramedContainerSx({ theme, size: startingSize }),
    getResponsiveFramedContainerSx({ theme, size }),
    {
      borderRadius: circularFrame ? '50%' : 'base.borderRadius.x2',
    },
    sx,
  );
  return (
    <Box {...props} rc={rc} testId={testId} sx={allSx}>
      <Icon
        icon={icon}
        variant={variant}
        sx={{
          width: 'base.icon.size.300',
          fill: 'base.color.text.primary',
        }}
      />
    </Box>
  );
}

MenuItemFramedIcon.displayName = 'MenuItem.FramedIcon';
