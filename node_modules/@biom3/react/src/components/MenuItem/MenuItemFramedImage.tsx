import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useTheme } from '../../hooks';
import { MenuItemProps } from '../../types/clickable';
import { getStartingSize } from '../../utils/styleHelpers';
import { FramedImage, FramedImageProps } from '../FramedImage';
import { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';
import {
  baseFramedImageStyles,
  getFramedContainerSx,
  getResponsiveFramedContainerSx,
} from './styles';

export type MenuItemFramedImageProps<
  RC extends ReactElement | undefined = undefined,
> = FramedImageProps<RC> & Pick<MenuItemProps, 'size'>;

export function MenuItemFramedImage<
  RC extends ReactElement | undefined = undefined,
>({
  sx = {},
  rc = <span />,
  size = DEFAULT_MENU_ITEM_SIZE,
  ...props
}: MenuItemFramedImageProps<RC>) {
  const theme = useTheme();
  const startingSize = getStartingSize(
    size,
    DEFAULT_MENU_ITEM_SIZE,
    MENU_ITEM_SIZES,
  );
  const allStyles = merge(
    baseFramedImageStyles,
    getFramedContainerSx({ theme, size: startingSize }),
    getResponsiveFramedContainerSx({ theme, size }),
    sx,
  );
  return <FramedImage {...props} rc={rc} sx={allStyles} />;
}

MenuItemFramedImage.displayName = 'MenuItem.FramedImage';
