import merge from 'ts-deepmerge';

import { useTheme } from '../../hooks';
import { MakeResponsive } from '../../types/shared';
import { getStartingSize } from '../../utils/styleHelpers';
import { lineClamp } from '../../utils/sxChunks';
import { Box, BoxProps } from '../Box';
import {
  DEFAULT_MENU_ITEM_SIZE,
  MENU_ITEM_SIZES,
  MenuItemSize,
} from './shared';
import { renderLabelStyles, renderResponsiveLabelStyles } from './styles';

export type MenuItemLabelProps = BoxProps & {
  size?: MakeResponsive<MenuItemSize>;
};

export function MenuItemLabel({
  size = DEFAULT_MENU_ITEM_SIZE,
  children,
  testId = 'MenuItemLabel',
  sx = {},
  rc = <span />,
  ...props
}: MenuItemLabelProps) {
  const themeProps = useTheme();
  const startingSize = getStartingSize(
    size,
    DEFAULT_MENU_ITEM_SIZE,
    MENU_ITEM_SIZES,
  );
  const labelStyles = merge(
    {
      ...lineClamp(2),
      textAlign: 'left',
      color: 'base.color.text.primary',
    },
    renderLabelStyles({ theme: themeProps, size: startingSize }),
    renderResponsiveLabelStyles({
      theme: themeProps,
      size,
    }),
    sx,
  );
  return (
    <Box {...props} sx={labelStyles} rc={rc} testId={testId}>
      {children}
    </Box>
  );
}

MenuItemLabel.displayName = 'MenuItem.Label';
