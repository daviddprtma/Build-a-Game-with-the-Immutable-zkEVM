import { useTheme } from '@emotion/react';
import { ReactElement, useMemo } from 'react';
import merge from 'ts-deepmerge';

import { useWindowSizeStore } from '../../providers';
import { MenuItemShimmerProps } from '../../types/clickable';
import { getStartingSize } from '../../utils/styleHelpers';
import { Box } from '../Box';
import { ShimmerBox } from '../Shimmer';
import {
  DEFAULT_MENU_ITEM_SIZE,
  isSizeAnArray,
  MENU_ITEM_SIZES,
  MenuItemSize,
} from './shared';
import {
  baseShimmerOuterSx,
  baseStyles,
  renderResponsiveOuterStyles,
  renderShimmerOuterStyles,
  shimmerLeftMaskSx,
  shimmerRightMaskSx,
} from './styles';

export const svgMasks = {
  xSmall: {
    left: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 196 50" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M24 41C32.8366 41 40 33.8366 40 25C40 16.1634 32.8366 9 24 9C15.1634 9 8 16.1634 8 25C8 33.8366 15.1634 41 24 41ZM58 19C56.8954 19 56 19.8954 56 21V29C56 30.1046 56.8954 31 58 31H174C175.105 31 176 30.1046 176 29V21C176 19.8954 175.105 19 174 19H58Z" /></svg>')`,
    right: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 50 50" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M38 25C38 31.6274 32.6274 37 26 37C19.3726 37 14 31.6274 14 25C14 18.3726 19.3726 13 26 13C32.6274 13 38 18.3726 38 25Z" /></svg>')`,
  },
  small: {
    left: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 196 72" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M36 60C49.2548 60 60 49.2548 60 36C60 22.7452 49.2548 12 36 12C22.7452 12 12 22.7452 12 36C12 49.2548 22.7452 60 36 60ZM76 24C76 21.7909 77.7909 20 80 20H192C194.209 20 196 21.7909 196 24V32C196 34.2091 194.209 36 192 36H80C77.7909 36 76 34.2091 76 32V24ZM75 45C75 42.7909 76.7909 41 79 41H135C137.209 41 139 42.7909 139 45V49C139 51.2091 137.209 53 135 53H79C76.7909 53 75 51.2091 75 49V45Z" /></svg>')`,
    right: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 126 72" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M98 52C106.837 52 114 44.8366 114 36C114 27.1634 106.837 20 98 20C89.1634 20 82 27.1634 82 36C82 44.8366 89.1634 52 98 52ZM30 30C27.7909 30 26 31.7909 26 34V38C26 40.2091 27.7909 42 30 42H70C72.2091 42 74 40.2091 74 38V34C74 31.7909 72.2091 30 70 30H30Z" /></svg>')`,
  },
  medium: {
    left: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 196 96" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M36 72C49.2548 72 60 61.2548 60 48C60 34.7452 49.2548 24 36 24C22.7452 24 12 34.7452 12 48C12 61.2548 22.7452 72 36 72ZM76 36C76 33.7909 77.7909 32 80 32H192C194.209 32 196 33.7909 196 36V44C196 46.2091 194.209 48 192 48H80C77.7909 48 76 46.2091 76 44V36ZM76 58C76 55.7909 77.7909 54 80 54H136C138.209 54 140 55.7909 140 58V62C140 64.2091 138.209 66 136 66H80C77.7909 66 76 64.2091 76 62V58Z" /></svg>')`,
    right: `url('data:image/svg+xml;utf8, <svg viewBox="0 0 126 96" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M98 64C106.837 64 114 56.8366 114 48C114 39.1634 106.837 32 98 32C89.1634 32 82 39.1634 82 48C82 56.8366 89.1634 64 98 64ZM30 42C27.7909 42 26 43.7909 26 46V50C26 52.2091 27.7909 54 30 54H70C72.2091 54 74 52.2091 74 50V46C74 43.7909 72.2091 42 70 42H30Z" /></svg>')`,
  },
};

export function MenuItemShimmer<
  RC extends ReactElement | undefined = undefined,
>({
  size = DEFAULT_MENU_ITEM_SIZE,
  emphasized,
  sx = {},
  testId,
  ...props
}: MenuItemShimmerProps<RC>) {
  const { state: width } = useWindowSizeStore(state => state.width);
  const theme = useTheme();
  const { breakpointAsArray } = theme.base;
  const startingSize = getStartingSize(
    size,
    DEFAULT_MENU_ITEM_SIZE,
    MENU_ITEM_SIZES,
  );

  const outerStyles = merge(
    baseShimmerOuterSx,
    renderShimmerOuterStyles({ size: startingSize }),
    renderResponsiveOuterStyles({ size, theme }),
    {
      bgc: emphasized ? baseStyles['&.emphasized'].bgc : 'transparent',
    },
    sx,
  );

  const { left: leftMask, right: rightMask } = useMemo(() => {
    const defaultMasks = svgMasks.medium;
    if (width === null) return defaultMasks;

    if (isSizeAnArray(size)) {
      const actualResponsiveSizes = [...size];
      actualResponsiveSizes.shift();
      return actualResponsiveSizes.reduce((accum, curr, index) => {
        let newAccum = accum;
        if (curr !== null && width >= breakpointAsArray[index]) {
          newAccum = svgMasks[curr satisfies MenuItemSize];
        }
        return newAccum;
      }, defaultMasks);
    }
    if (size === 'medium' || size === 'small' || size === 'xSmall') {
      return svgMasks[size];
    }

    return defaultMasks;
  }, [breakpointAsArray, size, width]);

  return (
    <Box {...props} testId={testId} sx={outerStyles}>
      <Box
        rc={<span />}
        testId={`${testId}__leftMask`}
        sx={{ ...shimmerLeftMaskSx, WebkitMaskImage: leftMask }}
      >
        <ShimmerBox rc={<span />} testId={`${testId}__leftMask__shimmer`} />
      </Box>
      <Box
        rc={<span />}
        testId={`${testId}__rightMask`}
        sx={{
          ...shimmerRightMaskSx,
          WebkitMaskImage: rightMask,
        }}
      >
        <ShimmerBox rc={<span />} testId={`${testId}__rightMask__shimmer`} />
      </Box>
    </Box>
  );
}

MenuItemShimmer.displayName = 'MenuItemShimmer';
