import { describe, expect, it } from '@jest/globals';
import { render, screen, waitFor } from '@testing-library/react';

import { BiomeThemeProvider } from '../../providers/theming/BiomeThemeProvider';
import {
  AllIconKeys,
  dualVariantIcons,
  singleVariantIcons,
} from '../Icon/Icon';
import { DuoCon } from './DuoCon';

export type { SvgIconProps } from '../SvgIcon/SvgIcon';
export { SvgIcon } from '../SvgIcon/SvgIcon';

// @NOTE: normally, because these component tests involve DOM,
// they would be run in cypress. However, because of the sheer number
// of icons, this results in increased cost for the business.
// Thus, these tests are instead run in jest.
// This is an exception to the rule, and should not be used as an example.
// any test which results in the rendering of DOM elements, should still
// be done using cypress
describe('<Duocon />', () => {
  Object.keys({ ...singleVariantIcons, ...dualVariantIcons }).forEach(key => {
    const iconKey = key as AllIconKeys;

    it(`"${key}": renders the correct icon children + container by default`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} sx={{ bg: 'gold' }} testId="moo" />
        </BiomeThemeProvider>,
      );
      await waitFor(async () => {
        const g = await screen.findByTestId('moo__icon__g');
        const paths = g.children;
        expect(paths.length).toBeGreaterThan(0);
        expect(paths[0].nodeName).toMatch(/path|circle/);
      });
      expect(screen.getByTestId('moo__icon').nodeName).toBe('svg');
      expect(screen.getByTestId('moo').nodeName).toBe('DIV');
    });

    it(`"${key}": should allow DuoCon to recieve custom SX styles`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} sx={{ bg: 'gold' }} testId="moo" />
        </BiomeThemeProvider>,
      );
      expect(screen.getByTestId('moo')).toHaveStyle('background: gold');
    });

    it(`"${key}": should allow icon to be rendered at a different size`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} sx={{ w: '100px' }} testId="moo" />
        </BiomeThemeProvider>,
      );
      expect(screen.getByTestId('moo')).toHaveStyle('width: 100px');
    });

    it(`"${key}": should render "regular" variant by default`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} testId="moo" />
        </BiomeThemeProvider>,
      );
      expect(screen.getByTestId('moo__icon').getAttribute('data-variant')).toBe(
        'regular',
      );
    });

    it(`"${key}": should render with "circle" outerShape by default`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} testId="moo" />
        </BiomeThemeProvider>,
      );
      expect(
        screen.getByTestId('moo__outerShape').getAttribute('data-outer-shape'),
      ).toBe('circle');
    });

    it(`"${key}": should render with "octogon" outerShape when neccissary`, async () => {
      render(
        <BiomeThemeProvider>
          <DuoCon icon={iconKey} testId="moo" outerShape="octogon" />
        </BiomeThemeProvider>,
      );
      expect(
        screen.getByTestId('moo__outerShape').getAttribute('data-outer-shape'),
      ).toBe('octogon');
    });
  });
});
