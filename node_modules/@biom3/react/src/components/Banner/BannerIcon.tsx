import { DistributiveOmit, useTheme } from '@emotion/react';
import merge from 'ts-deepmerge';

import { IconVariant } from '../../types';
import { Icon, IconProps } from '../Icon';
import { shouldInvertColoring } from './styles';
import { BannerVariant, DEFAULT_BANNER_VARIANT } from './types';

export type BannerIconProps = DistributiveOmit<IconProps, 'variant'> & {
  variant?: BannerVariant;
  iconVariant?: IconVariant;
};

export function BannerIcon({
  sx = {},
  variant = DEFAULT_BANNER_VARIANT,
  iconVariant,
  ...props
}: BannerIconProps) {
  const theme = useTheme();
  const invertColoring = shouldInvertColoring(variant, theme);
  return (
    <Icon
      {...props}
      variant={iconVariant}
      sx={merge(
        {
          position: 'absolute',
          top: 'base.spacing.x4',
          left: 'base.spacing.x4',
          width: 'base.icon.size.300',
          fill: invertColoring
            ? 'base.color.text.inverse.primary'
            : 'base.color.text.primary',
        },
        sx,
      )}
    />
  );
}

BannerIcon.displayName = 'Banner.Icon';
