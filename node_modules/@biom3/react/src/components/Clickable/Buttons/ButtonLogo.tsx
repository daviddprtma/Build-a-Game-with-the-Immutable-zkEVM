import merge from 'ts-deepmerge';

import { useTheme } from '../../../hooks';
import { ButtonSize, ButtonVariant, MakeResponsive } from '../../../types';
import { Logo, LogoProps } from '../../Logo';
import {
  getButtonIconSizeStyles,
  getButtonIconVariantStyles,
  getResponsiveButtonIconStyles,
} from './styles';

export type ButtonLogoProps = LogoProps & {
  size?: MakeResponsive<ButtonSize>;
  variant?: MakeResponsive<ButtonVariant>;
};

export function ButtonLogo({
  sx = {},
  size = 'medium',
  variant = 'primary',
  domRef,
  logo,
  ...props
}: ButtonLogoProps) {
  const themeProps = useTheme();
  const {
    defaultSize,
    defaultVariant,
    styles: responsiveStyles,
  } = getResponsiveButtonIconStyles({
    size,
    variant,
    themeProps,
  });
  const allStyles = merge(
    getButtonIconSizeStyles(defaultSize, themeProps),
    getButtonIconVariantStyles(defaultVariant, themeProps),
    responsiveStyles,
    sx,
  );
  return <Logo {...props} sx={allStyles} logo={logo} domRef={domRef} />;
}

ButtonLogo.displayName = 'Button.Logo';
