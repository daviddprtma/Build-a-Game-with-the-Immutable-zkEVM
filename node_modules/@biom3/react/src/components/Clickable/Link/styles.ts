import merge from 'ts-deepmerge';

import { LinkVariant } from '../../../types/clickable';
import { BiomeTheme } from '../../../types/theme';

export function renderPrimaryLinkUniqueStyles(themeProps: BiomeTheme) {
  return {
    color: themeProps.base.color.text.link.primary,

    '& > .inner::before': {
      background: themeProps.base.color.text.link.primary,
    },
  };
}

export function renderSecondaryLinkUniqueStyles(themeProps: BiomeTheme) {
  return {
    color: themeProps.base.color.text.link.secondary,

    '& > .inner::before': {
      background: themeProps.base.color.text.link.secondary,
    },
  };
}

export function renderLinkGenericStyles() {
  return {
    '&[disabled]': {
      cursor: 'default',
    },

    '& > .inner': {
      position: 'relative',
    },

    '& > .inner::before': {
      content: "''",
      position: 'absolute',
      left: '0',
      width: '100%',
      bottom: '-0.04em',
      height: '0.07em',
      opacity: 0,
      transformOrigin: 'center bottom',
      transitionProperty: 'opacity, scale',
      transitionDuration: 'base.motion.normal.fast.cssDuration',
      transitionTimingFunction: 'base.motion.normal.fast.cssEase',
    },

    '&:hover:not([disabled]) > .inner::before': {
      opacity: 1,
    },
    '&:active:not([disabled]) > .inner::before': {
      opacity: 1,
      scale: '1 2',
    },
  };
}

export function renderLinkVariantStyles(
  variant: LinkVariant,
  themeProps: BiomeTheme,
) {
  return merge(
    renderLinkGenericStyles(),
    variant === 'primary'
      ? renderPrimaryLinkUniqueStyles(themeProps)
      : renderSecondaryLinkUniqueStyles(themeProps),
  );
}

export function renderLinkIconVariantStyles(
  variant: LinkVariant,
  themeProps: BiomeTheme,
) {
  return {
    fill: themeProps.base.color.text.link[variant],
  };
}
