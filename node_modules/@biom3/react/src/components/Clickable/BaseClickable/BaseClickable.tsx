import { ReactElement } from 'react';
import merge from 'ts-deepmerge';

import { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';
import { BaseClickableWithRCAndDomProps } from '../../../types/clickable';
import { cloneElementWithCssProp } from '../../../utils';

export function BaseClickable<RC extends ReactElement | undefined = undefined>({
  rc = <button />,
  testId,
  sx = {},
  children,
  domRef,
  ...props
}: BaseClickableWithRCAndDomProps<RC>) {
  const { onClick, ...otherProps } =
    'onClick' in props ? props : { ...props, onClick: null };
  const customStyles = useConvertSxToEmotionStyles(sx);

  const css = merge(
    {
      // @NOTE Some basic reset styles:
      padding: 0,
      border: 'none',
      background: 'transparent',
      display: 'inline-flex',
      alignItems: 'baseline',
      cursor: 'pointer',
      textDecoration: 'none',
    },
    customStyles,
  );

  return cloneElementWithCssProp(rc, {
    ...otherProps,
    ...(testId ? { 'data-testid': testId } : {}),
    ...(domRef ? { ref: domRef } : {}),
    ...(onClick ? { onClick } : {}),
    css,
    children,
  });
}

BaseClickable.displayName = 'BaseClickable';
