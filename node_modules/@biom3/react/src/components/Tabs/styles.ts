import merge from 'ts-deepmerge';

export const renderTabStyles = ({
  isActive,
  disabled,
}: {
  isActive: boolean;
  disabled: boolean;
}) => {
  return merge(
    {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      width: '100%',
      flexGrow: '1',
      '.TabsList__vertical > &': {
        flexDirection: 'column',
        minHeight: 'base.spacing.x19',
      },
      '.TabsList__horizontal > &': {
        flexDirection: 'row',
        minHeight: 'base.spacing.x12',
      },
    },
    isActive
      ? {
          backgroundColor: 'base.color.translucent.standard.100',
          color: 'base.color.brand.1',
          cursor: 'pointer',
          borderTopColor: 'base.color.brand.1',
          borderTopWidth: '3px',
          borderTopStyle: 'solid',
        }
      : disabled
      ? {
          cursor: 'not-allowed',
          color: 'base.color.brand.4',
        }
      : {
          backgroundColor: 'base.color.translucent.standard.300',
          '&:hover': {
            backgroundColor: 'base.color.translucent.standard.200',
          },
          '&:active': {
            color: 'base.color.brand.1',
          },
          color: 'base.color.brand.4',
          cursor: 'pointer',
        },
  );
};

export const renderTabTextStyles = ({
  isActive,
  disabled,
}: {
  isActive: boolean;
  disabled: boolean;
}) => {
  return isActive
    ? {}
    : disabled
    ? {
        color: 'base.color.brand.4',
      }
    : {
        color: 'base.color.brand.4',
        '&:hover': {
          color: 'base.color.brand.1',
        },
      };
};

export const renderTabIconStyles = ({
  isActive,
  disabled,
}: {
  isActive: boolean;
  disabled: boolean;
}) => {
  return merge(
    {
      width: 'base.spacing.x6',
      flexShrink: 0,

      '.TabsList__vertical > * > &': {
        marginBottom: 'base.spacing.x1',
      },

      '.TabsList__horizontal > * > &': {
        marginRight: 'base.spacing.x1',
      },
    },

    isActive
      ? {
          fill: 'base.color.brand.1',
        }
      : disabled
      ? {
          fill: 'base.color.brand.4',
        }
      : {
          fill: 'base.color.brand.4',

          '*:hover > &': {
            fill: 'base.color.brand.1',
          },
        },
  );
};

// Tab List
export const renderTabsListStyles = () => {
  return {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    minHeight: 'base.spacing.x12',
    width: '100%',
    flexWrap: 'nowrap',
    columnGap: '1px',
    flexGrow: '1',
  };
};

// Tab Panels
export const renderTabsPanelStyles = () => {
  return {
    background: 'base.color.translucent.standard.100',
    width: '100%',
    minHeight: 'base.spacing.x50',
  };
};
