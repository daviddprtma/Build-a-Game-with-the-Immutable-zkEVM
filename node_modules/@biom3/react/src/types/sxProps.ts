import { Properties } from 'csstype';

import { ResponsiveKey } from './responsive';
import { MakeResponsive } from './shared';
import { GetNarrowedDesignTokens } from './sxThemableProperties';
import { BiomeTheme } from './theme';

export const shortHandCssRuleMapping = {
  c: 'color',
  d: 'display',
  f: 'flex',
  o: 'order',
  pos: 'position',
  m: 'margin',
  mt: 'marginTop',
  mb: 'marginBottom',
  ml: 'marginLeft',
  mr: 'marginRight',
  mx: 'marginX',
  marginX: 'marginX',
  marginY: 'marginY',
  my: 'marginY',
  p: 'padding',
  pt: 'paddingTop',
  pb: 'paddingBottom',
  pr: 'paddingRight',
  pl: 'paddingLeft',
  px: 'paddingX',
  paddingX: 'paddingX',
  py: 'paddingY',
  paddingY: 'paddingY',
  w: 'width',
  maxw: 'maxWidth',
  minw: 'minWidth',
  h: 'height',
  minh: 'minHeight',
  maxh: 'maxHeight',
  bgc: 'backgroundColor',
  bgi: 'backgroundImage',
  bg: 'background',
  b: 'border',
  bl: 'borderLeft',
  br: 'borderRight',
  bt: 'borderTop',
  bb: 'borderBottom',
  brad: 'borderRadius',
  bradtl: 'borderTopLeftRadius',
  bradtr: 'borderTopRightRadius',
  bradbl: 'borderBottomLeftRadius',
  bradbr: 'borderBottomRightRadius',
} as const;

export type SxProps = {
  [P in keyof Properties]?: GetNarrowedDesignTokens<P>;
} & {
  [K in keyof typeof shortHandCssRuleMapping]?: GetNarrowedDesignTokens<K>;
};

export type DescendantSxProps = Record<string, SxProps> | SxProps;
export type DoubleDescendantSxProps =
  | Record<string, DescendantSxProps>
  | SxProps;
export type TripleDescentantSxProps =
  | Record<string, DoubleDescendantSxProps>
  | SxProps;
export type DeeplyNestedSx =
  | SxProps
  | DescendantSxProps
  | DoubleDescendantSxProps
  | TripleDescentantSxProps;

export type SxComponentProps = {
  sx?: DeeplyNestedSx;
};

export type MakeObjectResponsive<T> = {
  [key in ResponsiveKey]?: T;
} & { default: T };

export type MakeFunctionResponsive<T> = (theme: BiomeTheme) => T;

export type MakeValidSxValue<T> =
  | MakeResponsive<T>
  | MakeFunctionResponsive<T>
  | MakeObjectResponsive<T>;

export type ValidSxValues = string | number;

export type Measurement = ValidSxValues | MakeFunctionResponsive<ValidSxValues>;
export type MeasurementAndResponsiveMeasurement =
  | Measurement
  | MakeResponsive<Measurement>
  | MakeObjectResponsive<Measurement>;
