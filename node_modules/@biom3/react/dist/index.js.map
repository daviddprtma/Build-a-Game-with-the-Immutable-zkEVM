{"version":3,"sources":["../src/index.ts","../src/components/Accordion/Accordion.tsx","../src/hooks/responsiveImageSizeHooks.ts","../src/providers/BiomeOverlaysProvider/MountedOverlaysAndProvider.tsx","../src/overlays/DrawerOverlay/DrawerOverlay.tsx","../src/providers/BiomeOverlaysProvider/actions.ts","../src/utils/componentHelpers.ts","../src/utils/createFastContext.tsx","../src/providers/BiomeOverlaysProvider/context.tsx","../src/overlays/DrawerOverlay/styles.ts","../src/overlays/ModalOverlay/ModalOverlay.tsx","../src/utils/sxToEmotionStyles.ts","../src/types/sxProps.ts","../src/overlays/PopoverOverlay/PopoverOverlay.tsx","../src/hooks/usePrevious.ts","../src/utils/positionHelpers.ts","../src/overlays/TooltipOverlay/TooltipOverlay.tsx","../src/components/Text/Body/shared.ts","../src/components/Tooltip/shared.ts","../src/providers/BiomeShadowRootProvider/context.tsx","../src/types/clickable.ts","../src/types/image.ts","../src/types/overlays.ts","../src/components/Text/Body/Body.tsx","../src/hooks/useConvertSxToEmotionStyles.ts","../src/hooks/useTheme.ts","../src/utils/asyncHelpers.ts","../src/utils/colorHelpers.ts","../src/utils/deviceHelpers.ts","../src/utils/dummyImages.ts","../src/utils/ellipsisHelpers.ts","../src/utils/encodeHelpers.ts","../src/utils/imageHelpers.ts","../src/utils/numberHelpers.ts","../src/utils/subcomponentHelpers.ts","../src/components/SmartClone/SmartClone.tsx","../src/hooks/useGetComponentCloneMode.ts","../src/utils/sxChunks.ts","../src/utils/styleHelpers.ts","../src/utils/textStyleHelpers.ts","../src/components/Text/Body/BodyShimmer.tsx","../src/components/Box/Box.tsx","../src/components/Shimmer/ShimmerBox.tsx","../src/components/Shimmer/style.ts","../src/components/Shimmer/ShimmerCircle.tsx","../src/components/Text/Caption/Caption.tsx","../src/components/Text/EllipsizedText/EllipsizedText.tsx","../src/components/Text/Heading/Heading.tsx","../src/utils/slugHelpers.ts","../src/components/Text/LoopingText/LoopingText.tsx","../src/components/Text/RollingText/RollingText.tsx","../src/components/Text/PriceDisplay/PriceDisplay.tsx","../src/components/CloudImage/CloudImage.tsx","../src/types/text.ts","../src/types/tooltip.ts","../src/overlays/TooltipOverlay/styles.ts","../src/overlays/ClientOnlyPortal/ClientOnlyPortal.ts","../src/hooks/useBrowserLayoutEffect.ts","../src/overlays/ToastOverlay/ToastOverlay.tsx","../src/components/Clickable/BaseClickable/BaseClickable.tsx","../src/components/Clickable/Buttons/ButtCon.tsx","../src/components/Icon/Icon.tsx","../src/hooks/useUpdateEffect.ts","../src/utils/svgHelpers.ts","../src/components/SvgIcon/SvgIcon.tsx","../src/components/Clickable/Buttons/ButtConSvgIcon.tsx","../src/components/Clickable/Buttons/styles/index.ts","../src/components/Clickable/Buttons/styles/primaryStyles.ts","../src/components/Clickable/Buttons/styles/shared.ts","../src/components/Clickable/Buttons/styles/secondaryStyles.ts","../src/components/Clickable/Buttons/styles/tertiaryStyles.ts","../src/components/Clickable/Buttons/Button.tsx","../src/components/Clickable/Buttons/ButtonIcon.tsx","../src/components/Clickable/Buttons/ButtonLogo.tsx","../src/components/Logo/DocsHorizontalLockup.tsx","../src/hooks/useFetchLogoContent.ts","../src/components/Logo/DocsHorizontalLockupCompact.tsx","../src/components/Logo/DocsVerticalLockup.tsx","../src/components/Logo/GameStopSymbol.tsx","../src/components/Logo/HubHorizontalLockup.tsx","../src/components/Logo/HubHorizontalLockupCompact.tsx","../src/components/Logo/HubVerticalLockup.tsx","../src/components/Logo/ImmutableHorizontalLockup.tsx","../src/components/Logo/ImmutableSymbol.tsx","../src/components/Logo/ImmutableVerticalLockup.tsx","../src/components/Logo/MagicSymbol.tsx","../src/components/Logo/MetaMaskSymbol.tsx","../src/components/Logo/PassportHorizontalLockup.tsx","../src/components/Logo/PassportHorizontalLockupCompact.tsx","../src/components/Logo/PassportSymbol.tsx","../src/components/Logo/PassportSymbolOutlined.tsx","../src/components/Logo/PassportVerticalLockup.tsx","../src/components/Logo/WalletConnectSymbol.tsx","../src/components/Logo/Logo.tsx","../src/components/Clickable/Buttons/StatefulButtCon.tsx","../src/components/Clickable/Link/Link.tsx","../src/components/Clickable/Link/LinkIcon.tsx","../src/components/Clickable/Link/styles.ts","../src/components/Toast/ToastButtCon.tsx","../src/components/Toast/ToastButton.tsx","../src/components/Toast/ToastMessage.tsx","../src/providers/BiomePortalIdProvider/BiomePortalIdProvider.tsx","../src/providers/BiomeTooltipProvider/context.tsx","../src/providers/BiomeTooltipProvider/MountedTooltipOverlayAndProvider.tsx","../src/providers/BiomeWindowSize/context.tsx","../src/providers/BiomeWindowSize/SetWindowSize.tsx","../src/providers/BiomeWindowSize/index.ts","../src/providers/theming/BiomeThemeProvider/BiomeThemeProvider.tsx","../src/providers/theming/ToggleableThemeProvider/ToggleableThemeProvider.tsx","../src/providers/BiomeCombinedProviders/BiomeCombinedProviders.tsx","../src/hooks/useBrowserEffect.ts","../src/hooks/useCallbackWhenDirty.ts","../src/hooks/useCheckForInvalidPaginationProps.ts","../src/hooks/useClientSide.ts","../src/hooks/useDetectBadImage.ts","../src/hooks/useDetectSvgImage.ts","../src/hooks/useEventListener.ts","../src/hooks/useForwardLocalDomRef.ts","../src/hooks/useGetCurrentSizeClass.ts","../src/hooks/useGetSubcompnentChild.ts","../src/hooks/useGetSubcomponentChildren.ts","../src/hooks/useHover.ts","../src/hooks/useInterval.ts","../src/hooks/useLocalStorage.ts","../src/hooks/useOnClickOutside.ts","../src/hooks/useResizeObserver.ts","../src/hooks/useSplitApartChildrenAndSubComponents.ts","../src/hooks/useTimeout.ts","../src/components/Stack/Stack.tsx","../src/components/Accordion/AccordionExpandedContent.tsx","../src/components/Divider/Divider.tsx","../src/components/Divider/shared.ts","../src/components/Divider/styles.ts","../src/components/Accordion/style.ts","../src/components/Accordion/AccordionTargetSlot.tsx","../src/components/AppHeaderBar/AppHeaderBar.tsx","../src/components/AppHeaderBar/AppHeaderBarLeftButtCon.tsx","../src/components/AppHeaderBar/AppHeaderBarLeftLogo.tsx","../src/components/AppHeaderBar/AppHeaderBarOverflowPopoverMenu.tsx","../src/components/OverflowMenus/OverflowPopoverMenu.tsx","../src/components/Popover/Popover.tsx","../src/components/Popover/PopoverContent.tsx","../src/components/Popover/PopoverTarget.tsx","../src/components/VerticalMenu/VerticalMenu.tsx","../src/components/ExpandableMenuItem/ExpandableMenuItem.tsx","../src/components/MenuItem/MenuItem.tsx","../src/components/TextInput/shared.ts","../src/components/TextInput/TextInput.tsx","../src/components/TextInput/ClearValueButton.tsx","../src/components/TextInput/styles.ts","../src/components/TextInput/TextInputAdornment.tsx","../src/components/TextInput/TextInputButton.tsx","../src/components/TextInput/TextInputFramedImage.tsx","../src/components/FramedImage/FramedImage.tsx","../src/components/AspectRatioImage/AspectRatioImage.tsx","../src/components/TextInput/TextInputIcon.tsx","../src/components/TextInput/TextInputStatefulButtCon.tsx","../src/components/Badge/Badge.tsx","../src/components/Badge/styles.ts","../src/components/MenuItem/MenuItemBadge.tsx","../src/components/MenuItem/MenuItemCaption.tsx","../src/components/MenuItem/shared.ts","../src/components/MenuItem/styles.ts","../src/components/MenuItem/MenuItemFramedIcon.tsx","../src/components/MenuItem/MenuItemFramedImage.tsx","../src/components/MenuItem/MenuItemFramedLogo.tsx","../src/components/MenuItem/MenuItemIcon.tsx","../src/components/MenuItem/MenuItemIntentIcon.tsx","../src/components/MenuItem/MenuItemLabel.tsx","../src/components/MenuItem/MenuItemOverflowDrawerMenu.tsx","../src/components/OverflowMenus/OverflowDrawerMenu.tsx","../src/components/Drawer/Drawer.tsx","../src/components/Drawer/DrawerContent.tsx","../src/components/Modal/ModalContent.tsx","../src/components/Modal/ModalTarget.tsx","../src/components/Drawer/DrawerTarget.tsx","../src/components/MenuItem/MenuItemOverflowPopoverMenu.tsx","../src/components/MenuItem/MenuItemPriceDisplay.tsx","../src/components/MenuItem/MenuItemShimmer.tsx","../src/components/MenuItem/MenuItemStatefulButtCon.tsx","../src/components/ExpandableMenuItem/style.ts","../src/components/InputBar/InputBar.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Checkbox/styles.ts","../src/components/Radio/Radio.tsx","../src/components/Radio/styles.ts","../src/components/Toggle/Toggle.tsx","../src/components/Toggle/styles.ts","../src/components/Select/Option.tsx","../src/components/Select/Select.tsx","../src/components/Select/SelectDefaultFramedImage.tsx","../src/components/Select/SelectDefaultIcon.tsx","../src/components/Select/styles.ts","../src/components/Select/types.ts","../src/components/VerticalMenu/styles.ts","../src/components/AppHeaderBar/AppHeaderBarSlot.tsx","../src/components/AppHeaderBar/shared.ts","../src/components/AppHeaderBar/AppHeaderBarTitle.tsx","../src/components/AppHeaderBar/styles.ts","../src/components/AppHeaderBar/AppHeaderBarTitleLogo.tsx","../src/components/Autocomplete/Autocomplete.tsx","../src/components/Avatar/Avatar.tsx","../src/components/Avatar/styles.ts","../src/components/Banner/Banner.tsx","../src/components/Banner/BannerCaption.tsx","../src/components/Banner/styles.ts","../src/components/Banner/types.ts","../src/components/Banner/BannerIcon.tsx","../src/components/Banner/BannerRightButtCon.tsx","../src/components/Banner/BannerRightButton.tsx","../src/components/Banner/BannerTitle.tsx","../src/components/Card/Card.tsx","../src/components/Card/CardAssetImage.tsx","../src/components/Card/CardButtCon.tsx","../src/components/Card/CardButton.tsx","../src/components/Card/CardCaption.tsx","../src/components/Card/CardDescription.tsx","../src/components/Card/CardFramedImage.tsx","../src/components/Card/styles.ts","../src/components/Card/CardFramedLogo.tsx","../src/components/Card/CardMenuItem.tsx","../src/components/Card/CardTitle.tsx","../src/components/ConfirmationDialog/ConfirmationDialog.tsx","../src/components/Modal/Modal.tsx","../src/components/ConfirmationDialog/ConfirmationDialogContent.tsx","../src/components/DuoCon/DuoCon.tsx","../src/components/DuoCon/styles.ts","../src/components/ConfirmationDialog/ConfirmationDialogContentRiveBox.tsx","../src/components/CountdownTimer/CountdownTimer.tsx","../src/components/CountdownTimer/CountdownTile.tsx","../src/components/CountdownTimer/shared.ts","../src/components/CountdownTimer/styles.ts","../src/components/FormControl/FormControl.tsx","../src/components/NumberStepper/NumberStepper.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/Tooltip/TooltipContent.tsx","../src/components/Tooltip/TooltipTarget.tsx","../src/components/TextArea/shared.ts","../src/components/TextArea/TextArea.tsx","../src/components/TextArea/styles.ts","../src/components/FormControl/FormControlCaption.tsx","../src/components/FormControl/FormControlLabel.tsx","../src/components/FormControl/FormControlValidation.tsx","../src/components/FramedStack/FramedStack.tsx","../src/components/FramedStack/styles.ts","../src/components/GridBox/GridBox.tsx","../src/components/HorizontalMenu/HorizontalMenu.tsx","../src/components/HorizontalMenu/HorizontalMenuButtCon.tsx","../src/components/HorizontalMenu/styles.ts","../src/components/HorizontalMenu/HorizontalMenuButton.tsx","../src/components/LoadingOverlay/LoadingOverlay.tsx","../src/components/LoadingOverlay/LoadingOverlayContent.tsx","../src/components/LoadingOverlay/LoadingOverlayContentLoopingText.tsx","../src/components/LoadingOverlay/LoadingOverlayContentRiveBox.tsx","../src/components/LoadingOverlay/style.ts","../src/components/OnboardingPagination/OnboardingPagination.tsx","../src/components/OnboardingPagination/styles.ts","../src/components/OnboardingPagination/types.ts","../src/components/Pagination/Pagination.tsx","../src/components/PasscodeInput/PasscodeInput.tsx","../src/utils/inputHelpers.ts","../src/components/ProgressBar/ProgressBar.tsx","../src/components/ProgressBar/ProgressBarLeftRollingText.tsx","../src/components/ProgressBar/ProgressBarRightText.tsx","../src/components/ProgressBar/shared.ts","../src/components/ProgressBar/styles.ts","../src/components/RecycleView/RecycleView.tsx","../src/components/RecycleView/style.ts","../src/components/SpineMenu/SpineMenu.tsx","../src/components/SpineMenu/SpineMenuItem.tsx","../src/components/SpineMenu/styles.ts","../src/components/Stepper/shared.ts","../src/components/Stepper/Stepper.tsx","../src/components/Stepper/StepperStep.tsx","../src/components/Stepper/styles.ts","../src/components/SwapStack/SwapStack.tsx","../src/components/SwapStack/styles.ts","../src/components/Table/Table.tsx","../src/components/Table/context.tsx","../src/components/Table/shared.ts","../src/components/Table/style.ts","../src/components/Table/TableBody.tsx","../src/components/Table/TableRow.tsx","../src/components/Table/TableCell.tsx","../src/components/Table/TableCaption.tsx","../src/components/Table/TableFoot.tsx","../src/components/Table/TableHead.tsx","../src/components/Table/TablePageSize.tsx","../src/components/Table/TablePagination.tsx","../src/components/Tabs/Tab.tsx","../src/components/Tabs/styles.ts","../src/components/Tabs/TabsContext.tsx","../src/components/Tabs/TabsList.tsx","../src/components/Tabs/TabsPanel.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Toast/Toast.tsx","../src/components/Toolbar/Toolbar.tsx","../src/components/Toolbar/shared.ts","../src/components/Toolbar/styles.ts","../src/components/Toolbar/ToolbarCaption.tsx","../src/components/Toolbar/ToolbarLeftButtCon.tsx","../src/components/Toolbar/ToolbarRightSlot.tsx","../src/components/Toolbar/ToolbarTitle.tsx"],"sourcesContent":["export * from './components';\nexport * from './hooks';\nexport * from './overlays';\nexport * from './providers';\nexport * from './types';\nexport * from './utils';\n","import { ClassNames } from '@emotion/react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { MouseEventHandler, ReactElement, useCallback, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChild, useTheme } from '../../hooks';\nimport { Box } from '../Box';\nimport { BaseClickable, ButtCon } from '../Clickable';\nimport { SmartClone } from '../SmartClone';\nimport { Stack, StackProps } from '../Stack';\nimport { AccordionExpandedContent } from './AccordionExpandedContent';\nimport {\n  AccordionTargetLeftSlot,\n  AccordionTargetRightSlot,\n} from './AccordionTargetSlot';\nimport { ChevronSide } from './shared';\nimport {\n  buttConSx,\n  clickableAreaSx,\n  expandableAreaSx,\n  getContainerSx,\n} from './style';\n\nexport type AccordionProps<RC extends ReactElement | undefined = undefined> =\n  StackProps<RC> & {\n    chevronSide?: ChevronSide;\n    onExpandChange?: (expanded: boolean) => void;\n    emphasized?: boolean;\n    targetClickOveride?: MouseEventHandler<HTMLButtonElement>;\n  } & (\n      | {\n          expanded: boolean;\n          defaultExpanded?: never;\n        }\n      | {\n          defaultExpanded?: boolean;\n          expanded?: never;\n        }\n    );\n\nexport function Accordion<RC extends ReactElement | undefined = undefined>(\n  props: AccordionProps<RC>,\n) {\n  const {\n    emphasized,\n    expanded,\n    defaultExpanded,\n    children,\n    gap = '0',\n    alignItems = 'stretch',\n    className,\n    onExpandChange,\n    chevronSide = 'left',\n    sx = {},\n    rc = <motion.div />,\n    targetClickOveride,\n    testId = 'Accordion',\n    ...otherProps\n  } = 'expanded' in props\n    ? { ...props, defaultExpanded: undefined }\n    : { ...props, expanded: undefined };\n\n  const theme = useTheme();\n  const { base } = theme;\n  const [uncontrolledExpanded, setUncontrolledExpanded] =\n    useState(defaultExpanded);\n  const expandedValueToUse = expanded ?? uncontrolledExpanded;\n  const targetLeft = useGetSubcomponentChild(children, AccordionTargetLeftSlot);\n  const targetRight = useGetSubcomponentChild(\n    children,\n    AccordionTargetRightSlot,\n  );\n  const expandedContent = useGetSubcomponentChild(\n    children,\n    AccordionExpandedContent,\n  );\n\n  const handleToggle = useCallback(() => {\n    if (typeof expanded === 'undefined') {\n      setUncontrolledExpanded(old => {\n        onExpandChange?.(!old);\n        return !old;\n      });\n    } else {\n      onExpandChange?.(!expanded);\n    }\n  }, [expanded, onExpandChange]);\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <Stack\n          {...otherProps}\n          className={`${className ?? ''} Accordion ${cx({\n            emphasized,\n            expanded: expandedValueToUse,\n          })}`}\n          gap={gap}\n          alignItems={alignItems}\n          rc={rc}\n          sx={merge(getContainerSx(theme), sx)}\n          testId={testId}\n        >\n          <BaseClickable\n            sx={merge(clickableAreaSx, {\n              ...(chevronSide === 'left'\n                ? { pl: 'base.spacing.x15' }\n                : { pr: 'base.spacing.x15' }),\n            })}\n            onClick={targetClickOveride || handleToggle}\n            testId={`${testId}__clickableArea`}\n          >\n            <ButtCon\n              rc={<span />}\n              icon={expandedValueToUse ? 'ChevronCollapse' : 'ChevronExpand'}\n              variant=\"tertiary\"\n              size=\"small\"\n              testId={`${testId}__clickableArea__chevron`}\n              sx={merge(buttConSx, {\n                ...(chevronSide === 'left'\n                  ? { left: 'base.spacing.x3' }\n                  : { right: 'base.spacing.x3' }),\n              })}\n            />\n            <SmartClone testId={`${testId}__clickableArea__targetLeft`}>\n              {targetLeft}\n            </SmartClone>\n            {targetRight && (\n              <SmartClone testId={`${testId}__clickableArea__targetRight`}>\n                {targetRight}\n              </SmartClone>\n            )}\n          </BaseClickable>\n\n          <AnimatePresence>\n            {Boolean(expandedContent) && expandedValueToUse ? (\n              <Box\n                sx={expandableAreaSx}\n                rc={\n                  <motion.div\n                    initial={{\n                      opacity: 0,\n                      height: 0,\n                      overflow: 'hidden',\n                      y: -16,\n                    }}\n                    animate={{\n                      height: 'auto',\n                      opacity: 1,\n                      y: 0,\n                      transitionEnd: {\n                        overflow: 'visible',\n                      },\n                    }}\n                    exit={{\n                      height: 0,\n                      opacity: 0,\n                      overflow: 'hidden',\n                      y: -16,\n                    }}\n                    transition={{\n                      duration: base.motion.normal.fast.jsDuration,\n                      ease: base.motion.normal.fast.jsEase,\n                    }}\n                  />\n                }\n              >\n                <SmartClone\n                  chevronSide={chevronSide}\n                  testId={`${testId}__expandedContent`}\n                >\n                  {expandedContent}\n                </SmartClone>\n              </Box>\n            ) : null}\n          </AnimatePresence>\n        </Stack>\n      )}\n    </ClassNames>\n  );\n}\n\nAccordion.displayName = 'Accordion';\nAccordion.TargetLeftSlot = AccordionTargetLeftSlot;\nAccordion.TargetRightSlot = AccordionTargetRightSlot;\nAccordion.ExpandedContent = AccordionExpandedContent;\n","import { useMemo } from 'react';\n\nimport { useWindowSizeStore } from '../providers';\nimport {\n  DEFAULT_IMAGE_SIZE_VARIANT,\n  IMAGE_SIZE_VARIANTS,\n  ImageComponentKind,\n  ImageSizeVariant,\n  ResponsiveSizes,\n} from '../types/image';\nimport { MakeResponsive } from '../types/shared';\nimport {\n  getImageSizeMapping,\n  pickResponsiveSize,\n  pickSizeInLayout,\n} from '../utils/imageHelpers';\nimport { getStartingSize } from '../utils/styleHelpers';\nimport { useTheme } from './useTheme';\n\nexport function useGetResponsiveImageSizes(\n  size: MakeResponsive<ImageSizeVariant>,\n  componentKind: ImageComponentKind,\n) {\n  const { state: width } = useWindowSizeStore(state => state.width);\n  const theme = useTheme();\n  const {\n    base: { breakpointAsArray },\n  } = theme;\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n\n  const sizeMapping = getImageSizeMapping(componentKind, theme, true);\n  const responsiveSizes = useMemo(() => {\n    const defaultSize = pickResponsiveSize(startingSize, sizeMapping);\n    if (width === null) return defaultSize;\n\n    if (Array.isArray(size)) {\n      const actualResponsiveSizes = [...size] as ImageSizeVariant[];\n      actualResponsiveSizes.shift();\n      return actualResponsiveSizes.reduce((accum, curr, index) => {\n        let newAccum = accum;\n        if (curr !== null && width >= breakpointAsArray[index]) {\n          newAccum = pickResponsiveSize(curr, sizeMapping);\n        }\n        return newAccum;\n      }, defaultSize);\n    }\n\n    return /small|medium|large|xLarge/.test(size)\n      ? pickResponsiveSize(size, sizeMapping)\n      : defaultSize;\n  }, [startingSize, sizeMapping, width, size, breakpointAsArray]);\n\n  return responsiveSizes as ResponsiveSizes;\n}\n\nexport function useGetRelativeImageSizeInLayout(\n  size: MakeResponsive<ImageSizeVariant>,\n  componentKind: ImageComponentKind,\n) {\n  const { state: width } = useWindowSizeStore(state => state.width);\n  const theme = useTheme();\n  const {\n    base: { breakpointAsArray },\n  } = theme;\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const sizeMapping = getImageSizeMapping(componentKind, theme, true);\n  const relativeImageSizeInLayout = useMemo(() => {\n    const defaultSize = pickSizeInLayout(startingSize, sizeMapping);\n    if (width === null) return defaultSize;\n\n    if (Array.isArray(size)) {\n      const actualResponsiveSizes = [...size] as ImageSizeVariant[];\n      actualResponsiveSizes.shift();\n      return actualResponsiveSizes.reduce((accum, curr, index) => {\n        let newAccum = accum;\n        if (curr !== null && width >= breakpointAsArray[index]) {\n          newAccum = pickSizeInLayout(curr, sizeMapping);\n        }\n        return newAccum;\n      }, defaultSize);\n    }\n\n    return /small|medium|large|xLarge/.test(size)\n      ? pickSizeInLayout(size, sizeMapping)\n      : defaultSize;\n  }, [startingSize, sizeMapping, width, size, breakpointAsArray]);\n\n  return relativeImageSizeInLayout;\n}\n","import { ReactNode, useContext } from 'react';\n\nimport { DrawerOverlay, PopoverOverlay } from '../../overlays';\nimport { ClientOnlyPortal } from '../../overlays/ClientOnlyPortal';\nimport { ModalOverlay } from '../../overlays/ModalOverlay';\nimport { ToastOverlay } from '../../overlays/ToastOverlay';\nimport { StringWithoutHash } from '../../types/text';\nimport { BiomePortalIdContext } from '../BiomePortalIdProvider/BiomePortalIdProvider';\nimport { BiomeOverlaysProvider } from './context';\n\nconst MODAL_SELECTOR = 'modal-container';\nconst DRAWER_SELECTOR = 'drawer-container';\nconst POPOVER_SELECTOR = 'popover-container';\nconst TOAST_SELECTOR = 'toast-container';\n\nexport type MountedOverlayAndProviderProps<T> = {\n  children: ReactNode;\n  modalContainerId?: StringWithoutHash<T>;\n  drawerContainerId?: StringWithoutHash<T>;\n  popoverContainerId?: StringWithoutHash<T>;\n  toastContainerId?: StringWithoutHash<T>;\n};\n\nexport function MountedOverlaysAndProvider<T extends string>({\n  children,\n  modalContainerId,\n  drawerContainerId,\n  popoverContainerId,\n  toastContainerId,\n}: MountedOverlayAndProviderProps<T>) {\n  const portalId = useContext(BiomePortalIdContext);\n\n  return (\n    <BiomeOverlaysProvider>\n      {children}\n\n      {/* MODAL */}\n      <ClientOnlyPortal\n        selector={\n          modalContainerId\n            ? `#${modalContainerId}`\n            : `#${MODAL_SELECTOR}${portalId}`\n        }\n      >\n        <ModalOverlay hasExternalContainer={Boolean(modalContainerId)} />\n      </ClientOnlyPortal>\n      {!modalContainerId && <div id={`${MODAL_SELECTOR}${portalId}`} />}\n\n      {/* BOTTOM SHEET */}\n      <ClientOnlyPortal\n        selector={\n          drawerContainerId\n            ? `#${drawerContainerId}`\n            : `#${DRAWER_SELECTOR}${portalId}`\n        }\n      >\n        <DrawerOverlay hasExternalContainer={Boolean(drawerContainerId)} />\n      </ClientOnlyPortal>\n      {!drawerContainerId && <div id={`${DRAWER_SELECTOR}${portalId}`} />}\n\n      {/* POPOVER */}\n      <ClientOnlyPortal\n        selector={\n          popoverContainerId\n            ? `${popoverContainerId}`\n            : `#${POPOVER_SELECTOR}${portalId}`\n        }\n      >\n        <PopoverOverlay />\n      </ClientOnlyPortal>\n      {!popoverContainerId && <div id={`${POPOVER_SELECTOR}${portalId}`} />}\n\n      {/* TOAST */}\n      <ClientOnlyPortal\n        selector={\n          toastContainerId\n            ? `#${toastContainerId}`\n            : `#${TOAST_SELECTOR}${portalId}`\n        }\n      >\n        <ToastOverlay />\n      </ClientOnlyPortal>\n      {!toastContainerId && <div id={`${TOAST_SELECTOR}${portalId}`} />}\n    </BiomeOverlaysProvider>\n  );\n}\n","import { onLightBase } from '@biom3/design-tokens';\nimport { Interpolation } from '@emotion/react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { isValidElement, useCallback } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box, ButtCon, Heading, SmartClone } from '../../components';\nimport { useTheme } from '../../hooks';\nimport {\n  CLOSE_DRAWER,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { BiomeTheme } from '../../types/theme';\nimport {\n  BOTTOM_TRANSLATE,\n  getDrawerCloseIcon,\n  getDrawerStyles,\n  LEFT_TRANSLATE,\n  NO_TRANSLATE,\n  RIGHT_TRANSLATE,\n} from './styles';\n\nexport type DrawerOverlayProps = { hasExternalContainer?: boolean };\n\nexport function DrawerOverlay({ hasExternalContainer }: DrawerOverlayProps) {\n  const { base } = useTheme();\n  const { state: drawerList, dispatchAction } = useOverlaysStore(\n    state => state.drawerList,\n  );\n  const currentDrawer = drawerList[drawerList.length - 1];\n  const handleBgOverlayClick = useCallback(() => {\n    if (currentDrawer.outsideClicksClose) {\n      currentDrawer.onCloseDrawer?.();\n      if (!currentDrawer.isControlled) {\n        dispatchAction({\n          type: CLOSE_DRAWER,\n          payload: {\n            id: currentDrawer.id,\n          },\n        });\n      }\n    }\n  }, [currentDrawer, dispatchAction]);\n\n  return (\n    <AnimatePresence>\n      {currentDrawer ? (\n        <motion.div\n          data-testid={`${currentDrawer.testId}__bgOverlay`}\n          onClick={handleBgOverlayClick}\n          css={{\n            position: hasExternalContainer ? 'absolute' : 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: currentDrawer.showBgOverlay\n              ? base.color.translucent.standard[600]\n              : '',\n            zIndex: base.zLevel.drawer,\n          }}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{\n            duration: onLightBase.motion.normal.fast.jsDuration,\n            ease: onLightBase.motion.normal.fast.jsEase,\n          }}\n        />\n      ) : null}\n\n      {drawerList.map(drawer => {\n        const drawerSx =\n          isValidElement(drawer.content) && drawer.content.props.sx\n            ? drawer.content.props.sx\n            : {};\n        const { drawerPosition } = drawer;\n        return (\n          <motion.div\n            key={drawer.id}\n            data-testid={`${drawer.testId}__container`}\n            css={\n              merge(\n                {\n                  position: hasExternalContainer ? 'absolute' : 'fixed',\n                  zIndex: base.zLevel.drawer,\n                  background: base.color.neutral[700],\n                  display: 'flex',\n                  flexDirection: 'column',\n                },\n                getDrawerStyles(drawerPosition, drawer.size, base),\n              ) as Interpolation<BiomeTheme>\n            }\n            initial={{\n              opacity: 0,\n              ...(drawerPosition === 'left' && { x: LEFT_TRANSLATE }),\n              ...(drawerPosition === 'right' && { x: RIGHT_TRANSLATE }),\n              ...(drawerPosition === 'bottom' && { y: BOTTOM_TRANSLATE }),\n            }}\n            animate={{\n              opacity: 1,\n              ...(/left|right/.test(drawerPosition) && { x: NO_TRANSLATE }),\n              ...(/bottom/.test(drawerPosition) && { y: NO_TRANSLATE }),\n            }}\n            exit={{\n              opacity: 0,\n              transition: { ease: base.motion.normal.fast.jsEase },\n              ...(drawerPosition === 'left' && { x: LEFT_TRANSLATE }),\n              ...(drawerPosition === 'right' && { x: RIGHT_TRANSLATE }),\n              ...(drawerPosition === 'bottom' && { y: BOTTOM_TRANSLATE }),\n            }}\n            transition={{\n              duration: base.motion.bounce.gentle.jsDuration,\n              ease: base.motion.bounce.gentle.jsEase,\n              opacity: {\n                ease: base.motion.normal.fast.jsEase,\n              },\n            }}\n          >\n            {drawer.showHeaderBar && (\n              <Box\n                rc={<header />}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: 'base.spacing.x20',\n                  bg: 'base.color.neutral.700',\n                  flexShrink: 0,\n                  bradtl: 'base.borderRadius.x10',\n                  bradtr: 'base.borderRadius.x10',\n                }}\n                testId={`${drawer.testId}__container__header`}\n              >\n                <ButtCon\n                  variant=\"tertiary\"\n                  icon={getDrawerCloseIcon(drawerPosition)}\n                  sx={{\n                    position: 'absolute',\n                    top: 'base.spacing.x4',\n                    left: 'base.spacing.x4',\n                  }}\n                  testId={`${drawer.testId}__container__header__closeButtCon`}\n                  onClick={() => {\n                    drawer.onCloseDrawer?.();\n                    if (!drawer.isControlled) {\n                      dispatchAction({\n                        type: CLOSE_DRAWER,\n                        payload: {\n                          id: drawer.id,\n                        },\n                      });\n                    }\n                  }}\n                />\n                <Heading\n                  size=\"xSmall\"\n                  weight=\"bold\"\n                  testId={`${drawer.testId}__container__header__title`}\n                >\n                  {drawer.headerBarTitle}\n                </Heading>\n              </Box>\n            )}\n\n            <SmartClone\n              sx={merge(\n                {\n                  overflowX: 'hidden',\n                  overflowY: 'auto',\n                  flexGrow: 1,\n                  padding: 'base.spacing.x4',\n                  ...(!drawer.showHeaderBar\n                    ? {\n                        bradtl: 'base.borderRadius.x10',\n                        bradtr: 'base.borderRadius.x10',\n                      }\n                    : {}),\n                },\n                drawerSx,\n              )}\n            >\n              {drawer.content}\n            </SmartClone>\n          </motion.div>\n        );\n      })}\n    </AnimatePresence>\n  );\n}\n","export const CLOSE_DRAWER = 'closeDrawer';\nexport const OPEN_DRAWER = 'openDrawer';\nexport const UPDATE_DRAWER_PROPS = 'updateDrawerProps';\n\nexport const CLOSE_MODAL = 'closeModal';\nexport const OPEN_MODAL = 'openModal';\nexport const UPDATE_MODAL_PROPS = 'updateModalProps';\n\nexport const CLOSE_POPOVER = 'closePopover';\nexport const OPEN_POPOVER = 'openPopover';\nexport const UPDATE_POPOVER_PROPS = 'updatePopoverProps';\n\nexport const CLOSE_TOAST = 'closeToast';\nexport const OPEN_TOAST = 'openToast';\nexport const UPDATE_TOAST_PROPS = 'updateToastProps';\n","import { jsx } from '@emotion/react';\nimport { ReactElement, ReactNode } from 'react';\nimport { isFragment } from 'react-is';\n\nexport type ReactElementWithRef = ReactElement & { ref?: HTMLOrSVGElement };\n\nexport const cloneElementWithCssProp = (\n  element: ReactElementWithRef,\n  props: Record<string, unknown>,\n) => {\n  // EMOTION_TYPE handles non-React elements (native JSX/HTML nodes)\n  const clonedElement =\n    // eslint-disable-next-line no-underscore-dangle\n    element.props.__EMOTION_TYPE_PLEASE_DO_NOT_USE__ || element.type;\n\n  const clonedProps = {\n    key: element.key,\n    ref: element.ref,\n    ...element.props,\n    ...props,\n  };\n\n  if (props.css || element.props.css) {\n    clonedProps.css = [element.props.css, props.css];\n  }\n\n  return jsx(clonedElement, clonedProps);\n};\n\nexport const isReactFragment = (child: ReactNode) => isFragment(child);\n\nexport function isChildReactComponent(child: any) {\n  return typeof child?.type === 'function';\n}\n\nexport const serializeChildren = (children: ReactNode | unknown) => {\n  // Comparison function to JSON.stringify that can handle\n  // circular references and ignores internal React properties.\n  // https://github.com/facebook/react/issues/8669#issuecomment-531515508\n  const circular = () => {\n    const seen = new WeakSet();\n    return (key: string, value: unknown) => {\n      // Don't compare React's internal props.\n      if (key.startsWith('_')) return null;\n\n      if (typeof value === 'object' && value !== null) {\n        if (seen.has(value)) return null;\n        seen.add(value);\n      }\n      return value;\n    };\n  };\n\n  return JSON.stringify(children, circular());\n};\n\nexport function warnUser(message: string) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `🧬 BIOME Render Warning 🚨: \n      ${message}`,\n    );\n  }\n}\n\nexport function renderNullAndWarnUser(\n  componentName: string,\n  errorMessage: string = `A component (${componentName}) is currently rendering null, instead of expected subcomponent children. \nThis is normally due the usage of non-subcomponent children, within a component which expects only subcomponents children.`,\n) {\n  warnUser(errorMessage);\n  return null;\n}\n\nexport const noop = () => {};\n","import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useRef,\n  useSyncExternalStore,\n} from 'react';\n\n// @TODO: is there a way to make this more type safe?\n// EG. pass in the action types into createFastContext and have\n// it return a discriminated union of the action types?\nexport type FastContextDispatchAction = {\n  type: string;\n  payload: {\n    id: string;\n    [key: string]: unknown;\n  };\n};\n\nexport function createFastContext<Store>(\n  initialState: Store,\n  reducer?: (store: Store, action: FastContextDispatchAction) => Store,\n) {\n  type UseStoreDataReturnType = {\n    get: () => Store;\n    set: (value: Partial<Store>) => void;\n    subscribe: (callback: () => void) => () => void;\n    dispatch: (action: FastContextDispatchAction) => void;\n  };\n  function useStoreData(): UseStoreDataReturnType {\n    const store = useRef(initialState);\n    const get = useCallback(() => store.current, []);\n    const subscribers = useRef(new Set<() => void>());\n    const set = useCallback((value: Partial<Store>) => {\n      store.current = { ...store.current, ...value };\n      subscribers.current.forEach(callback => callback());\n    }, []);\n    const dispatch = useCallback((action: FastContextDispatchAction) => {\n      if (reducer) {\n        store.current = reducer(store.current, action);\n        subscribers.current.forEach(callback => callback());\n      } else {\n        throw new Error(\n          'Dispatching actions is only possible when a reducer is provided',\n        );\n      }\n    }, []);\n    const subscribe = useCallback((callback: () => void) => {\n      subscribers.current.add(callback);\n      return () => subscribers.current.delete(callback);\n    }, []);\n\n    // @NOTE: ensure that these useCallback functions are apprioriately named\n    // inside of React Dev tools (eases debugging)\n    Object.defineProperty(get, 'name', { value: 'get', writable: false });\n    Object.defineProperty(set, 'name', { value: 'set', writable: false });\n    Object.defineProperty(subscribe, 'name', {\n      value: 'subscribe',\n      writable: false,\n    });\n    Object.defineProperty(dispatch, 'name', {\n      value: 'dispatch',\n      writable: false,\n    });\n    return { get, set, subscribe, dispatch };\n  }\n\n  const StoreContext = createContext<UseStoreDataReturnType | null>(null);\n  function Provider({ children }: { children: ReactNode }) {\n    return (\n      <StoreContext.Provider value={useStoreData()}>\n        {children}\n      </StoreContext.Provider>\n    );\n  }\n  // @NOTE: allow the naming of this Provider in the consumer of it\n  // (mostly for debugging purposes)\n  Provider.displayName = '';\n\n  type UseStoreHookReturnType<T> = {\n    state: T;\n    setState: (value: Partial<Store>) => void;\n    dispatchAction: (action: FastContextDispatchAction) => void;\n  };\n\n  function useStore<SelectorOutput>(\n    selector: (store: Store) => SelectorOutput,\n  ): UseStoreHookReturnType<SelectorOutput> {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error('Store not found');\n    }\n\n    const state = useSyncExternalStore(\n      store.subscribe,\n      () => selector(store.get()),\n      () => selector(initialState),\n    );\n\n    return { state, setState: store.set, dispatchAction: store.dispatch };\n  }\n\n  return {\n    Provider,\n    useStore,\n  };\n}\n","import {\n  DrawerItem,\n  ModalItem,\n  OverlayStore,\n  PopoverItem,\n  ToastItem,\n} from '../../types/overlays';\nimport { serializeChildren } from '../../utils/componentHelpers';\nimport {\n  createFastContext,\n  FastContextDispatchAction,\n} from '../../utils/createFastContext';\nimport {\n  CLOSE_DRAWER,\n  CLOSE_MODAL,\n  CLOSE_POPOVER,\n  CLOSE_TOAST,\n  OPEN_DRAWER,\n  OPEN_MODAL,\n  OPEN_POPOVER,\n  OPEN_TOAST,\n  UPDATE_DRAWER_PROPS,\n  UPDATE_MODAL_PROPS,\n  UPDATE_POPOVER_PROPS,\n  UPDATE_TOAST_PROPS,\n} from './actions';\n\nexport const initialState: OverlayStore = {\n  modalList: [],\n  popoverList: [],\n  drawerList: [],\n  toastList: [],\n};\n\nconst overlayReducer = (\n  state: OverlayStore,\n  action: FastContextDispatchAction,\n) => {\n  // @TODO: perhaps split up this reducer somehow, its pretty damn long\n  switch (action.type) {\n    /**\n     *\n     * MODAL OVERLAY ACTIONS ......\n     *\n     */\n    case UPDATE_MODAL_PROPS: {\n      let currentIndex = -1;\n      state.modalList.forEach((modal, i) => {\n        if (modal.id === action.payload.id) {\n          currentIndex = i;\n        }\n      });\n      if (currentIndex >= 0) {\n        // @TODO: this is a pretty shitty way to check if content has\n        // changed, and could have pretty regrettable performance\n        // but it's the only option we can think of right now...\n        const newContentSerialised = serializeChildren(action.payload);\n        const oldContentSerialised = serializeChildren(\n          state.modalList[currentIndex],\n        );\n        const contentHasChanged = newContentSerialised !== oldContentSerialised;\n\n        if (contentHasChanged) {\n          const updatedList = [...state.modalList];\n          updatedList[currentIndex] = action.payload as ModalItem;\n          return { ...state, modalList: updatedList };\n        }\n        return state;\n      }\n      return state;\n    }\n    case OPEN_MODAL: {\n      const doesntAlreadyExist = !state.modalList.find(\n        modal => modal.id === action.payload.id,\n      );\n      return {\n        ...state,\n        modalList: [\n          ...state.modalList,\n          ...(doesntAlreadyExist ? [action.payload as ModalItem] : []),\n        ],\n      };\n    }\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        modalList: state.modalList.filter(\n          modal => modal.id !== action.payload.id,\n        ),\n      };\n    }\n    /**\n     *\n     * POPOVER OVERLAY ACTIONS ......\n     *\n     */\n    case UPDATE_POPOVER_PROPS: {\n      let currentIndex = -1;\n      state.popoverList.forEach((popover, i) => {\n        if (popover.id === action.payload.id) {\n          currentIndex = i;\n        }\n      });\n      if (currentIndex >= 0) {\n        const newContentSerialised = serializeChildren(action.payload);\n        const oldContentSerialised = serializeChildren(\n          state.popoverList[currentIndex],\n        );\n        const contentHasChanged = newContentSerialised !== oldContentSerialised;\n\n        if (contentHasChanged) {\n          const updatedList = [...state.popoverList];\n          updatedList[currentIndex] = action.payload as PopoverItem;\n          return { ...state, popoverList: updatedList };\n        }\n        return state;\n      }\n      return state;\n    }\n    case OPEN_POPOVER: {\n      // @NOTE: allow for React.StrictMode where double renders happen\n      // (which causes multiple copies of popover to be stored)\n      const doesntAlreadyExist = !state.popoverList.find(\n        popover => popover.id === action.payload.id,\n      );\n      return {\n        ...state,\n        popoverList: [\n          ...state.popoverList,\n          ...(doesntAlreadyExist ? ([action.payload] as PopoverItem[]) : []),\n        ],\n      };\n    }\n    case CLOSE_POPOVER: {\n      return {\n        ...state,\n        popoverList: state.popoverList.filter(\n          popover => popover.id !== action.payload.id,\n        ),\n      };\n    }\n\n    /**\n     *\n     * BOTTOM SHEET OVERLAY ACTIONS ......\n     *\n     */\n    case UPDATE_DRAWER_PROPS: {\n      let currentIndex = -1;\n      state.drawerList.forEach((drawer, i) => {\n        if (drawer.id === action.payload.id) {\n          currentIndex = i;\n        }\n      });\n      if (currentIndex >= 0) {\n        const newContentSerialised = serializeChildren(action.payload);\n        const oldContentSerialised = serializeChildren(\n          state.drawerList[currentIndex],\n        );\n        const contentHasChanged = newContentSerialised !== oldContentSerialised;\n\n        if (contentHasChanged) {\n          const updatedList = [...state.drawerList];\n          updatedList[currentIndex] = action.payload as DrawerItem;\n          return { ...state, drawerList: updatedList };\n        }\n        return state;\n      }\n      return state;\n    }\n    case OPEN_DRAWER: {\n      const doesntAlreadyExist = !state.drawerList.find(\n        drawer => drawer.id === action.payload.id,\n      );\n      return {\n        ...state,\n        drawerList: [\n          ...state.drawerList,\n          ...(doesntAlreadyExist ? [action.payload as DrawerItem] : []),\n        ],\n      };\n    }\n    case CLOSE_DRAWER: {\n      return {\n        ...state,\n        drawerList: state.drawerList.filter(\n          drawer => drawer.id !== action.payload.id,\n        ),\n      };\n    }\n\n    /**\n     *\n     * TOAST OVERLAY ACTIONS ......\n     *\n     */\n    case UPDATE_TOAST_PROPS: {\n      let currentIndex = -1;\n      state.toastList.forEach((drawer, i) => {\n        if (drawer.id === action.payload.id) {\n          currentIndex = i;\n        }\n      });\n      if (currentIndex >= 0) {\n        const newContentSerialised = serializeChildren(action.payload);\n        const oldContentSerialised = serializeChildren(\n          state.toastList[currentIndex],\n        );\n        const contentHasChanged = newContentSerialised !== oldContentSerialised;\n\n        if (contentHasChanged) {\n          const updatedList = [...state.toastList];\n          updatedList[currentIndex] = action.payload as ToastItem;\n          return { ...state, toastList: updatedList };\n        }\n        return state;\n      }\n      return state;\n    }\n    case OPEN_TOAST: {\n      const doesntAlreadyExist = !state.toastList.find(\n        toast => toast.id === action.payload.id,\n      );\n      return {\n        ...state,\n        toastList: [\n          ...state.toastList,\n          ...(doesntAlreadyExist ? [action.payload as ToastItem] : []),\n        ],\n      };\n    }\n    case CLOSE_TOAST: {\n      return {\n        ...state,\n        toastList: state.toastList.filter(\n          toast => toast.id !== action.payload.id,\n        ),\n      };\n    }\n\n    default: {\n      console.error('Unknown reducer action:', action);\n      return state;\n    }\n  }\n};\n\nexport const { Provider: BiomeOverlaysProvider, useStore: useOverlaysStore } =\n  createFastContext(initialState, overlayReducer);\n\nBiomeOverlaysProvider.displayName = 'BiomeOverlaysProvider';\n","import { DesignTokens } from '@biom3/design-tokens';\nimport { Properties } from 'csstype';\n\nimport { DrawerPosition, DrawerSize } from '../../types/overlays';\n\nexport function getDrawerSize(size: DrawerSize, position: DrawerPosition) {\n  switch (size) {\n    case 'half':\n      return '50%';\n    case 'quarter':\n      return '25%';\n    case 'full':\n      return /bottom/.test(position) ? 'calc(100% - 48px)' : '100%';\n    case 'threeQuarter':\n    default:\n      return '75%';\n  }\n}\n\nexport const BASE_TRANSLATE = '32px';\n\nexport function getDrawerStyles(\n  position: DrawerPosition,\n  size: DrawerSize,\n  base: DesignTokens['base'],\n) {\n  const styles: Properties = {};\n  switch (position) {\n    case 'right':\n    case 'left':\n      styles.height = '100%';\n      styles.width = getDrawerSize(size, position);\n      break;\n\n    case 'bottom':\n    default:\n      styles.width = '100%';\n      styles.height = getDrawerSize(size, position);\n      break;\n  }\n\n  switch (position) {\n    case 'left':\n      styles.left = '0px';\n      styles.top = '0px';\n      styles.boxShadow = `-${BASE_TRANSLATE} 0 0 ${base.color.neutral[700]}`;\n      styles.borderRadius = `0 ${base.borderRadius.x10} ${base.borderRadius.x10} 0`;\n      break;\n\n    case 'right':\n      styles.top = '0px';\n      styles.right = '0px';\n      styles.boxShadow = `${BASE_TRANSLATE} 0 0 ${base.color.neutral[700]}`;\n      styles.borderRadius = `${base.borderRadius.x10} 0 0 ${base.borderRadius.x10}`;\n      break;\n\n    case 'bottom':\n    default:\n      styles.bottom = '0px';\n      styles.left = '0px';\n      styles.boxShadow = `0 ${BASE_TRANSLATE} 0 ${base.color.neutral[700]}`;\n      styles.borderRadius = `${base.borderRadius.x10} ${base.borderRadius.x10} 0 0`;\n      break;\n  }\n\n  return styles;\n}\n\nexport function getDrawerCloseIcon(position: DrawerPosition) {\n  switch (position) {\n    case 'left':\n      return 'ChevronBackward';\n\n    case 'right':\n      return 'ChevronForward';\n\n    case 'bottom':\n    default:\n      return 'ChevronExpand';\n  }\n}\n\nexport const RIGHT_TRANSLATE = BASE_TRANSLATE;\nexport const LEFT_TRANSLATE = `-${BASE_TRANSLATE}`;\nexport const BOTTOM_TRANSLATE = BASE_TRANSLATE;\nexport const NO_TRANSLATE = '0px';\n","import { Interpolation } from '@emotion/react';\nimport { Properties } from 'csstype';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Fragment } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport {\n  CLOSE_MODAL,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { ModalPosition } from '../../types/overlays';\nimport { BiomeTheme } from '../../types/theme';\nimport { convertSxToEmotionStyles } from '../../utils/sxToEmotionStyles';\n\nexport type ModalOverlayProps = { hasExternalContainer?: boolean };\n\nfunction getModalPosition(position: ModalPosition, base: BiomeTheme['base']) {\n  const sx: Properties = {\n    transform: '',\n  };\n  switch (position.x) {\n    case 'left':\n      sx.left = base.spacing.x12;\n      break;\n\n    case 'right':\n      sx.right = base.spacing.x12;\n      break;\n\n    case 'center':\n    default:\n      sx.left = '50%';\n      sx.translate = '-50%';\n      break;\n  }\n\n  switch (position.y) {\n    case 'top':\n      sx.top = base.spacing.x12;\n      break;\n\n    case 'bottom':\n      sx.bottom = base.spacing.x12;\n      break;\n\n    case 'center':\n    default:\n      sx.top = '50%';\n      sx.translate += ' -50%';\n      break;\n  }\n\n  return sx;\n}\n\nexport function ModalOverlay({ hasExternalContainer }: ModalOverlayProps) {\n  const { base } = useTheme();\n  const { state: modalList, dispatchAction } = useOverlaysStore(\n    state => state.modalList,\n  );\n  return (\n    <AnimatePresence>\n      {modalList.map(modal => {\n        const positionSx = getModalPosition(modal.position, base);\n        const modalBgStyles = convertSxToEmotionStyles(modal.bgOverlaySx, {\n          base,\n        });\n        return (\n          <Fragment key={modal.id}>\n            <motion.div\n              key={`${modal.id}__bgOverlay`}\n              data-testid={`${modal.testId}__bgOverlay`}\n              onClick={() => {\n                if (modal.outsideClicksClose) {\n                  modal.onCloseModal?.();\n                  if (!modal.isControlled) {\n                    dispatchAction({\n                      type: CLOSE_MODAL,\n                      payload: {\n                        id: modal.id,\n                      },\n                    });\n                  }\n                }\n              }}\n              css={\n                merge(\n                  {\n                    position: hasExternalContainer ? 'absolute' : 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: modal.showBgOverlay\n                      ? base.color.translucent.standard[600]\n                      : '',\n                    zIndex: base.zLevel.modal,\n                  },\n                  modalBgStyles,\n                ) as Interpolation<BiomeTheme>\n              }\n              initial={{\n                opacity: 0,\n              }}\n              exit={{\n                opacity: 0,\n              }}\n              animate={{\n                opacity:\n                  typeof modal.bgOverlaySx.opacity === 'number' ||\n                  typeof modal.bgOverlaySx.opacity === 'string'\n                    ? modal.bgOverlaySx.opacity\n                    : 1,\n              }}\n              transition={{\n                duration: base.motion.normal.gentle.jsDuration,\n                ease: base.motion.normal.gentle.jsEase,\n              }}\n            />\n\n            <motion.div\n              key={`${modal.id}__modalContent`}\n              data-testid={`${modal.testId}__modalContent`}\n              css={{\n                ...positionSx,\n                position: hasExternalContainer ? 'absolute' : 'fixed',\n                zIndex: base.zLevel.modal,\n                display: 'flex',\n                flexDirection: 'column',\n\n                ...(modal.fullScreenUntilBreakpoint\n                  ? {\n                      [`@media screen and (max-width: ${\n                        base.breakpoint[modal.fullScreenUntilBreakpoint]\n                      }px)`]: {\n                        top: '0px',\n                        left: '0px',\n                        bottom: '0px',\n                        right: '0px',\n                        translate: '0 0',\n\n                        '& .modalContent': {\n                          borderRadius: '0px',\n                        },\n                      },\n                    }\n                  : {}),\n              }}\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{\n                scale: 1,\n                opacity: 1,\n              }}\n              exit={{\n                scale: 0.8,\n                opacity: 0,\n                transition: { ease: base.motion.normal.fast.jsEase },\n              }}\n              transition={{\n                duration: base.motion.bounce.gentle.jsDuration,\n                ease: base.motion.bounce.gentle.jsEase,\n                opacity: {\n                  ease: base.motion.normal.fast.jsEase,\n                },\n              }}\n            >\n              {modal.content}\n            </motion.div>\n          </Fragment>\n        );\n      })}\n    </AnimatePresence>\n  );\n}\n","/* eslint-disable no-restricted-syntax */\n//  ^ is neccissary due to array methods not playing nicely with types.\nimport { Gradient, smartPickTokenValue } from '@biom3/design-tokens';\nimport { CSSProperties } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  MakeObjectResponsive,\n  Measurement,\n  MeasurementAndResponsiveMeasurement,\n  shortHandCssRuleMapping,\n  SxProps,\n  ValidSxValues,\n} from '../types/sxProps';\nimport { BiomeTheme } from '../types/theme';\n\nexport function hasKey<K extends string>(\n  key: K,\n  object: {},\n): object is { [_ in K]: keyof SxProps } {\n  // @TODO: would be awesome to try and get this working\n  // (because it actually narrows the type), but it's not a priority atm\n  // ): object is { [_ in K]: {} } {\n  return typeof object === 'object' && object !== null && key in object;\n}\n\n// @TODO: this is 99% the correct type, but still includes the shorthand rules.\n// ideally, the type should only be longform rules.\nexport function convertShorthandRule(rule: keyof SxProps) {\n  let longHandRule = rule;\n  if (hasKey(rule, shortHandCssRuleMapping)) {\n    longHandRule = shortHandCssRuleMapping[rule];\n  }\n  return longHandRule;\n}\n\nexport function applyXandYStyleAmount(\n  rule: keyof SxProps,\n  value: string,\n): CSSProperties {\n  const rulePrefix = rule.substring(0, rule.length - 1);\n  return rule.match(/[margin|padding]Y/)\n    ? { [`${rulePrefix}Top`]: value, [`${rulePrefix}Bottom`]: value }\n    : { [`${rulePrefix}Left`]: value, [`${rulePrefix}Right`]: value };\n}\n\nexport function applyStyleAmount(\n  rule: keyof SxProps,\n  value: ValidSxValues | null,\n  themeProps: BiomeTheme,\n): CSSProperties {\n  if (value === undefined || value === null) return {};\n  const valueFromToken =\n    smartPickTokenValue<string | Gradient>(themeProps, `${value}`) ?? value;\n\n  const isGradient = typeof valueFromToken === 'object';\n  if (isGradient && rule.match(/background$|backgroundImage$|^color/)) {\n    const gradient = valueFromToken;\n    const styleObject = {\n      backgroundImage: gradient.spectrum,\n      backgroundBlendMode: gradient.blendMode,\n    };\n    return rule.match(/color/)\n      ? {\n          ...styleObject,\n          backgroundClip: 'text',\n          textFillColor: 'transparent',\n        }\n      : styleObject;\n  }\n\n  if (\n    rule.match(/paddingX$|paddingY|marginY|marginX$/) &&\n    typeof valueFromToken === 'string'\n  ) {\n    return applyXandYStyleAmount(rule, valueFromToken);\n  }\n\n  return { [rule]: valueFromToken };\n}\n\ntype MeasurementOrNull = Measurement | null;\ntype NullOrMeasurementArray = MeasurementOrNull[];\n\nexport function renderResponsiveStyles(\n  rule: keyof SxProps,\n  values: NullOrMeasurementArray,\n  themeProps: BiomeTheme,\n) {\n  const [defaultValue, ...responsiveValues] = values;\n  const responsiveStyles = responsiveValues.map(\n    (responsiveValue: MeasurementOrNull, index: number) => {\n      const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n      const cssValue =\n        typeof responsiveValue === 'function'\n          ? responsiveValue(themeProps)\n          : responsiveValue;\n      return responsiveValue\n        ? {\n            [mediaStyleRule]: applyStyleAmount(rule, cssValue, themeProps),\n          }\n        : {};\n    },\n  );\n  const styles: CSSProperties = {\n    ...(defaultValue\n      ? applyStyleAmount(\n          rule,\n          typeof defaultValue === 'function'\n            ? defaultValue(themeProps)\n            : defaultValue,\n          themeProps,\n        )\n      : {}),\n    ...Object.assign({}, ...responsiveStyles),\n  };\n  return styles;\n}\n\nexport function renderResponsiveStylesFromObject(\n  rule: keyof SxProps,\n  values: MakeObjectResponsive<MeasurementOrNull>,\n  themeProps: BiomeTheme,\n) {\n  const { default: defaultProp, ...responsiveProps } = values;\n  const orderedArray = [defaultProp];\n  let key: keyof typeof themeProps.base.breakpoint;\n  for (key in themeProps.base.breakpoint) {\n    const responsiveStyle = responsiveProps[key];\n    if (responsiveStyle) {\n      orderedArray.push(responsiveStyle);\n    } else {\n      orderedArray.push(null);\n    }\n  }\n  return renderResponsiveStyles(rule, orderedArray, themeProps);\n}\n\n// @TODO: the types here are not great. might need some work. :(\nexport function renderDescendantStylesFromObject(\n  descendantSelector: string,\n  descendantValue: {\n    [key: string]:\n      | string\n      | number\n      | ((theme: BiomeTheme) => string | number)\n      | null;\n  },\n  themeProps: BiomeTheme,\n) {\n  const descendantStyles = {\n    [descendantSelector]: {},\n  };\n  let key: keyof typeof descendantValue;\n  for (key in descendantValue) {\n    const rule = convertShorthandRule(key as keyof SxProps);\n    const value: MeasurementAndResponsiveMeasurement | null =\n      descendantValue[key];\n    descendantStyles[descendantSelector] = merge(\n      descendantStyles[descendantSelector],\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      chooseWhichStylesToRender(rule, value, themeProps),\n    );\n  }\n  return descendantStyles;\n}\n\nexport function chooseWhichStylesToRender(\n  rule: keyof SxProps,\n  value: MeasurementAndResponsiveMeasurement | null,\n  themeProps: BiomeTheme,\n) {\n  if (value === null) return {};\n\n  // @NOTE: We must ignore any of the @emotion/react keyframe based\n  // animation style objects, as these do NOT need to go through sx processing\n  if (typeof value === 'function' && typeof rule === 'function') {\n    return {};\n  }\n\n  const cssValue = typeof value === 'function' ? value(themeProps) : value;\n\n  // @TODO: find a way to not have to cast cssValue here (hint: its due to Array.isArray())\n  return Array.isArray(cssValue)\n    ? renderResponsiveStyles(rule, cssValue as Measurement[], themeProps)\n    : typeof cssValue === 'object' && cssValue.default\n    ? renderResponsiveStylesFromObject(rule, cssValue, themeProps)\n    : typeof cssValue === 'object'\n    ? renderDescendantStylesFromObject(rule, cssValue, themeProps)\n    : applyStyleAmount(rule, cssValue, themeProps);\n}\n\nexport function convertSxToEmotionStyles(sx: SxProps, themeProps: BiomeTheme) {\n  const stylesArray: CSSProperties[] = [];\n\n  // @NOTE: important that we use Object.getOwnPropertyNames instead of say,\n  // Object.keys, as the latter will return keys which are ordered differently from\n  // their insertion order (which is quite important given that rule order matters in CSS).\n  // more about this here: https://stackoverflow.com/questions/5525795/does-javascript-guarantee-object-property-order/38218582#38218582\n  Object.getOwnPropertyNames(sx).forEach(rule => {\n    const typedRule = rule as keyof typeof sx;\n    const value = sx[typedRule];\n    const longHandRule = convertShorthandRule(typedRule);\n    if (value || typeof value === 'number') {\n      stylesArray.push(\n        chooseWhichStylesToRender(longHandRule, value, themeProps),\n      );\n    }\n  });\n\n  return merge({}, ...stylesArray);\n}\n","import { Properties } from 'csstype';\n\nimport { ResponsiveKey } from './responsive';\nimport { MakeResponsive } from './shared';\nimport { GetNarrowedDesignTokens } from './sxThemableProperties';\nimport { BiomeTheme } from './theme';\n\nexport const shortHandCssRuleMapping = {\n  c: 'color',\n  d: 'display',\n  f: 'flex',\n  o: 'order',\n  pos: 'position',\n  m: 'margin',\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n  mx: 'marginX',\n  marginX: 'marginX',\n  marginY: 'marginY',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pb: 'paddingBottom',\n  pr: 'paddingRight',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  paddingX: 'paddingX',\n  py: 'paddingY',\n  paddingY: 'paddingY',\n  w: 'width',\n  maxw: 'maxWidth',\n  minw: 'minWidth',\n  h: 'height',\n  minh: 'minHeight',\n  maxh: 'maxHeight',\n  bgc: 'backgroundColor',\n  bgi: 'backgroundImage',\n  bg: 'background',\n  b: 'border',\n  bl: 'borderLeft',\n  br: 'borderRight',\n  bt: 'borderTop',\n  bb: 'borderBottom',\n  brad: 'borderRadius',\n  bradtl: 'borderTopLeftRadius',\n  bradtr: 'borderTopRightRadius',\n  bradbl: 'borderBottomLeftRadius',\n  bradbr: 'borderBottomRightRadius',\n} as const;\n\nexport type SxProps = {\n  [P in keyof Properties]?: GetNarrowedDesignTokens<P>;\n} & {\n  [K in keyof typeof shortHandCssRuleMapping]?: GetNarrowedDesignTokens<K>;\n};\n\nexport type DescendantSxProps = Record<string, SxProps> | SxProps;\nexport type DoubleDescendantSxProps =\n  | Record<string, DescendantSxProps>\n  | SxProps;\nexport type TripleDescentantSxProps =\n  | Record<string, DoubleDescendantSxProps>\n  | SxProps;\nexport type DeeplyNestedSx =\n  | SxProps\n  | DescendantSxProps\n  | DoubleDescendantSxProps\n  | TripleDescentantSxProps;\n\nexport type SxComponentProps = {\n  sx?: DeeplyNestedSx;\n};\n\nexport type MakeObjectResponsive<T> = {\n  [key in ResponsiveKey]?: T;\n} & { default: T };\n\nexport type MakeFunctionResponsive<T> = (theme: BiomeTheme) => T;\n\nexport type MakeValidSxValue<T> =\n  | MakeResponsive<T>\n  | MakeFunctionResponsive<T>\n  | MakeObjectResponsive<T>;\n\nexport type ValidSxValues = string | number;\n\nexport type Measurement = ValidSxValues | MakeFunctionResponsive<ValidSxValues>;\nexport type MeasurementAndResponsiveMeasurement =\n  | Measurement\n  | MakeResponsive<Measurement>\n  | MakeObjectResponsive<Measurement>;\n","import { designTokens } from '@biom3/design-tokens';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport isEqual from 'lodash.isequal';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { useOnClickOutside } from '../../hooks';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useOverlaysStore, useWindowSizeStore } from '../../providers';\nimport { CLOSE_POPOVER } from '../../providers/BiomeOverlaysProvider';\nimport { PopoverPosition } from '../../types/overlays';\nimport { DomReferenceRect } from '../../types/shared';\nimport {\n  getSafeBottomVerticalPosition,\n  getSafeCenterHorizontalPosition,\n  getSafeLeftHorizontalPosition,\n  getSafeRightHorizontalPosition,\n  getSafeTopVerticalPosition,\n} from '../../utils/positionHelpers';\n\nconst DEFAULT_POSITION: PopoverPosition = {\n  x: 'center',\n  y: 'below',\n};\n\nexport function PopoverOverlay() {\n  const [contentRects, setContentRects] = useState<DomReferenceRect[]>([]);\n  const localContentRefs = useRef<HTMLElement[]>([]);\n  const { state: popoverList, dispatchAction } = useOverlaysStore(\n    state => state.popoverList,\n  );\n  const { state: windowSize } = useWindowSizeStore(store => store);\n  const previousWindowSize = usePrevious(windowSize);\n  const closeAllPopovers = useCallback(() => {\n    popoverList.forEach(popover => {\n      popover.onOutsideClick?.();\n      if (!popover.isControlled) {\n        dispatchAction({\n          type: CLOSE_POPOVER,\n          payload: { id: popover.id },\n        });\n      }\n    });\n  }, [dispatchAction, popoverList]);\n\n  // @NOTE: watch for resizes, and close all popovers\n  // if the window size changes\n  useEffect(() => {\n    if (!isEqual(windowSize, previousWindowSize)) {\n      closeAllPopovers();\n    }\n  }, [windowSize, previousWindowSize, closeAllPopovers]);\n\n  // @NOTE: Trigger a re-render when the popover is opened, so that we can know\n  // what it's content dimensions are\n  useEffect(() => {\n    setContentRects(\n      localContentRefs.current.map(ref => ref?.getBoundingClientRect()),\n    );\n  }, [setContentRects, localContentRefs, popoverList]);\n\n  // @NOTE: close all popovers, when you click outside of them\n  useOnClickOutside(\n    [\n      ...localContentRefs.current.map(ref => ({ current: ref })),\n      ...popoverList.map(popover => popover.targetRef),\n    ],\n    closeAllPopovers,\n  );\n\n  const targetRects = useMemo(() => {\n    return popoverList.map(\n      popover => popover.targetRef?.current?.getBoundingClientRect(),\n    );\n  }, [popoverList]);\n\n  const popoverPositioning = useMemo(() => {\n    return popoverList.map(popover => popover?.position || DEFAULT_POSITION);\n  }, [popoverList]);\n\n  const positions = useMemo(() => {\n    return popoverList.map(({ verticalGap }, index) => {\n      const targetRect = targetRects[index];\n      const contentRect = contentRects[index];\n      const position = {\n        left:\n          popoverPositioning[index].x === 'center'\n            ? getSafeCenterHorizontalPosition(targetRect, contentRect)\n            : popoverPositioning[index].x === 'left'\n            ? getSafeLeftHorizontalPosition(targetRect, contentRect)\n            : getSafeRightHorizontalPosition(targetRect, contentRect),\n        top:\n          popoverPositioning[index].y === 'above'\n            ? getSafeTopVerticalPosition(targetRect, contentRect, verticalGap)\n            : getSafeBottomVerticalPosition(\n                targetRect,\n                contentRect,\n                verticalGap,\n              ),\n      };\n      return position;\n    });\n  }, [contentRects, popoverList, popoverPositioning, targetRects]);\n\n  return (\n    <AnimatePresence>\n      {popoverList.map((popover, index) => (\n        <motion.div\n          key={popover.id}\n          ref={element => {\n            if (element) {\n              localContentRefs.current[index] = element;\n            }\n          }}\n          data-id={popover.id}\n          css={theme => ({\n            position: 'absolute',\n            zIndex: theme.base.zLevel.popover,\n            ...positions[index],\n          })}\n          initial={{\n            opacity: 0,\n            y: '-5%',\n          }}\n          exit={{\n            opacity: 0,\n            y: '-5%',\n          }}\n          animate={{\n            opacity: 1,\n            y: 0,\n          }}\n          transition={{\n            duration: designTokens.base.motion.normal.fast.jsDuration,\n            ease: designTokens.base.motion.normal.fast.jsEase,\n          }}\n        >\n          {popover?.content}\n        </motion.div>\n      ))}\n    </AnimatePresence>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * The function returns the previous value of a given variable using a useRef hook in React.\n * @param {unknown} value - The value that we want to keep track of and get the previous value of. It\n * can be of any data type.\n * @returns The previous value of the input parameter `value` is being returned. This is achieved by\n * storing the current value of `value` in a `ref` object using the `useRef` hook, and updating it\n * whenever `value` changes using the `useEffect` hook. The previous value is then returned from the\n * `ref` object using its `current` property.\n */\nexport function usePrevious<T extends any>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { DomReferenceRect } from '../types/shared';\n\nexport function getSafeRightHorizontalPosition(\n  target?: DomReferenceRect,\n  content?: DomReferenceRect,\n  leftIsUnsafe = false,\n): number {\n  if (target && content) {\n    return target.left + target.width - content.width < 0 && !leftIsUnsafe\n      ? getSafeLeftHorizontalPosition(target, content, true)\n      : target.left + target.width - content.width;\n  }\n  return 0;\n}\n\nexport function getSafeLeftHorizontalPosition(\n  target?: DomReferenceRect,\n  content?: DomReferenceRect,\n  rightIsUnsafe = false,\n): number {\n  if (target && content) {\n    return target.left + content.width > document.body.clientWidth &&\n      !rightIsUnsafe\n      ? getSafeRightHorizontalPosition(target, content, true)\n      : target.left;\n  }\n  return 0;\n}\n\nexport function getSafeCenterHorizontalPosition(\n  target?: DomReferenceRect,\n  content?: DomReferenceRect,\n): number {\n  if (target && content) {\n    const proposedPosition = target.left + target.width / 2 - content.width / 2;\n    const isLeftEdgeOutOfBounds = proposedPosition < 0;\n    const isRightEdgeOutOfBounds =\n      proposedPosition + content.width >= document.body.clientWidth;\n\n    return isLeftEdgeOutOfBounds\n      ? getSafeLeftHorizontalPosition(target, content, true)\n      : isRightEdgeOutOfBounds\n      ? getSafeRightHorizontalPosition(target, content, true)\n      : proposedPosition;\n  }\n  return 0;\n}\n\n// @TODO: Elegantly handle the potential situation when there is NO\n// safe position above OR below the target. :thinking_face:\nexport function getSafeTopVerticalPosition(\n  target?: DomReferenceRect,\n  content?: DomReferenceRect,\n  verticalGap = 0,\n  bottomIsUnsafe = false,\n): number {\n  if (target && content) {\n    return target.top - content.height - verticalGap < 0 && !bottomIsUnsafe\n      ? getSafeBottomVerticalPosition(target, content, verticalGap, true)\n      : window.pageYOffset + target.top - content.height - verticalGap;\n  }\n  return 0;\n}\n\nexport function getSafeBottomVerticalPosition(\n  target?: DomReferenceRect,\n  content?: DomReferenceRect,\n  verticalGap = 0,\n  topIsUnsafe = false,\n): number {\n  if (target && content) {\n    // @NOTE\n    return target.bottom + content.height + verticalGap > window.innerHeight &&\n      !topIsUnsafe\n      ? getSafeTopVerticalPosition(target, content, verticalGap, true)\n      : window.pageYOffset + target.bottom + verticalGap;\n  }\n  return 0;\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { motion } from 'framer-motion';\nimport debounce from 'lodash.debounce';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { DEFAULT_BODY_COLOR } from '../../components/Text/Body/shared';\nimport { recursivelyAddTooltipAttrsToChildNodes } from '../../components/Tooltip/shared';\nimport {\n  useConvertSxToEmotionStyles,\n  useEventListener,\n  useTheme,\n} from '../../hooks';\nimport { useTooltipStore } from '../../providers';\nimport { BiomeShadowRootContext } from '../../providers/BiomeShadowRootProvider';\nimport { DEFAULT_TOOLTIP_SIZE, TOOLTIP_SIZES, TooltipItem } from '../../types';\nimport { isTouchDevice } from '../../utils/deviceHelpers';\nimport {\n  getSafeCenterHorizontalPosition,\n  getSafeTopVerticalPosition,\n} from '../../utils/positionHelpers';\nimport {\n  getStartingSize,\n  setDefaultSxTextColor,\n} from '../../utils/styleHelpers';\nimport { getBodyTextStyles } from '../../utils/textStyleHelpers';\nimport {\n  baseContainerSx,\n  getContainerStyles,\n  responsiveContainerStyles,\n} from './styles';\n\nconst getBoundingRect = (element: Element) => element.getBoundingClientRect();\nconst LEAVE_DELAY = 55;\n\nexport function TooltipOverlay() {\n  const shadowRoot = useContext(BiomeShadowRootContext);\n  const containerElementRef = useRef<ShadowRoot | HTMLElement>(\n    shadowRoot || document.body,\n  );\n  const theme = useTheme();\n  const baseContainerStyles = useConvertSxToEmotionStyles(\n    merge(setDefaultSxTextColor({}, DEFAULT_BODY_COLOR), baseContainerSx),\n  );\n  const hoverLeaveTimer = useRef<number>();\n  const currentTooltipBubbleRef = useRef<HTMLDivElement>(null);\n  const animatedTooltipBubbleRef = useRef<HTMLDivElement>(null);\n  const { state: tooltipList } = useTooltipStore(state => state.tooltipList);\n  const [currentTooltip, setCurrentTooltip] = useState<TooltipItem | undefined>(\n    undefined,\n  );\n  const [currentTooltipTargetRect, setCurrentTooltipTargetRect] = useState<\n    DOMRect | undefined\n  >(undefined);\n  const [currentTooltipBubbleRect, setCurrentTooltipBubbleRect] = useState<\n    DOMRect | undefined\n  >(undefined);\n\n  const calculatedPosition = useMemo(() => {\n    if (\n      !currentTooltipTargetRect ||\n      !currentTooltipBubbleRect ||\n      !currentTooltip\n    ) {\n      return {\n        left: 0,\n        top: 0,\n      };\n    }\n\n    const left = getSafeCenterHorizontalPosition(\n      currentTooltipTargetRect,\n      currentTooltipBubbleRect,\n    );\n    const top = getSafeTopVerticalPosition(\n      currentTooltipTargetRect,\n      currentTooltipBubbleRect,\n      16,\n    );\n\n    return { left, top };\n  }, [currentTooltip, currentTooltipBubbleRect, currentTooltipTargetRect]);\n\n  const onDocumentBodyClick = useCallback(\n    (event: MouseEvent) => {\n      if (isTouchDevice() && tooltipList.length > 0) {\n        const clickedElement = event.target as HTMLElement;\n        const clickedTooptiptId =\n          clickedElement.getAttribute('data-tooltip-id');\n        const isTooltipTarget =\n          clickedElement.getAttribute('data-tooltip-target') === 'true';\n        const clickingOnACurrentlyOpenTooltip =\n          clickedTooptiptId === currentTooltip?.id;\n\n        if (!isTooltipTarget && clickingOnACurrentlyOpenTooltip) {\n          // @NOTE: If we're clicking on a tooltip bubble element, then do nothing\n          // (allows user to select things inside of a tooltip)\n          return false;\n        }\n\n        if (isTooltipTarget && clickingOnACurrentlyOpenTooltip) {\n          // @NOTE: If the target is clicked again and the tooltip is already open, toggle it closed\n          setCurrentTooltip(undefined);\n        } else if (clickedTooptiptId !== currentTooltip?.id) {\n          // @NOTE: Else If the tooltip id of the clicked element is different to the\n          // current tooltip, open a new one\n          setCurrentTooltip(\n            tooltipList.find(tooltip => tooltip.id === clickedTooptiptId),\n          );\n        } else {\n          // @NOTE: Else we're not clicking atop a tooltip, so just close any open tooltip\n          setCurrentTooltip(undefined);\n        }\n        return false;\n      }\n\n      return false;\n    },\n    [tooltipList, currentTooltip],\n  );\n\n  const clearCurrentTooltipData = useCallback(() => {\n    setCurrentTooltip(undefined);\n    setCurrentTooltipTargetRect(undefined);\n    setCurrentTooltipBubbleRect(undefined);\n  }, []);\n\n  const handleHoverStart = useCallback(\n    (hoveredTooptipTargetId: string) => {\n      clearTimeout(hoverLeaveTimer.current);\n      if (hoveredTooptipTargetId !== currentTooltip?.id) {\n        const newTooltip = tooltipList.find(\n          tooltip => tooltip.id === hoveredTooptipTargetId,\n        );\n        setCurrentTooltip(newTooltip);\n      }\n    },\n    [tooltipList, currentTooltip],\n  );\n\n  const handleHoverTooltipClose = useCallback(() => {\n    clearTimeout(hoverLeaveTimer.current);\n    if (currentTooltip) {\n      clearCurrentTooltipData();\n    }\n  }, [currentTooltip, clearCurrentTooltipData]);\n\n  const handleHoverStop = useCallback(() => {\n    clearTimeout(hoverLeaveTimer.current);\n    hoverLeaveTimer.current = window.setTimeout(() => {\n      handleHoverTooltipClose();\n    }, LEAVE_DELAY);\n  }, [handleHoverTooltipClose]);\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (!isTouchDevice() && tooltipList.length > 0) {\n        const hoveredElement = event.target as HTMLElement;\n        const hoveredTooptipTargetId =\n          hoveredElement?.getAttribute('data-tooltip-id');\n        if (hoveredTooptipTargetId) {\n          handleHoverStart(hoveredTooptipTargetId);\n        } else {\n          handleHoverStop();\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n    [tooltipList.length, handleHoverStart, handleHoverStop],\n  );\n\n  useEventListener('mousemove', onMouseMove, containerElementRef);\n  useEventListener('click', onDocumentBodyClick, containerElementRef);\n\n  const onResizeAndScroll = useCallback(() => {\n    if (currentTooltip) {\n      clearCurrentTooltipData();\n    }\n  }, [currentTooltip, clearCurrentTooltipData]);\n  const debouncedOnResizeAndOnScroll = debounce(onResizeAndScroll, 300, {\n    leading: true,\n  });\n  useEventListener('scroll', debouncedOnResizeAndOnScroll, containerElementRef);\n  useEventListener('resize', debouncedOnResizeAndOnScroll, containerElementRef);\n\n  useEffect(() => {\n    if (shadowRoot) {\n      containerElementRef.current = shadowRoot;\n    }\n  }, [shadowRoot]);\n  useEffect(() => {\n    if (currentTooltip) {\n      const target = shadowRoot\n        ? shadowRoot.querySelector(`[data-tooltip-id=\"${currentTooltip.id}\"]`)\n        : document.body.querySelector(\n            `[data-tooltip-id=\"${currentTooltip.id}\"]`,\n          );\n      if (target) {\n        setCurrentTooltipTargetRect(getBoundingRect(target));\n      } else {\n        setCurrentTooltipTargetRect(undefined);\n      }\n\n      recursivelyAddTooltipAttrsToChildNodes(\n        animatedTooltipBubbleRef.current,\n        currentTooltip.id,\n      );\n    } else {\n      setCurrentTooltipTargetRect(undefined);\n    }\n  }, [currentTooltip, shadowRoot]);\n\n  useEffect(() => {\n    if (!currentTooltipBubbleRef.current) return;\n    setCurrentTooltipBubbleRect(\n      getBoundingRect(currentTooltipBubbleRef.current),\n    );\n  }, [currentTooltipTargetRect, currentTooltipBubbleRef]);\n\n  // @NOTE: if there is no current tooltips open, simply return null\n  if (!currentTooltip) return null;\n\n  const startingSize = getStartingSize(\n    currentTooltip?.size,\n    DEFAULT_TOOLTIP_SIZE,\n    TOOLTIP_SIZES,\n  );\n\n  const allContainerStyles = merge(\n    baseContainerStyles,\n    getBodyTextStyles({\n      size: 'small',\n      mono: false,\n      themeProps: theme,\n      weight: 'regular',\n    }),\n    getContainerStyles({ size: startingSize, theme }),\n    responsiveContainerStyles({ size: currentTooltip?.size, theme }),\n    { top: calculatedPosition.top, left: calculatedPosition.left },\n  );\n\n  return (\n    <>\n      {/* \n      @NOTE: sometimes the left + animation props can have a weird impact\n      on the dimensions / layout of rendered tooltip bubble.\n      To combat this, we can render a hidden version of it on the page. \n      This version is the one we will use for more accurate measurements etc.\n     */}\n      <div\n        ref={currentTooltipBubbleRef}\n        css={merge(allContainerStyles, {\n          top: '0',\n          left: '0',\n          opacity: 0,\n          pointerEvents: 'none',\n        })}\n      >\n        {currentTooltip.content}\n      </div>\n      <motion.div\n        ref={animatedTooltipBubbleRef}\n        data-tooltip-id={currentTooltip.id}\n        data-testid=\"tooltip__container\"\n        initial={{\n          opacity: 0,\n          y: '-8%',\n        }}\n        animate={{\n          opacity: 1,\n          y: '0%',\n        }}\n        transition={{\n          duration: theme.base.motion.normal.fast.jsDuration,\n          ease: theme.base.motion.normal.fast.jsEase,\n        }}\n        key={currentTooltip.id}\n        css={allContainerStyles}\n      >\n        {currentTooltip.content}\n      </motion.div>\n    </>\n  );\n}\n","export const DEFAULT_BODY_COLOR = 'base.color.text.primary';\nexport const DEFAULT_BODY_SIZE = 'medium';\n","import { createContext } from 'react';\n\nexport function recursivelyAddTooltipAttrsToChildNodes(\n  domNode: HTMLElement | null,\n  tooltipId: string,\n  isTrigger?: boolean,\n) {\n  if (domNode) {\n    domNode.setAttribute('data-tooltip-id', tooltipId);\n    if (isTrigger) domNode.setAttribute('data-tooltip-target', 'true');\n    for (const child of domNode.children) {\n      if (child.nodeType !== Node.TEXT_NODE) {\n        child.setAttribute('data-tooltip-id', tooltipId);\n        if (isTrigger) child.setAttribute('data-tooltip-target', 'true');\n        if (child.children) {\n          recursivelyAddTooltipAttrsToChildNodes(\n            child as HTMLElement,\n            tooltipId,\n          );\n        }\n      }\n    }\n  }\n}\n\nexport type TooltipComponentContextType = {\n  triggerDomRecrawl: () => void;\n};\n\nexport const TooltipComponentContext =\n  createContext<TooltipComponentContextType>({ triggerDomRecrawl() {} });\n","import { createContext } from 'react';\n\nexport const BiomeShadowRootContext = createContext<ShadowRoot | undefined>(\n  undefined,\n);\n","import { BodySize } from '@biom3/design-tokens';\nimport { DistributiveOmit } from '@emotion/react';\nimport {\n  ComponentPropsWithoutRef,\n  ElementType,\n  ReactElement,\n  ReactNode,\n} from 'react';\n\nimport { BoxProps, LogoProps, StatefulButtConProps } from '../components';\nimport { AllIconKeys } from '../components/Icon/Icon';\nimport { MenuItemSize } from '../components/MenuItem/shared';\nimport { DualVariantIconProps } from './icon';\nimport { InputTextAlign } from './input';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from './shared';\nimport { DeeplyNestedSx } from './sxProps';\nimport { BodyTextProps } from './text';\n\nexport type BaseClickableProps = StandardComponentWithProps<\n  HTMLButtonElement,\n  {\n    children?: ReactNode;\n  }\n>;\n\nexport type BaseClickableWithRCAndDomProps<\n  RC extends ReactElement | undefined = undefined,\n> = RC extends undefined\n  ? DomPropsWithDomRef<'button'> & BaseClickableProps\n  : BaseClickableProps & { rc: RC };\n\nexport const BUTTON_SIZES = ['small', 'medium', 'large'] as const;\n\nexport type ButtonSize = (typeof BUTTON_SIZES)[number];\n\nexport type ButtonProps<RC extends ReactElement | undefined = undefined> =\n  BaseClickableWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<ButtonSize>;\n    variant?: ButtonVariant;\n  };\n\nexport type ButtConProps<RC extends ReactElement | undefined = undefined> =\n  BaseClickableWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<ButtonSize>;\n    variant?: ButtonVariant;\n    iconVariant?: DualVariantIconProps['variant'];\n    iconSx?: DeeplyNestedSx;\n  } & ({ icon: AllIconKeys } | { children: ReactNode });\n\nexport type ButtonVariant =\n  | 'primary'\n  | 'primary/destructive'\n  | 'primary/inverse'\n  | 'secondary'\n  | 'secondary/destructive'\n  | 'tertiary'\n  | 'tertiary/inverse';\n\nexport type LinkSize = BodySize;\nexport type LinkVariant = 'primary' | 'secondary';\n\nexport type LinkBaseProps = StandardComponentWithProps<\n  HTMLButtonElement,\n  {\n    variant?: LinkVariant;\n    children?: ReactNode;\n    use?: ReactElement;\n    size?: MakeResponsive<LinkSize>;\n  }\n>;\n\nexport type GetClickableMultiTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n  BaseProps extends {},\n  BaseClickProps extends {},\n> = RC extends undefined\n  ? Use extends undefined\n    ? DomPropsWithDomRef<'button'> & BaseProps & BaseClickProps & BodyTextProps\n    : BaseProps & BaseClickProps & { use: Use }\n  : Use extends undefined\n  ? BaseProps & { rc: RC }\n  : BaseProps & { rc: RC; use: Use };\n\nexport type LinkProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = GetClickableMultiTextProps<RC, Use, LinkBaseProps, BaseClickableProps>;\n\nexport type TextInputButtonProps = BaseClickableProps &\n  ComponentPropsWithoutRef<'button'> & {\n    disabled?: boolean;\n    currentInputValue?: ComponentPropsWithoutRef<'input'>['value'];\n  };\n\nexport type TextInputStatefulButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<StatefulButtConProps<RC>, 'size'> &\n  ComponentPropsWithoutRef<'button'> & {\n    disabled?: boolean;\n    currentInputValue?: ComponentPropsWithoutRef<'input'>['value'];\n  };\n\nexport type ClearValueButtonProps<\n  RC extends ReactElement | undefined = undefined,\n> = BaseClickableWithRCAndDomProps<RC>;\n\ntype ComponentWithOnClick<Element extends 'button' | 'div'> = {\n  onClick: ComponentPropsWithoutRef<Element>['onClick'];\n};\n\nexport function isBaseClickable(\n  onClick: unknown,\n  rc: ReactElement | undefined,\n  containsClickables: boolean,\n  props: unknown,\n): props is BaseClickableProps & ComponentWithOnClick<'button'> {\n  return Boolean(rc) || (!containsClickables && Boolean(onClick));\n}\n\nexport function isBox(\n  onClick: unknown,\n  rc: ReactElement | undefined,\n  containsClickables: boolean,\n  props: unknown,\n): props is Partial<BoxProps> & ComponentWithOnClick<'div'> {\n  return containsClickables || (!rc && !onClick);\n}\n\nexport function isLogo(\n  onClick: unknown,\n  rc: ReactElement | undefined,\n  props: unknown,\n): props is Partial<LogoProps> {\n  return !rc && !onClick;\n}\n\nexport type GetHybridClickableRCandDomProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n  FallbackNodeTag extends ElementType = 'div',\n> = RC extends undefined\n  ? OnClick extends undefined\n    ? DomPropsWithDomRef<FallbackNodeTag> & Omit<BoxProps, 'domRef'>\n    : DomPropsWithDomRef<'button'> & BaseClickableProps & { onClick?: OnClick }\n  : OnClick extends undefined\n  ? BaseClickableProps & { rc?: RC }\n  : BaseClickableProps & { rc?: RC; onClick?: OnClick };\n\nexport type MenuItemProps<\n  RC extends ReactElement | undefined = undefined,\n  OnClick extends Function | undefined = undefined,\n> = GetHybridClickableRCandDomProps<RC, OnClick> & {\n  emphasized?: boolean;\n  size?: MakeResponsive<MenuItemSize>;\n  selected?: boolean;\n  shimmer?: boolean;\n  shimmerSx?: DeeplyNestedSx;\n  controlledHover?: boolean;\n  textAlign?: InputTextAlign;\n};\n\nexport type MenuItemContentProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n> = Omit<MenuItemProps<RC, OnClick>, 'shimmer'>;\n\ntype BaseMenuItemShimmerProps = Omit<\n  StandardComponentWithProps<\n    HTMLDivElement,\n    {\n      size?: MakeResponsive<MenuItemSize>;\n      emphasized?: boolean;\n    }\n  >,\n  'domRef'\n>;\n\nexport type MenuItemShimmerProps<\n  RC extends ReactElement | undefined = undefined,\n> = RC extends undefined\n  ? DomPropsWithDomRef<'button'> & BaseMenuItemShimmerProps\n  : BaseMenuItemShimmerProps & { rc: RC };\n","export const IMAGE_SIZE_VARIANTS = [\n  'small',\n  'medium',\n  'large',\n  'xLarge',\n] as const;\nexport const DEFAULT_IMAGE_SIZE_VARIANT = IMAGE_SIZE_VARIANTS[1];\nexport type ImageSizeVariant = (typeof IMAGE_SIZE_VARIANTS)[number];\nexport type SizeMapping = Record<ImageSizeVariant, number>;\nexport const TOLERATED_IMAGE_SIZES = [\n  32, 64, 128, 256, 370, 450, 512, 640, 720, 860, 1024, 1280, 1440, 1600, 1920,\n  2048,\n] as const;\n\nexport type ResponsiveSizes = Array<(typeof TOLERATED_IMAGE_SIZES)[number]>;\nexport type ImageComponentKind = 'Avatar' | 'SwapStack' | 'FramedStack';\nexport type SafeSizes = readonly string[];\n","import { Breakpoints, Colors } from '@biom3/design-tokens';\nimport { ComponentType, ReactNode, Ref, RefObject } from 'react';\n\nimport { ConfirmationDialogContentProps } from '../components/ConfirmationDialog/ConfirmationDialogContent';\nimport { LoadingOverlayContentProps } from '../components/LoadingOverlay/LoadingOverlayContent';\nimport { ModalContentProps } from '../components/Modal/ModalContent';\nimport { DeeplyNestedSx } from './sxProps';\n\nexport type ModalPosition = {\n  y: 'top' | 'center' | 'bottom';\n  x: 'left' | 'center' | 'right';\n};\n\nexport type ModalItem = {\n  id: string;\n  content: ReactNode;\n  showBgOverlay: boolean;\n  bgOverlaySx: DeeplyNestedSx;\n  fullScreenUntilBreakpoint?: keyof Breakpoints;\n  isControlled?: boolean;\n  onCloseModal?: () => void;\n  outsideClicksClose?: boolean;\n  position: ModalPosition;\n  testId: string;\n};\n\nexport type OverlayStore = {\n  modalList: ModalItem[];\n  drawerList: DrawerItem[];\n  popoverList: PopoverItem[];\n  toastList: ToastItem[];\n};\n\nexport type ModalComponentProps = {\n  children: ReactNode;\n  visible?: boolean;\n  id?: string;\n  domRef?: Ref<HTMLButtonElement>;\n  onCloseModal?: () => void;\n  showBgOverlay?: boolean;\n  outsideClicksClose?: boolean;\n  bgOverlaySx?: DeeplyNestedSx;\n  fullScreenUntilBreakpoint?: keyof Breakpoints;\n  position?: ModalPosition;\n  testId?: string;\n  ContentSubcomponent?:\n    | ComponentType<ModalContentProps<undefined>>\n    | ComponentType<ConfirmationDialogContentProps<undefined>>\n    | ComponentType<LoadingOverlayContentProps<undefined>>;\n};\n\nexport const DRAWER_POSITIONS = ['bottom', 'right', 'left'] as const;\nexport const DRAWER_SIZES = [\n  'quarter',\n  'half',\n  'threeQuarter',\n  'full',\n] as const;\nexport const DEFAULT_DRAWER_SIZE = DRAWER_SIZES[2];\nexport const DEFAULT_DRAWER_POSITION = DRAWER_POSITIONS[0];\nexport type DrawerSize = (typeof DRAWER_SIZES)[number];\nexport type DrawerPosition = (typeof DRAWER_POSITIONS)[number];\n\n// @NOTE: to avoid a situation where there is no header\n// (which provides the ability to close a Drawer),\n// and clicks outside wont close close the Drawer\n// We enforce certain prop combinations:\n// if showHeaderBar == true, then titleText must be supplied\n// if showHeaderBar == false, then titleText must not be supplied\n// if showHeaderBar is not supplied, then titleText must be supplied\nexport type WithDrawerDisriminatedProps<Props = {}> = Props &\n  (\n    | {\n        showHeaderBar: true;\n        headerBarTitle: ReactNode;\n      }\n    | {\n        showHeaderBar: false;\n        headerBarTitle?: never;\n      }\n    | {\n        showHeaderBar?: undefined;\n        headerBarTitle: ReactNode;\n      }\n  );\n\nexport type DrawerItem = WithDrawerDisriminatedProps<{\n  id: string;\n  content: ReactNode;\n  size: DrawerSize;\n  isControlled?: boolean;\n  onCloseDrawer?: () => void;\n  showBgOverlay: boolean;\n  outsideClicksClose?: boolean;\n  drawerPosition: DrawerPosition;\n  testId: string;\n}>;\n\nexport type DrawerComponentProps = WithDrawerDisriminatedProps<{\n  visible?: boolean;\n  id?: string;\n  // @TODO: does this need to use MakeResponsive<X>?\n  size?: DrawerSize;\n  domRef?: Ref<HTMLButtonElement>;\n  onCloseDrawer?: () => void;\n  showBgOverlay?: boolean;\n  outsideClicksClose?: boolean;\n  children: ReactNode;\n  drawerPosition?: DrawerPosition;\n  testId?: string;\n}>;\n\nexport type PopoverPosition = {\n  y: 'above' | 'below';\n  x: 'left' | 'center' | 'right';\n};\n\nexport type PopoverItem = {\n  id: string;\n  content: ReactNode;\n  targetRef: RefObject<HTMLElement>;\n  position: PopoverPosition;\n  verticalGap?: number;\n  isControlled?: boolean;\n  onOutsideClick?: () => void;\n};\n\nexport type PopoverComponentProps = {\n  visible?: boolean;\n  id?: string;\n  children?: ReactNode;\n  position?: PopoverPosition;\n  domRef?: Ref<HTMLButtonElement>;\n  onOutsideClick?: () => void;\n  verticalGap?: number;\n};\n\nexport type ToastPosition = {\n  y: 'top' | 'bottom';\n  x: 'left' | 'center' | 'right';\n};\n\nexport type ToastVariant = keyof Colors['status'];\n\nexport type ToastItem = {\n  id: string;\n  content: ReactNode;\n  position: ToastPosition;\n  variant: ToastVariant;\n  buttonsPosition: 'right' | 'bottomRight';\n  hideDismissButton: boolean;\n  autoDismissDuration?: number;\n  onCloseToast: () => void;\n  testId?: string;\n  sx?: DeeplyNestedSx;\n};\n\nexport type ToastComponentProps = {\n  visible: boolean;\n  domRef?: Ref<HTMLDivElement>;\n  children: ReactNode;\n} & Partial<Omit<ToastItem, 'content'>>;\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';\nimport { BodyProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { setDefaultSxTextColor } from '../../../utils/styleHelpers';\nimport { getBodyTextStyles } from '../../../utils/textStyleHelpers';\nimport { BodyShimmer } from './BodyShimmer';\nimport { DEFAULT_BODY_COLOR, DEFAULT_BODY_SIZE } from './shared';\n\nfunction BodyContent<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_BODY_SIZE,\n  rc = <span />,\n  weight = 'regular',\n  sx = {},\n  testId,\n  mono,\n  children,\n  domRef,\n  ...props\n}: DistributiveOmit<BodyProps<RC>, 'shimmer' | 'shimmerSx' | 'shimmerLines'>) {\n  const themeProps = useTheme();\n  const customStyles = useConvertSxToEmotionStyles(\n    merge(setDefaultSxTextColor(sx, DEFAULT_BODY_COLOR), sx),\n  );\n\n  const css = merge(\n    getBodyTextStyles({ themeProps, mono, size, weight }),\n    customStyles,\n  );\n\n  return cloneElementWithCssProp(rc, {\n    ...props,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    css,\n    children,\n  });\n}\n\nexport function Body<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_BODY_SIZE,\n  weight = 'regular',\n  shimmer,\n  shimmerSx,\n  sx,\n  children,\n  mono,\n  rc = <span />,\n  domRef,\n  testId,\n  className,\n  ...props\n}: BodyProps<RC>) {\n  return shimmer ? (\n    <BodyShimmer\n      size={size}\n      sx={shimmerSx}\n      shimmerLines={shimmer}\n      rc={rc}\n      className={className}\n      testId={`${testId}__shimmer`}\n    />\n  ) : (\n    <BodyContent\n      {...props}\n      size={size}\n      sx={sx}\n      weight={weight}\n      mono={mono}\n      rc={rc}\n      domRef={domRef}\n      testId={testId}\n      className={className}\n    >\n      {children}\n    </BodyContent>\n  );\n}\n\nBody.displayName = 'Body';\n","import { useMemo } from 'react';\n\nimport { DeeplyNestedSx } from '../types/sxProps';\nimport { BiomeTheme } from '../types/theme';\nimport { convertSxToEmotionStyles } from '../utils/sxToEmotionStyles';\nimport { useTheme } from './useTheme';\n\n/**\n * This function converts SxProps to Emotion styles using a given theme or the default theme.\n * @param {SxProps} sx - SxProps is a type definition for the theme-ui style object. It is an object\n * that contains CSS properties and values that can be applied to a component.\n * @param {BiomeTheme} [themeInput] - `themeInput` is an optional parameter of type `BiomeTheme` that\n * allows the user to pass in a custom theme object to be used instead of the default theme provided by\n * the `useTheme` hook. If `themeInput` is not provided, the default theme will be used.\n * @returns The `useConvertSxToEmotionStyles` function returns a memoized version of the\n * `convertSxToEmotionStyles` function with the provided `sx` and `themeInput` props. The `themeInput`\n * prop is optional and if provided, it will override the default theme provided by the `useTheme`\n * hook.\n */\nexport function useConvertSxToEmotionStyles(\n  sx: DeeplyNestedSx,\n  themeInput?: BiomeTheme,\n) {\n  let themeProps = useTheme();\n  if (themeInput) themeProps = themeInput;\n  return useMemo(\n    () => convertSxToEmotionStyles(sx, themeProps),\n    [sx, themeProps],\n  );\n}\n","import { useTheme as useEmotionTheme } from '@emotion/react';\n\nimport { BiomeTheme } from '../types/theme';\n\n/**\n * This function returns the current theme as a BiomeTheme object using the useEmotionTheme hook.\n * @returns The `useTheme` function is returning the `theme` object as a `BiomeTheme`.\n */\nexport function useTheme() {\n  const theme = useEmotionTheme();\n  return theme as BiomeTheme;\n}\n","export const artificialDelay = (time: number) =>\n  new Promise<void>(resolve => {\n    setTimeout(resolve, time);\n  });\n","export function hexToRgb(hex: string): {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n} {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.exec(\n    hex,\n  );\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n        a: result[4] ? parseInt(result[4], 16) / 255 : undefined,\n      }\n    : { r: 0, g: 0, b: 0 };\n}\n\nexport function hexToRgbString(hex: string): string {\n  const rgb = hexToRgb(hex);\n  if (rgb.a !== undefined && rgb.a !== 1) {\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${parseFloat(\n      rgb.a.toFixed(2),\n    )})`;\n  }\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n}\n\nexport function hexToRgbaString(hex: string, alpha: number): string {\n  const rgb = hexToRgb(hex);\n  return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`;\n}\n\nexport function hexWithAlphaToRgbaString(hex: string): string {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  const a = parseInt(hex.slice(7, 9), 16) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\nexport function rgbaToHex(rgba: string): string {\n  // Parse the input string to get the individual red, green, blue, and alpha values\n  const matches = rgba.match(\n    /rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+(\\.\\d+)?)\\)/,\n  );\n  if (!matches) return '';\n\n  const [, r, g, b, a] = matches;\n\n  // Convert the red, green, and blue values to hexadecimals\n  const rHex = parseInt(r, 10).toString(16);\n  const gHex = parseInt(g, 10).toString(16);\n  const bHex = parseInt(b, 10).toString(16);\n\n  // Add leading zeros if necessary\n  const rHexPadded = rHex.length === 1 ? `0${rHex}` : rHex;\n  const gHexPadded = gHex.length === 1 ? `0${gHex}` : gHex;\n  const bHexPadded = bHex.length === 1 ? `0${bHex}` : bHex;\n\n  // Convert the alpha value to a hexadecimal\n  const aHex = Math.round(parseFloat(a) * 255).toString(16);\n  const aHexPadded = aHex.length === 1 ? `0${aHex}` : aHex;\n\n  // Return the final hexadecimal color with transparency\n  return `#${rHexPadded}${gHexPadded}${bHexPadded}${aHexPadded}`;\n}\n","export const isRuntimeInsideNodeServer = () => typeof window === 'undefined';\n\nexport const isTouchDevice = () => {\n  if (!isRuntimeInsideNodeServer()) {\n    return !!window?.ontouchstart || navigator?.maxTouchPoints > 0;\n  }\n  return false;\n};\n","export const DUMMY_RASTER_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/demo-images/frog.png';\nexport const DUMMY_VECTOR_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/currency-icons/currency--eth.svg';\nexport const DUMMY_RASTER_IMAGE_2_URL =\n  'https://biome.immutable.com/hosted-assets/demo-images/tree-dude.jpg';\nexport const DUMMY_RASTER_IMAGE_3_URL =\n  'https://biome.immutable.com/hosted-assets/demo-images/pastelle-gradients.png';\nexport const IMX_TOKEN_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/currency-icons/currency--imx.svg';\nexport const GODS_TOKEN_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/currency-icons/currency--gods.svg';\nexport const ETH_TOKEN_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/currency-icons/currency--eth.svg';\nexport const GOG_TOKEN_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/currency-icons/currency--gog.svg';\nexport const DARK_ON_LIGHT_FALLBACK_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/images/defaultTokenImage--darkOnLight.svg';\nexport const LIGHT_ON_DARK_FALLBACK_IMAGE_URL =\n  'https://biome.immutable.com/hosted-assets/images/defaultTokenImage--lightOnDark.svg';\nexport const DUMMY_RIVE_ANIMATION_URL =\n  'https://cdn.rive.app/animations/vehicles.riv';\n","export function staticMiddleEllipsis({\n  text,\n  leftSideLength = 4,\n  rightSideLength = 4,\n}: {\n  text: string;\n  leftSideLength?: number;\n  rightSideLength?: number;\n}) {\n  const isTooShort = leftSideLength + rightSideLength >= text.length;\n  if (isTooShort) return text;\n\n  const leftSide = text.substring(0, leftSideLength);\n  const rightSide = text.substring(text.length - rightSideLength, text.length);\n  return `${leftSide}...${rightSide}`;\n}\n","import { Buffer } from 'buffer';\n\nexport function base64UrlEncode(url: string) {\n  return Buffer.from(url)\n    .toString('base64')\n    .replace(/\\+/g, '-') // Convert '+' to '-'\n    .replace(/\\//g, '_'); // Convert '/' to '_'\n}\n\nexport function base64UrlDecode(base64Url: string) {\n  const cleaned = base64Url\n    .replace(/-/g, '+') // Convert '-' to '+'\n    .replace(/_/g, '/'); // Convert '_' to '/'\n\n  return Buffer.from(cleaned, 'base64').toString();\n}\n","import {\n  ImageComponentKind,\n  ImageSizeVariant,\n  SizeMapping,\n  TOLERATED_IMAGE_SIZES,\n} from '../types/image';\nimport { BiomeTheme } from '../types/theme';\n\nexport function removeDuplicates(numbers: number[]): number[] {\n  // Use a Set to store unique values\n  const uniqueNumbers = new Set(numbers);\n  // Convert the Set back to an array\n  const resultArray = Array.from(uniqueNumbers);\n  return resultArray;\n}\n\nexport function getImageSizesArray(currentSize: number) {\n  const index = TOLERATED_IMAGE_SIZES.indexOf(\n    currentSize as (typeof TOLERATED_IMAGE_SIZES)[number],\n  );\n\n  let closestLargerSize = null;\n  if (index === -1) {\n    // If currentSize is not found, find the closest larger size\n    const largerSizes = TOLERATED_IMAGE_SIZES.filter(\n      size => size > currentSize,\n    );\n    if (largerSizes.length > 0) {\n      closestLargerSize = largerSizes.reduce((prev, curr) =>\n        Math.abs(curr - currentSize) < Math.abs(prev - currentSize)\n          ? curr\n          : prev,\n      );\n    }\n  }\n\n  const underSize = index > 0 ? TOLERATED_IMAGE_SIZES[index - 1] : null;\n  const matchedSize =\n    closestLargerSize !== null ? closestLargerSize : currentSize;\n  const largeSize = TOLERATED_IMAGE_SIZES.find(\n    size => size > currentSize,\n  ) as number;\n  const xLargeSize = TOLERATED_IMAGE_SIZES.find(size => size > largeSize);\n\n  const sizes = [underSize, matchedSize, largeSize, xLargeSize];\n  const refinedSizes = sizes.filter(size => size !== null) as number[];\n  const sortedSizes = refinedSizes.sort((n1, n2) => n1 - n2);\n  const dedupedSizes = removeDuplicates(sortedSizes);\n  return dedupedSizes;\n}\n\nexport function pickResponsiveSize(\n  size: ImageSizeVariant | null,\n  sizeMapping: SizeMapping,\n) {\n  switch (size) {\n    case 'xLarge':\n      return getImageSizesArray(sizeMapping.xLarge);\n    case 'large':\n      return getImageSizesArray(sizeMapping.large);\n    case 'small':\n      return getImageSizesArray(sizeMapping.small);\n    case 'medium':\n    default:\n      return getImageSizesArray(sizeMapping.medium);\n  }\n}\n\nexport function pickSizeInLayout(\n  size: ImageSizeVariant | null,\n  sizeMapping: SizeMapping,\n): string {\n  switch (size) {\n    case 'xLarge':\n      return `${sizeMapping.xLarge}px`;\n    case 'large':\n      return `${sizeMapping.large}px`;\n    case 'small':\n      return `${sizeMapping.small}px`;\n    case 'medium':\n    default:\n      return `${sizeMapping.medium}px`;\n  }\n}\n\nexport function getImageSizeMapping<AsNum extends boolean = false>(\n  componentKind: ImageComponentKind,\n  theme: BiomeTheme,\n  asNumbers?: AsNum,\n) {\n  const { base } = theme;\n  let sizeMapping: any;\n  switch (componentKind) {\n    case 'FramedStack':\n      sizeMapping = {\n        small: asNumbers\n          ? parseInt(base.icon.size[300], 10)\n          : base.icon.size[300],\n        medium: asNumbers\n          ? parseInt(base.icon.size[400], 10)\n          : base.icon.size[400],\n        large: asNumbers\n          ? parseInt(base.icon.size[500], 10)\n          : base.icon.size[500],\n        xLarge: asNumbers\n          ? parseInt(base.icon.size[600], 10)\n          : base.icon.size[600],\n      };\n      break;\n\n    case 'SwapStack':\n      sizeMapping = {\n        small: asNumbers\n          ? parseInt(base.icon.size[200], 10)\n          : base.icon.size[200],\n        medium: asNumbers\n          ? parseInt(base.icon.size[250], 10)\n          : base.icon.size[250],\n        large: asNumbers\n          ? parseInt(base.icon.size[400], 10)\n          : base.icon.size[400],\n        xLarge: asNumbers\n          ? parseInt(base.icon.size[500], 10)\n          : base.icon.size[500],\n      };\n      break;\n\n    case 'Avatar':\n    default:\n      sizeMapping = {\n        small: asNumbers\n          ? parseInt(base.icon.size[300], 10)\n          : base.icon.size[300],\n        medium: asNumbers\n          ? parseInt(base.icon.size[400], 10)\n          : base.icon.size[400],\n        large: asNumbers\n          ? parseInt(base.icon.size[500], 10)\n          : base.icon.size[500],\n        xLarge: asNumbers\n          ? parseInt(base.icon.size[600], 10)\n          : base.icon.size[600],\n      };\n      break;\n  }\n\n  return sizeMapping as Record<\n    ImageSizeVariant,\n    AsNum extends true ? number : string\n  >;\n}\n","export function prettyFormatNumber(num: string): string {\n  const parts = num.replaceAll(',', '').split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n}\n\nexport function range(start: number, end: number) {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, index) => index + start);\n}\n\nexport function isNumberWithinTotal(\n  defaultNumber: number,\n  totalNumber: number,\n) {\n  return defaultNumber <= totalNumber;\n}\n","import { ComponentType, isValidElement, ReactElement, ReactNode } from 'react';\nimport { isFragment } from 'react-is';\n\nimport { SmartClone } from '../components/SmartClone';\n\nexport function checkForElementChildType(\n  child: ReactNode,\n): child is ReactElement & { type: { displayName: string } } {\n  return (\n    isValidElement(child) &&\n    typeof child?.type !== 'string' &&\n    typeof child?.type !== 'number' &&\n    typeof child?.type !== 'boolean'\n  );\n}\n\nexport function isChildSubcomponent(\n  child: ReactNode,\n  subcomponent: ComponentType<any>,\n): child is ReactElement & { type: { displayName: string } } {\n  if (checkForElementChildType(child)) {\n    if (child.type === subcomponent) {\n      return true;\n    }\n\n    // @NOTE: allow for when the child is a SmartClone component,\n    // and the desired subcomponent as its child\n    if (\n      // @TODO: not sure why the below crashes webpack:\n      // child.type === SmartClone - need to investigate\n      child.type.displayName === 'SmartClone' &&\n      child.props.children.type === subcomponent\n    ) {\n      return true;\n    }\n\n    // @NOTE: allow for when the child is an overlay component,\n    // and the desired subcomponent is its Target child\n    if (/Modal|Tooltip|Drawer|Popover/.test(child.type.displayName)) {\n      const potentialTargetElement = child.props.children?.[0];\n      if (/\\.Target/.test(potentialTargetElement?.type?.displayName)) {\n        const targetChild = potentialTargetElement?.props?.children;\n        if (targetChild?.type === subcomponent) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function getSubcomponentChild(\n  children: ReactNode | ReactNode[],\n  subcomponent: ComponentType<any>,\n) {\n  if (Array.isArray(children)) {\n    return children.find(child => isChildSubcomponent(child, subcomponent));\n  }\n  return isChildSubcomponent(children, subcomponent) ? children : null;\n}\n\nexport function isSubcomponentNestedInSmartClone<TProps>(\n  child: ReactNode,\n  subcomponent: ComponentType<TProps>,\n): boolean {\n  if (checkForElementChildType(child)) {\n    const nestedChild = child.props.children;\n    return child.type === SmartClone && nestedChild.type === subcomponent;\n  }\n  return false;\n}\n\nexport function isSubcomponentNestedInFragment<TProps>(\n  child: ReactNode,\n  subcomponent: ComponentType<TProps>,\n): boolean {\n  if (checkForElementChildType(child)) {\n    const nestedChild = child.props.children;\n    return isFragment(child) && nestedChild.type === subcomponent;\n  }\n  return false;\n}\n","import { jsx } from '@emotion/react';\nimport { isValidElement, MouseEvent, useCallback } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useConvertSxToEmotionStyles } from '../../hooks/useConvertSxToEmotionStyles';\nimport { useGetComponentCloneMode } from '../../hooks/useGetComponentCloneMode';\nimport { SmartCloneProps } from '../../types/shared';\nimport { cloneElementWithCssProp } from '../../utils/componentHelpers';\n\n// ------------------------------------------------------------------------------\n// @NOTE: this component allows 3 different render modes:\n// 1  - When there is a single react component child, simply clone it and pass\n//      down all props as is\n//\n// 2  - When there is a single DOM component child, clone it, and modify props\n//      so that they are suitable to be rendered onto a natural dom element\n//\n// 3  - When there are multiple children, or the child is a fragment - wrap\n//      the children inside a span, and modify props so that they are suitable\n//      to be rendered onto a natural dom element\n//\nexport function SmartClone({\n  testId,\n  children,\n  fallBackDomNode = 'span',\n  onClick,\n  sx = {},\n  domRef,\n  rc,\n  ...props\n}: SmartCloneProps) {\n  const { shouldCloneAsComponent, shouldCloneAsDom } =\n    useGetComponentCloneMode(children);\n\n  const customStyles = useConvertSxToEmotionStyles(sx);\n  const mergedOnClicks = useCallback(\n    (ev: MouseEvent<unknown>) => {\n      if (isValidElement(children)) children.props?.onClick?.(ev);\n      onClick?.(ev);\n    },\n    [onClick, children],\n  );\n\n  // @NOTE: render mode 1\n  return shouldCloneAsComponent && isValidElement(children)\n    ? cloneElementWithCssProp(children, {\n        ...(testId ? { testId } : {}),\n        ...merge({}, children.props, props),\n        ...(domRef ? { domRef } : {}),\n        ...(onClick || children.props.onClick\n          ? { onClick: mergedOnClicks }\n          : {}),\n        sx: merge({}, { ...children.props.sx }, sx),\n        ...(rc ? { rc } : {}),\n      })\n    : shouldCloneAsDom && isValidElement(children)\n    ? // @NOTE: render mode 2\n      cloneElementWithCssProp(children, {\n        ...(testId ? { 'data-testid': testId } : {}),\n        ...merge({}, children.props, props),\n        ...(domRef ? { ref: domRef } : {}),\n        ...(onClick || children.props.onClick\n          ? { onClick: mergedOnClicks }\n          : {}),\n        ...(children.props.css\n          ? { css: [customStyles, children.props.css] }\n          : { css: customStyles }),\n      })\n    : // @NOTE: render mode 3\n      jsx(fallBackDomNode, {\n        ...props,\n        ...(testId ? { 'data-testid': testId } : {}),\n        ...(domRef ? { ref: domRef } : {}),\n        ...(onClick ? { onClick } : {}),\n        css: customStyles,\n        children,\n      });\n}\n\nSmartClone.displayName = 'SmartClone';\n","import { ReactNode, useMemo } from 'react';\n\nimport {\n  isChildReactComponent,\n  isReactFragment,\n} from '../utils/componentHelpers';\n\n/**\n * This function determines whether to clone a React component or a DOM element based on the type of\n * children passed in.\n * @param {ReactNode} children - The `children` parameter is a ReactNode, which can be any valid React\n * child element, such as a React component, a string, a number, an array of React components, etc.\n * This function is used to determine whether the given `children` should be cloned as a React\n * component or as\n * @returns The function `useGetComponentCloneMode` returns an object with two properties:\n * `shouldCloneAsComponent` and `shouldCloneAsDom`. These properties indicate whether the `children`\n * passed to the function should be cloned as a React component or as a DOM element.\n */\nexport function useGetComponentCloneMode(children: ReactNode) {\n  const cloneMode = useMemo(() => {\n    const childIsReactComponent = isChildReactComponent(children);\n    const childIsReactFragment = isReactFragment(children);\n    const childIsArray = Array.isArray(children);\n    const childIsPrimitive = typeof children !== 'object';\n    const shouldCloneAsComponent =\n      childIsReactComponent && !childIsReactFragment;\n    const shouldCloneAsDom =\n      children !== null &&\n      !childIsReactComponent &&\n      !childIsArray &&\n      !childIsReactFragment &&\n      !childIsPrimitive;\n    return { shouldCloneAsDom, shouldCloneAsComponent };\n  }, [children]);\n\n  return {\n    shouldCloneAsComponent: cloneMode.shouldCloneAsComponent,\n    shouldCloneAsDom: cloneMode.shouldCloneAsDom,\n  };\n}\n","export const lineClamp = (lines: number = 2) => ({\n  display: '-webkit-box',\n  WebkitLineClamp: lines,\n  WebkitBoxOrient: 'vertical',\n  wordBreak: 'break-word',\n  overflow: 'hidden',\n});\n\nexport const hFlex = { d: 'flex' };\nexport const vFlex = { d: 'flex', flexDirection: 'column' };\nexport const centerFlexChildren = {\n  alignItems: 'center',\n  justifyContent: 'center',\n};\nexport const padding = (value: number | string) => ({\n  p: `base.spacing.x${value}`,\n});\nexport const margin = (value: number | string) => ({\n  m: `base.spacing.x${value}`,\n});\n","import { Properties } from 'csstype';\nimport merge from 'ts-deepmerge';\n\nimport { SafeSizes } from '../types/image';\nimport { MakeResponsive, RemoveErrorBrand } from '../types/shared';\nimport { SxProps } from '../types/sxProps';\nimport { BiomeTheme } from '../types/theme';\nimport { isError } from './textStyleHelpers';\n\nexport const inputResetStyles = (disabled?: boolean): Properties => ({\n  margin: 0,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  cursor: disabled ? 'default' : 'pointer',\n  border: 'none',\n  appearance: 'none',\n});\n\nexport function isSafeSize<T>(\n  size: T,\n  safeSizes: SafeSizes,\n): size is NonNullable<RemoveErrorBrand<T>> {\n  return typeof size === 'string' && safeSizes.includes(size);\n}\n\nexport function getStartingSize<T>(\n  size: MakeResponsive<T>,\n  defaultSize: T,\n  safeSizes: SafeSizes,\n) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  const startingSize = sizeAsArray.shift();\n  return isSafeSize(startingSize, safeSizes) ? startingSize : defaultSize;\n}\n\nexport function setDefaultWidthSx(sx: SxProps, width: string) {\n  return sx.w ? { w: width } : sx.width ? { width } : { width };\n}\n\nexport function setDefaultHeightSx(sx: SxProps, height: string) {\n  return sx.h ? { w: height } : sx.height ? { height } : { height };\n}\n\nexport function setDefaultSxTextColor(sx: SxProps, color: string) {\n  return sx.c ? { c: color } : sx.color ? { color } : { color };\n}\n\nexport function setDefaultMinWidthSx(sx: SxProps, minWidth: string) {\n  return sx.minw\n    ? { minw: minWidth }\n    : sx.minWidth\n    ? { minWidth }\n    : { minWidth };\n}\n\nexport type RenderSxProps<S extends string> = {\n  theme: BiomeTheme;\n  size: S;\n  [x: string]: unknown;\n};\n\nexport function getResponsiveSx<S extends string>({\n  theme,\n  size,\n  renderSxAtSize,\n  ...props\n}: {\n  theme: BiomeTheme;\n  size: MakeResponsive<S>;\n  renderSxAtSize: (props: RenderSxProps<S>) => Properties;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: renderSxAtSize({\n            size: responsiveSize,\n            theme,\n            ...props,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n","import { BaseTokens } from '@biom3/design-tokens';\nimport { Properties } from 'csstype';\nimport merge from 'ts-deepmerge';\n\nimport {\n  ErrorBrand,\n  GetFontWeights,\n  GetTypeSizes,\n  MakeResponsive,\n  RemoveErrorBrand,\n} from '../types/shared';\nimport { BiomeTheme } from '../types/theme';\n\nexport function isError(key: any): key is ErrorBrand<any> {\n  return typeof key === 'object' && key !== null && '_error' in key;\n}\n\nconst DEFAULT_TEXT_SIZES = {\n  heading: 'medium',\n  body: 'medium',\n  caption: 'medium',\n} as const;\nconst DEFAULT_TEXT_WEIGHTS = {\n  heading: 'regular',\n  body: 'regular',\n  caption: 'regular',\n} as const;\n\nexport function renderResponsiveTextStyles<T extends keyof BaseTokens['text']>({\n  size,\n  weight,\n  tokenTextComponent,\n  themeProps,\n}: {\n  tokenTextComponent: T;\n  size: MakeResponsive<GetTypeSizes<T>>;\n  weight: MakeResponsive<GetFontWeights<T>>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  const weightAsArray = Array.isArray(weight) ? [...weight] : [weight];\n\n  // We need to convince TS that the default values are a subset of the types in sizeAsArray and weightAsArray\n  const defaultSize =\n    sizeAsArray.shift() ??\n    (DEFAULT_TEXT_SIZES[tokenTextComponent] as GetTypeSizes<T>);\n  const defaultWeight =\n    weightAsArray.shift() ??\n    (DEFAULT_TEXT_WEIGHTS[tokenTextComponent] as GetFontWeights<T>);\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: {\n            fontSize:\n              // @NOTE: TS isn't smart enough to infer past the second level, so we need to cast here. Matt Pocock approved, we promise!\n              (\n                themeProps.base.text[tokenTextComponent][\n                  responsiveSize\n                ] as BaseTokens['text']['heading']['xxLarge']\n              ).regular.fontSize,\n            lineHeight: (\n              themeProps.base.text[tokenTextComponent][\n                responsiveSize\n              ] as BaseTokens['text']['heading']['xxLarge']\n            ).regular.lineHeight,\n          },\n        };\n      }\n      return {};\n    }),\n  );\n\n  const weightStyles = merge(\n    ...weightAsArray.map((responsiveWeight, index) => {\n      const responsiveSize = sizeAsArray[index] ?? defaultSize;\n      if (\n        responsiveWeight != null &&\n        !isError(responsiveSize) &&\n        !isError(responsiveWeight)\n      ) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: {\n            fontWeight: (\n              themeProps.base.text[tokenTextComponent][responsiveSize][\n                responsiveWeight\n              ] as BaseTokens['text']['heading']['xxLarge']['regular']\n            ).fontWeight,\n          },\n        };\n      }\n      return {};\n    }),\n  );\n\n  const styles = merge({}, sizeStyles, weightStyles);\n  return {\n    defaultSize: defaultSize as RemoveErrorBrand<typeof defaultSize>,\n    defaultWeight: defaultWeight as RemoveErrorBrand<typeof defaultWeight>,\n    styles,\n  };\n}\n\nexport function getBodyTextStyles({\n  size,\n  weight,\n  themeProps,\n  mono,\n}: {\n  mono?: boolean;\n  size: MakeResponsive<GetTypeSizes<'body'>>;\n  weight: MakeResponsive<GetFontWeights<'body'>>;\n  themeProps: BiomeTheme;\n}) {\n  const {\n    defaultSize,\n    defaultWeight,\n    styles: responsiveStyles,\n  } = renderResponsiveTextStyles({\n    tokenTextComponent: 'body',\n    size,\n    weight,\n    themeProps,\n  });\n\n  return {\n    fontFamily: mono\n      ? themeProps.base.font.family.body.secondary\n      : themeProps.base.font.family.body.primary,\n    fontSize: themeProps.base.text.body[defaultSize].regular.fontSize,\n    lineHeight: themeProps.base.text.body[defaultSize].regular.lineHeight,\n    fontWeight:\n      themeProps.base.text.body[defaultSize][defaultWeight].fontWeight,\n    textTransform: 'none',\n    letterSpacing: 'unset',\n    ...responsiveStyles,\n  } satisfies Properties;\n}\n\nexport function getCaptionTextStyles({\n  size,\n  weight,\n  themeProps,\n}: {\n  size: MakeResponsive<GetTypeSizes<'caption'>>;\n  weight: MakeResponsive<GetFontWeights<'caption'>>;\n  themeProps: BiomeTheme;\n}) {\n  const {\n    defaultSize,\n    defaultWeight,\n    styles: responsiveStyles,\n  } = renderResponsiveTextStyles({\n    tokenTextComponent: 'caption',\n    size,\n    weight,\n    themeProps,\n  });\n\n  return {\n    fontFamily: themeProps.base.font.family.body.primary,\n    fontSize: themeProps.base.text.caption[defaultSize].regular.fontSize,\n    lineHeight: themeProps.base.text.caption[defaultSize].regular.lineHeight,\n    fontWeight:\n      themeProps.base.text.caption[defaultSize][defaultWeight].fontWeight,\n    textTransform:\n      themeProps.base.text.caption[defaultSize][defaultWeight].casing,\n    letterSpacing:\n      themeProps.base.text.caption[defaultSize][defaultWeight].letterSpacing,\n    ...responsiveStyles,\n  };\n}\n\nexport function getHeadingTextStyles({\n  size,\n  weight,\n  themeProps,\n}: {\n  size: MakeResponsive<GetTypeSizes<'heading'>>;\n  weight: MakeResponsive<GetFontWeights<'heading'>>;\n  themeProps: BiomeTheme;\n}) {\n  const {\n    defaultSize,\n    defaultWeight,\n    styles: responsiveStyles,\n  } = renderResponsiveTextStyles({\n    tokenTextComponent: 'heading',\n    size,\n    weight,\n    themeProps,\n  });\n\n  return {\n    fontFamily: themeProps.base.font.family.heading.primary,\n    fontSize: themeProps.base.text.heading[defaultSize].regular.fontSize,\n    lineHeight: themeProps.base.text.heading[defaultSize].regular.lineHeight,\n    fontWeight:\n      themeProps.base.text.heading[defaultSize][defaultWeight].fontWeight,\n    textTransform: 'none',\n    letterSpacing: 'unset',\n    ...responsiveStyles,\n  } satisfies Properties;\n}\n","import { BodySize, designTokens } from '@biom3/design-tokens';\nimport { Properties } from 'csstype';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { MakeResponsive } from '../../../types/shared';\nimport { BiomeTheme } from '../../../types/theme';\nimport { getResponsiveSx, getStartingSize } from '../../../utils/styleHelpers';\nimport { vFlex } from '../../../utils/sxChunks';\nimport { getBodyTextStyles } from '../../../utils/textStyleHelpers';\nimport { Box, BoxWithRCAndDomProps } from '../../Box';\nimport { ShimmerBox } from '../../Shimmer';\nimport { DEFAULT_BODY_SIZE } from './shared';\n\nexport type BodyShimmerProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<BodySize>;\n    shimmerLines?: number;\n  };\n\nfunction renderGapAndPadding({\n  size,\n}: {\n  size: BodySize;\n  theme?: BiomeTheme;\n}): Properties {\n  switch (size) {\n    case 'large': {\n      return { gap: '0.25em' };\n    }\n    case 'small': {\n      return { gap: '0.3em' };\n    }\n    case 'xSmall': {\n      return { gap: '0.2em' };\n    }\n    case 'xxSmall': {\n      return { gap: '0.26em' };\n    }\n    case 'medium':\n    default: {\n      return { gap: '0.35em' };\n    }\n  }\n}\n\nconst getResponsiveGap = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<BodySize>;\n  theme: BiomeTheme;\n}) => getResponsiveSx({ theme, size, renderSxAtSize: renderGapAndPadding });\n\nexport function BodyShimmer<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_BODY_SIZE,\n  shimmerLines = 1,\n  sx = {},\n  testId,\n  ...props\n}: BodyShimmerProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_BODY_SIZE,\n    Object.keys(designTokens.base.text.body),\n  );\n  const allSx = merge(\n    {\n      ...vFlex,\n      display: 'inline-flex',\n      minWidth: '50px',\n      verticalAlign: 'text-top',\n    },\n    getBodyTextStyles({ themeProps, mono: false, size, weight: 'regular' }),\n    renderGapAndPadding({ size: startingSize }),\n    getResponsiveGap({ size, theme: themeProps }),\n    sx,\n  );\n  return (\n    <Box {...props} sx={allSx} testId={testId}>\n      {Array.from({ length: shimmerLines }, (item, index) => (\n        <ShimmerBox\n          testId={`${testId}__line--${index}`}\n          key={index}\n          sx={{\n            height: '1.2em',\n            ...(shimmerLines > 1 && index === shimmerLines - 1\n              ? { w: '75%' }\n              : {}),\n          }}\n        />\n      ))}\n    </Box>\n  );\n}\n","import { ReactElement, ReactNode } from 'react';\n\nimport { useConvertSxToEmotionStyles } from '../../hooks/useConvertSxToEmotionStyles';\nimport {\n  DomPropsWithDomRef,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { cloneElementWithCssProp } from '../../utils';\n\nexport type BoxProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    children?: ReactNode;\n  }\n>;\n\nexport type BoxWithRCAndDomProps<\n  RC extends ReactElement | undefined = undefined,\n> = RC extends undefined\n  ? DomPropsWithDomRef<'div'> & BoxProps\n  : BoxProps & { rc: RC };\n\nexport function Box<RC extends ReactElement | undefined = undefined>({\n  testId,\n  sx = {},\n  children,\n  rc = <div />,\n  domRef,\n  className,\n  ...domProps\n}: BoxWithRCAndDomProps<RC>) {\n  const css = useConvertSxToEmotionStyles(sx);\n  return cloneElementWithCssProp(rc, {\n    ...domProps,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    className: `${className ?? ''} Box`,\n    css,\n    children,\n  });\n}\n\nBox.displayName = 'Box';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { shimmerSx } from './style';\n\nexport function ShimmerBox<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  ...props\n}: BoxWithRCAndDomProps<RC>) {\n  return <Box {...props} sx={merge(shimmerSx, sx)} />;\n}\n","import { keyframes } from '@emotion/react';\n\nconst gradientWipe = keyframes`100% { mask-position: left }`;\n\nexport const shimmerSx = {\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  bgi: 'base.gradient.1',\n  mask: 'linear-gradient(-60deg, #000 30%, #0005, #000 70%) right/400% 100%',\n  brad: 'base.borderRadius.x2',\n  backgroundRepeat: 'no-repeat',\n  animation: `${gradientWipe} 1.3s infinite`,\n  opacity: 0.32,\n};\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { shimmerSx } from './style';\n\nexport function ShimmerCircle<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  radius = '50px',\n  ...props\n}: BoxWithRCAndDomProps<RC> & { radius?: string }) {\n  return (\n    <Box\n      {...props}\n      sx={merge(shimmerSx, { brad: '50%', w: radius, h: radius }, sx)}\n    />\n  );\n}\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';\nimport { CaptionProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { setDefaultSxTextColor } from '../../../utils/styleHelpers';\nimport { getCaptionTextStyles } from '../../../utils/textStyleHelpers';\n\nexport const DEFAULT_CAPTION_COLOR = 'base.color.text.primary';\nexport const DEFAULT_CAPTION_SIZE = 'medium';\n\nexport function Caption<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_CAPTION_SIZE,\n  weight = 'regular',\n  rc = <span />,\n  sx = {},\n  testId,\n  children,\n  domRef,\n  ...spanDomAttributes\n}: CaptionProps<RC>) {\n  const themeProps = useTheme();\n  const customStyles = useConvertSxToEmotionStyles(\n    merge(setDefaultSxTextColor(sx, DEFAULT_CAPTION_COLOR), sx),\n  );\n\n  const css = merge(\n    getCaptionTextStyles({ themeProps, size, weight }),\n    customStyles,\n  );\n\n  return cloneElementWithCssProp(rc, {\n    ...spanDomAttributes,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    css,\n    children,\n  });\n}\n\nCaption.displayName = 'Caption';\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { ReactElement } from 'react';\n\nimport { StandardComponentWithProps } from '../../../types/shared';\nimport { GetMultiTextProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { staticMiddleEllipsis } from '../../../utils/ellipsisHelpers';\nimport { Body } from '../Body';\n\nexport type EllipsizedTextBaseProps = StandardComponentWithProps<\n  HTMLSpanElement,\n  {\n    text: string;\n    leftSideLength?: number;\n    rightSideLength?: number;\n    use?: ReactElement;\n  }\n>;\n\nexport type EllipsizedTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = GetMultiTextProps<RC, Use, EllipsizedTextBaseProps>;\n\nexport function EllipsizedText<\n  RC extends ReactElement | undefined = undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  leftSideLength = 8,\n  rightSideLength = 4,\n  text,\n  rc = <span />,\n  sx,\n  ...props\n}: EllipsizedTextProps<RC, Use>) {\n  const { use, ...otherProps } =\n    'use' in props ? props : { ...props, use: undefined };\n  const { size } = 'size' in props ? props : { size: undefined };\n  const { weight } = 'weight' in props ? props : { weight: undefined };\n  const content = staticMiddleEllipsis({\n    leftSideLength,\n    rightSideLength,\n    text,\n  });\n  return cloneElementWithCssProp(\n    use || <Body size={size as BodySize} weight={weight as BodyWeight} />,\n    {\n      ...otherProps,\n      rc,\n      sx,\n      children: content,\n    },\n  );\n}\n\nEllipsizedText.displayName = 'EllipsizedText';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';\nimport { HeadingProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { slugify } from '../../../utils/slugHelpers';\nimport { setDefaultSxTextColor } from '../../../utils/styleHelpers';\nimport { getHeadingTextStyles } from '../../../utils/textStyleHelpers';\n\nexport const HEADING_DEFAULT_STYLES = {\n  size: 'medium',\n  weight: 'regular',\n} as const;\n\nexport const DEFAULT_HEADING_COLOR = 'base.color.text.primary';\n\nexport function Heading<RC extends ReactElement | undefined = undefined>({\n  size = HEADING_DEFAULT_STYLES.size,\n  weight = HEADING_DEFAULT_STYLES.weight,\n  testId,\n  children,\n  sx = {},\n  rc = <h1 />,\n  domRef,\n  autoGenerateId,\n  id = autoGenerateId && typeof children === 'string'\n    ? slugify(children)\n    : undefined,\n  ...headingDomAttributes\n}: HeadingProps<RC>) {\n  const themeProps = useTheme();\n  const customStyles = useConvertSxToEmotionStyles(\n    merge(setDefaultSxTextColor(sx, DEFAULT_HEADING_COLOR), sx),\n  );\n\n  const css = merge(\n    getHeadingTextStyles({ themeProps, size, weight }),\n    customStyles,\n  );\n\n  return cloneElementWithCssProp(rc, {\n    ...headingDomAttributes,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    css,\n    id,\n    children,\n  });\n}\n\nHeading.displayName = 'Heading';\n","export function slugify(input: string): string {\n  return input\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, '') // remove non-word characters\n    .replace(/[\\s_-]+/g, '-') // replace spaces and underscores with hyphens\n    .replace(/^-+|-+$/g, ''); // remove leading and trailing hyphens\n}\n","import { ReactElement, useEffect, useMemo, useState } from 'react';\n\nimport { useTheme } from '../../../hooks';\nimport { GetMultiTextProps } from '../../../types/text';\nimport { warnUser } from '../../../utils';\nimport { BoxWithRCAndDomProps } from '../../Box';\nimport { RollingText } from '../RollingText';\n\nexport type TextMessages = Array<string>;\n\nexport type LoopingTextBaseProps = {\n  text: TextMessages;\n  textDuration?: number;\n};\n\nexport type LoopingTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = GetMultiTextProps<RC, Use, LoopingTextBaseProps> & BoxWithRCAndDomProps<RC>;\n\nconst DEFAULT_TEXT_DURATION = 3 * 1000;\n\nexport function LoopingText<\n  RC extends ReactElement | undefined = undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  text,\n  textDuration = DEFAULT_TEXT_DURATION,\n  className,\n  testId = 'LoopingText',\n  rc,\n  ...props\n}: LoopingTextProps<RC, Use>) {\n  const [index, setIndex] = useState(0);\n  const { base } = useTheme();\n\n  const safeDuration = useMemo(() => {\n    if (textDuration <= base.motion.normal.gentle.jsDuration * 1030) {\n      const currentMotionDuration = `${\n        base.motion.normal.gentle.jsDuration * 1030\n      }ms`;\n      warnUser(\n        `LoopingText has recieved ${textDuration}ms as a duration. This is invalid, as the text animation takes longer than this (${currentMotionDuration}). \n  TextDuration must be longer than ${currentMotionDuration}.\n  A default duration (${DEFAULT_TEXT_DURATION}ms) has been applied instead.`,\n      );\n      return DEFAULT_TEXT_DURATION;\n    }\n\n    return textDuration;\n  }, [base.motion.normal.gentle.jsDuration, textDuration]);\n  useEffect(() => {}, [textDuration]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let next = index + 1;\n      if (next === text.length) {\n        next = 0;\n      }\n      setIndex(next);\n    }, safeDuration);\n  }, [index, setIndex, text, safeDuration]);\n\n  return (\n    <RollingText\n      {...props}\n      rc={rc}\n      testId={testId}\n      text={text[index]}\n      className={`${className ?? ''} LoopingText`}\n    />\n  );\n}\n\nLoopingText.displayName = 'LoopingText';\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { Property } from 'csstype';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ReactElement } from 'react';\n\nimport { useTheme } from '../../../hooks';\nimport { AnimationKind } from '../../../types';\nimport { StandardComponentWithProps } from '../../../types/shared';\nimport { GetMultiTextProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { Box, BoxWithRCAndDomProps } from '../../Box';\nimport { Body } from '../Body';\n\nconst variants = {\n  enter: {\n    y: '-0.7em',\n    opacity: 0,\n    position: 'absolute' as Property.Position,\n  },\n  center: {\n    y: 0,\n    opacity: 1,\n    position: 'relative' as Property.Position,\n  },\n  exit: {\n    y: '0.7em',\n    opacity: 0,\n    position: 'absolute' as Property.Position,\n  },\n};\n\nexport type RollingTextBaseProps = StandardComponentWithProps<\n  HTMLSpanElement,\n  {\n    text: string;\n    use?: ReactElement;\n  }\n>;\n\nexport type RollingTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = GetMultiTextProps<RC, Use, RollingTextBaseProps> &\n  BoxWithRCAndDomProps<RC> & { animationKind?: AnimationKind };\n\nexport function RollingText<\n  RC extends ReactElement | undefined = undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  text,\n  testId = 'RollingText',\n  className,\n  domRef,\n  animationKind = 'gentle',\n  ...props\n}: RollingTextProps<RC, Use>) {\n  const themeProps = useTheme();\n  const { base } = themeProps;\n  const { use, ...otherProps } =\n    'use' in props ? props : { ...props, use: undefined };\n  const { size } = 'size' in props ? props : { ...props, size: undefined };\n  const { weight } =\n    'weight' in props ? props : { ...props, weight: undefined };\n\n  return (\n    <Box\n      {...otherProps}\n      testId={testId}\n      domRef={domRef}\n      className={`${className ?? ''} RollingText`}\n    >\n      {cloneElementWithCssProp(\n        use || <Body size={size as BodySize} weight={weight as BodyWeight} />,\n        {\n          testId: `${testId}__text--${text}`,\n          sx: {\n            lineHeight: '1',\n            d: 'flex',\n            justifyContent: 'center',\n            whiteSpace: 'nowrap',\n          },\n          className: 'text',\n          children: (\n            <AnimatePresence>\n              {text && (\n                <motion.span\n                  style={{\n                    position: 'absolute',\n                  }}\n                  className=\"animatingSpan\"\n                  key={text}\n                  data-testid={`${testId}__text--${text}__animatingSpan`}\n                  {...{\n                    variants,\n                    initial: 'enter',\n                    animate: 'center',\n                    exit: 'exit',\n                    transition: {\n                      duration: base.motion.normal[animationKind].jsDuration,\n                      ease: base.motion.normal[animationKind].jsEase,\n                    },\n                  }}\n                >\n                  {text}\n                </motion.span>\n              )}\n            </AnimatePresence>\n          ),\n        },\n      )}\n    </Box>\n  );\n}\n\nRollingText.displayName = 'RollingText';\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { ReactElement, Ref, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { StandardComponentWithProps } from '../../../types/shared';\nimport { GetMultiTextProps } from '../../../types/text';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { prettyFormatNumber } from '../../../utils/numberHelpers';\nimport { Box } from '../../Box';\nimport { CloudImage, CloudImageProps } from '../../CloudImage';\nimport { Body } from '../Body';\n\ntype PriceDisplayBaseProps = Pick<CloudImageProps, 'imageResizeServiceUrl'> &\n  StandardComponentWithProps<\n    HTMLSpanElement,\n    {\n      price: string;\n      fiatAmount?: string;\n      currencyImageUrl?: string | null;\n      use?: ReactElement;\n    }\n  >;\n\nexport type PriceDisplayProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = GetMultiTextProps<RC, Use, PriceDisplayBaseProps>;\n\nconst baseOuterContainerStyles = {\n  display: 'inline-flex',\n  flexDirection: 'column',\n  alignItems: 'flex-end',\n  textAlign: 'right',\n  wordBreak: 'break-word',\n  position: 'relative',\n  c: 'base.color.text.primary',\n};\n\nexport function PriceDisplay<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  price,\n  fiatAmount,\n  domRef,\n  currencyImageUrl,\n  imageResizeServiceUrl,\n  sx = {},\n  testId = 'PriceDisplay',\n  rc = <span />,\n  ...props\n}: PriceDisplayProps<RC, Use>) {\n  const { use, ...boxDomAttrProps } =\n    'use' in props ? props : { ...props, use: undefined };\n  const { size } = 'size' in props ? props : { size: undefined };\n  const { weight } = 'weight' in props ? props : { weight: undefined };\n\n  const prettyPrice = prettyFormatNumber(price);\n  const prettyFiatAmount = fiatAmount ? prettyFormatNumber(fiatAmount) : null;\n\n  const priceContent = useMemo(\n    () =>\n      cloneElementWithCssProp(\n        use || <Body size={size as BodySize} weight={weight as BodyWeight} />,\n        {\n          testId: `${testId}__price`,\n          ...(size ? { size } : {}),\n          sx: {\n            d: 'flex',\n            alignItems: 'baseline',\n            gap: '0.3em',\n          },\n          children: (\n            <>\n              {prettyPrice}\n              {currencyImageUrl && (\n                <CloudImage\n                  testId={`${testId}__price__currencyImage`}\n                  imageUrl={currencyImageUrl}\n                  imageResizeServiceUrl={imageResizeServiceUrl}\n                  sx={{ width: '0.76em' }}\n                />\n              )}\n            </>\n          ),\n        },\n      ),\n    [\n      currencyImageUrl,\n      imageResizeServiceUrl,\n      prettyPrice,\n      size,\n      testId,\n      use,\n      weight,\n    ],\n  );\n\n  return (\n    <Box\n      {...boxDomAttrProps}\n      rc={rc}\n      testId={testId}\n      // @TODO: this should be a Span element, not HTMLDivElement\n      domRef={domRef as Ref<HTMLDivElement>}\n      sx={merge({}, baseOuterContainerStyles, sx)}\n    >\n      {priceContent}\n      {prettyFiatAmount && (\n        <Body\n          sx={{ color: 'base.color.text.secondary', textAlign: 'left' }}\n          size=\"xSmall\"\n          weight=\"regular\"\n          testId={`${testId}__fiatAmount`}\n          className=\"fiatPrice\"\n        >\n          {prettyFiatAmount}\n        </Body>\n      )}\n    </Box>\n  );\n}\n\nPriceDisplay.displayName = 'PriceDisplay';\n","import { Interpolation } from '@emotion/react';\nimport { useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useConvertSxToEmotionStyles,\n  useDetectBadImage,\n  useDetectSvgImage,\n  useTheme,\n} from '../../hooks';\nimport { ResponsiveSizes } from '../../types/image';\nimport { StandardComponentWithProps } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { base64UrlEncode } from '../../utils/encodeHelpers';\n\nexport const DARK_ON_LIGHT_DEFAULT_IMAGE =\n  'https://design-system.immutable.com/hosted-for-ds/images/defaultTokenImage--darkOnLight.svg';\nexport const LIGHT_ON_DARK_DEFAULT_IMAGE =\n  'https://design-system.immutable.com/hosted-for-ds/images/defaultTokenImage--lightOnDark.svg';\n\nexport type CloudImageProps = Omit<\n  StandardComponentWithProps<\n    HTMLImageElement,\n    {\n      imageUrl?: string | null;\n      defaultImageUrl?: string;\n      defaultImageClassName?: string;\n      responsiveSizes?: ResponsiveSizes;\n      relativeImageSizeInLayout?: string;\n      imageResizeServiceUrl?: string;\n      // @NOTE: because its still experimental, the loading type does not yet\n      // exist on the HTMLImageElement type.\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading\n      loading?: 'lazy' | 'eager';\n      // @NOTE: for some reason, DetailedHTMLProps<HTMLAttributes<HTMLImageElement>, HTMLImageElement>\n      // does not include the alt attribute, so we have to add it here. :facepalm:\n      alt?: string;\n    }\n  >,\n  'rc'\n>;\n\nexport const generateBaseImageUrl = ({\n  imageUrl,\n  imageResizeServiceUrl,\n}: {\n  imageResizeServiceUrl: string;\n  imageUrl?: string | null;\n}) =>\n  imageUrl\n    ? `${imageResizeServiceUrl}/url=${base64UrlEncode(imageUrl)}`\n    : undefined;\n\nexport const generateResizedImageUrl = ({\n  width,\n  height,\n  imageUrl,\n  imageResizeServiceUrl,\n  isSvg,\n}: {\n  width?: number;\n  height?: number;\n  imageUrl?: string | null;\n  imageResizeServiceUrl: string;\n  isSvg?: boolean;\n}) =>\n  imageUrl\n    ? `${generateBaseImageUrl({ imageResizeServiceUrl, imageUrl })}${\n        width && !isSvg ? `&w=${width}` : height && !isSvg ? `&h=${height}` : ''\n      }`\n    : undefined;\n\nconst pickMinimumSize = (sizes?: ResponsiveSizes) => sizes?.sort()[0];\nexport const DEFAULT_IMAGE_SIZE = 256;\n\nexport function CloudImage({\n  testId,\n  className,\n  domRef,\n  defaultImageClassName,\n  imageUrl,\n  defaultImageUrl,\n  responsiveSizes = [32, 64, 128, 256],\n  relativeImageSizeInLayout = `${pickMinimumSize(responsiveSizes)}px`,\n  loading = 'lazy',\n  imageResizeServiceUrl = 'https://image-resizer-cache.dev.immutable.com',\n  sx = {},\n  alt,\n  ...props\n}: CloudImageProps) {\n  const theme = useTheme();\n  const pickedDefaultImage = useMemo(() => {\n    return (\n      defaultImageUrl ||\n      (theme.base.colorMode === 'lightOnDark'\n        ? LIGHT_ON_DARK_DEFAULT_IMAGE\n        : DARK_ON_LIGHT_DEFAULT_IMAGE)\n    );\n  }, [theme, defaultImageUrl]);\n  const customStyles = useConvertSxToEmotionStyles(sx);\n  const imageIsSvg = useDetectSvgImage({\n    imageUrl: generateBaseImageUrl({ imageUrl, imageResizeServiceUrl }),\n  });\n  const imageIsValid = useDetectBadImage({\n    imageUrl: generateResizedImageUrl({\n      imageUrl,\n      imageResizeServiceUrl,\n      // @NOTE: to see if an exists, only try to get a tiny version of it (dont get the fullsized image)\n      width: 32,\n    }),\n  });\n  const srcSet = useMemo(\n    () =>\n      responsiveSizes?.reduce(\n        (accum, current) =>\n          `${accum}${generateResizedImageUrl({\n            imageUrl,\n            imageResizeServiceUrl,\n            width: current,\n            isSvg: false,\n          })} ${current + 20}w, `,\n        // @NOTE add some ^ buffer on here to slightly increase the\n        // threshold with which a larger image is selected by the browser\n        // this allows for things like sub-pixel rounding and scrollbars\n        '',\n      ),\n    [responsiveSizes, imageUrl, imageResizeServiceUrl],\n  );\n\n  const srcAttrs = useMemo(\n    () =>\n      imageIsSvg\n        ? {\n            src: generateResizedImageUrl({\n              imageUrl,\n              imageResizeServiceUrl,\n              isSvg: true,\n            }),\n          }\n        : srcSet\n        ? {\n            srcSet,\n            sizes: relativeImageSizeInLayout,\n          }\n        : {\n            src: generateResizedImageUrl({\n              imageUrl,\n              imageResizeServiceUrl,\n              width: DEFAULT_IMAGE_SIZE,\n              isSvg: false,\n            }),\n          },\n    [\n      imageIsSvg,\n      imageUrl,\n      imageResizeServiceUrl,\n      srcSet,\n      relativeImageSizeInLayout,\n    ],\n  );\n\n  return imageIsValid ? (\n    <img\n      {...props}\n      {...srcAttrs}\n      alt={alt}\n      className={`${className ?? ''} CloudImage`}\n      css={customStyles}\n      data-testid={testId}\n      loading={loading}\n      ref={domRef}\n    />\n  ) : (\n    <img\n      {...props}\n      ref={domRef}\n      alt={alt}\n      className={`${className ?? ''} ${\n        defaultImageClassName ?? ''\n      } CloudImage CloudImage--defaultImage`}\n      data-testid={`${testId}--defaultImage`}\n      loading={loading}\n      src={pickedDefaultImage}\n      css={merge(customStyles, {\n        objectFit: 'contain',\n        objectPosition: 'center',\n      } satisfies Interpolation<BiomeTheme>)}\n    />\n  );\n}\n\nCloudImage.displayName = 'CloudImage';\n","import {\n  BodySize,\n  BodyWeight,\n  CaptionSize,\n  CaptionWeight,\n  HeadingSize,\n  HeadingWeight,\n} from '@biom3/design-tokens';\nimport { ElementType, ReactElement, ReactNode } from 'react';\n\nimport { Body, Caption, Heading } from '../components/Text';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from './shared';\nimport { DeeplyNestedSx } from './sxProps';\n\nexport type BodyTextProps = {\n  size?: MakeResponsive<BodySize>;\n  weight?: MakeResponsive<BodyWeight>;\n  mono?: boolean;\n  shimmer?: number;\n  shimmerSx?: DeeplyNestedSx;\n};\n\nexport type BaseBodyProps = StandardComponentWithProps<\n  HTMLSpanElement,\n  {\n    children?: ReactNode;\n  } & BodyTextProps\n>;\n\nexport type BodyProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'span'> & BaseBodyProps\n    : BaseBodyProps & { rc: RC };\n\nexport type BaseHeadingProps = StandardComponentWithProps<\n  HTMLHeadingElement,\n  {\n    children?: ReactNode;\n    size?: MakeResponsive<HeadingSize>;\n    weight?: MakeResponsive<HeadingWeight>;\n    autoGenerateId?: boolean;\n    id?: string;\n  }\n>;\n\nexport type HeadingProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'h1'> & BaseHeadingProps\n    : BaseHeadingProps & { rc: RC };\n\nexport type CaptionBaseProps = StandardComponentWithProps<\n  HTMLSpanElement,\n  {\n    children?: ReactNode;\n    size?: MakeResponsive<CaptionSize>;\n    weight?: MakeResponsive<CaptionWeight>;\n  }\n>;\n\nexport type CaptionProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'span'> & CaptionBaseProps\n    : CaptionBaseProps & { rc: RC };\n\nexport type StringWithoutHash<T> = T extends `#${string}` ? never : T;\n\nexport type BiomeTextComponent = ReactElement;\n\nexport function isBody(\n  { type }: BiomeTextComponent,\n  props: unknown,\n): props is Partial<BodyProps<undefined>> {\n  return type === Body;\n}\n\nexport function isHeading(\n  { type }: BiomeTextComponent,\n  props: unknown,\n): props is Partial<HeadingProps<undefined>> {\n  return type === Heading;\n}\n\nexport function isCaption(\n  { type }: BiomeTextComponent,\n  props: unknown,\n): props is Partial<CaptionProps<undefined>> {\n  return type === Caption;\n}\n\nexport type GetMultiTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n  BaseProps extends {},\n  FallbackNodeTag extends ElementType = 'span',\n> = RC extends undefined\n  ? Use extends undefined\n    ? DomPropsWithDomRef<FallbackNodeTag> & BaseProps & BodyTextProps\n    : BaseProps & { use: Use }\n  : Use extends undefined\n  ? BaseProps & BodyTextProps & { rc: RC }\n  : BaseProps & { rc: RC; use: Use };\n","import { ReactNode, Ref } from 'react';\n\nimport { DomReferenceRect, MakeResponsive } from './shared';\n\nexport const TOOLTIP_SIZES = ['small', 'medium', 'large'] as const;\nexport const DEFAULT_TOOLTIP_SIZE: TooltipSize = 'medium';\nexport type TooltipSize = (typeof TOOLTIP_SIZES)[number];\n\nexport type TooltipComponentProps = {\n  id?: string;\n  size?: MakeResponsive<TooltipSize>;\n  domRef?: Ref<HTMLButtonElement>;\n  children: ReactNode;\n};\n\nexport type TooltipItem = {\n  id: string;\n  content: ReactNode;\n  targetRect: DomReferenceRect;\n  size: MakeResponsive<TooltipSize>;\n};\n\nexport type TooltipContext = {\n  tooltipList: TooltipItem[];\n};\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive, TooltipSize } from '../../types';\nimport { BiomeTheme } from '../../types/theme';\nimport { isError } from '../../utils/textStyleHelpers';\n\nexport const baseContainerSx = {\n  position: 'absolute',\n  maxw: '320px',\n  brad: 'base.borderRadius.x4',\n  boxShadow: 'base.shadow.500',\n  zIndex: 'base.zLevel.tooltip',\n  background: 'base.color.neutral.500',\n  textAlign: 'center',\n};\n\nexport function getContainerStyles({\n  size,\n  theme,\n}: {\n  size: TooltipSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        padding: theme.base.spacing.x3,\n      };\n\n    case 'large':\n      return {\n        padding: theme.base.spacing.x5,\n      };\n\n    case 'medium':\n    default:\n      return {\n        padding: theme.base.spacing.x4,\n      };\n  }\n}\n\nexport function responsiveContainerStyles({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<TooltipSize>;\n  theme: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getContainerStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { ReactNode, useContext, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { useBrowserLayoutEffect } from '../../hooks/useBrowserLayoutEffect';\nimport { BiomeShadowRootContext } from '../../providers/BiomeShadowRootProvider/context';\n\nexport type ClientOnlyPortalProps = {\n  selector: string;\n  children?: ReactNode;\n};\n\nexport function ClientOnlyPortal({\n  children,\n  selector,\n}: ClientOnlyPortalProps) {\n  const shadowRoot = useContext(BiomeShadowRootContext);\n  const mountPointDomRef = useRef<HTMLElement | null>(null);\n  const [portalMounted, setPortalMounted] = useState(false);\n  useBrowserLayoutEffect(() => {\n    mountPointDomRef.current = shadowRoot\n      ? shadowRoot.querySelector(selector)\n      : document.querySelector(selector);\n    setPortalMounted(true);\n    return () => setPortalMounted(false);\n  }, []);\n\n  return portalMounted && mountPointDomRef.current\n    ? createPortal(children, mountPointDomRef.current)\n    : null;\n}\n","import { useLayoutEffect } from 'react';\n\nexport const useBrowserLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : () => {};\n","import { designTokens } from '@biom3/design-tokens';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Children, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box } from '../../components/Box';\nimport { ToastButtCon } from '../../components/Toast/ToastButtCon';\nimport { ToastButton } from '../../components/Toast/ToastButton';\nimport { ToastMessage } from '../../components/Toast/ToastMessage';\nimport { useSplitApartChildrenAndSubComponents as splitApartChildrenAndSubComponents } from '../../hooks';\nimport { useOverlaysStore } from '../../providers';\nimport { isChildSubcomponent } from '../../utils';\nimport { hFlex, vFlex } from '../../utils/sxChunks';\n\ntype ToastGroupPosition =\n  | 'topLeft'\n  | 'topRight'\n  | 'topCenter'\n  | 'bottomLeft'\n  | 'bottomRight'\n  | 'bottomCenter';\n\nfunction getToastGroupPositionStyles(group: ToastGroupPosition) {\n  switch (group) {\n    case 'topLeft':\n      return {\n        top: 'base.spacing.x6',\n        left: 'base.spacing.x6',\n      };\n\n    case 'topCenter':\n      return {\n        top: 'base.spacing.x6',\n        left: '50%',\n        translate: '-50% 0',\n      };\n\n    case 'bottomLeft':\n      return {\n        bottom: 'base.spacing.x6',\n        left: 'base.spacing.x6',\n      };\n\n    case 'bottomRight':\n      return {\n        bottom: 'base.spacing.x6',\n        right: 'base.spacing.x6',\n      };\n\n    case 'bottomCenter':\n      return {\n        bottom: 'base.spacing.x6',\n        left: '50%',\n        translate: '-50% 0',\n      };\n\n    case 'topRight':\n    default: {\n      return {\n        top: 'base.spacing.x6',\n        right: 'base.spacing.x6',\n      };\n    }\n  }\n}\n\nconst RIGHT_TRANSLATE = '12px';\nconst LEFT_TRANSLATE = '-12px';\nconst TOP_TRANSLATE = '-12px';\nconst BOTTOM_TRANSLATE = '12px';\nconst NO_TRANSLATE = '0px';\n\nexport function ToastOverlay() {\n  const { state: toastList } = useOverlaysStore(state => state.toastList);\n\n  const toastsGroupedByPosition = useMemo(() => {\n    return {\n      topLeft: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'top' && x === 'left';\n      }),\n      topCenter: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'top' && x === 'center';\n      }),\n      topRight: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'top' && x === 'right';\n      }),\n      bottomLeft: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'bottom' && x === 'left';\n      }),\n      bottomRight: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'bottom' && x === 'right';\n      }),\n      bottomCenter: toastList.filter(toast => {\n        const {\n          position: { x, y },\n        } = toast;\n        return y === 'bottom' && x === 'center';\n      }),\n    };\n  }, [toastList]);\n\n  return (\n    <AnimatePresence>\n      {Object.keys(toastsGroupedByPosition).map(key => {\n        const typedKey = key as ToastGroupPosition;\n        const group = toastsGroupedByPosition[typedKey];\n        if (group.length === 0) return null;\n\n        return (\n          <Box\n            data-toast-group={typedKey}\n            key={typedKey}\n            testId={`toastsContainer--${typedKey}`}\n            sx={{\n              ...vFlex,\n              ...getToastGroupPositionStyles(typedKey),\n              gap: 'base.spacing.x2',\n              position: 'fixed',\n              zIndex: 'base.zLevel.toast',\n              alignItems: 'center',\n            }}\n            rc={\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  ...(typedKey === 'topRight' && { x: RIGHT_TRANSLATE }),\n                  ...(typedKey === 'topLeft' && { x: LEFT_TRANSLATE }),\n                  ...(typedKey === 'topCenter' && { y: TOP_TRANSLATE }),\n                  ...(typedKey === 'bottomRight' && { x: RIGHT_TRANSLATE }),\n                  ...(typedKey === 'bottomLeft' && { x: LEFT_TRANSLATE }),\n                  ...(typedKey === 'bottomCenter' && { y: BOTTOM_TRANSLATE }),\n                }}\n                exit={{\n                  opacity: 0,\n                  ...(typedKey === 'topRight' && { x: RIGHT_TRANSLATE }),\n                  ...(typedKey === 'topLeft' && { x: LEFT_TRANSLATE }),\n                  ...(typedKey === 'topCenter' && { y: TOP_TRANSLATE }),\n                  ...(typedKey === 'bottomRight' && { x: RIGHT_TRANSLATE }),\n                  ...(typedKey === 'bottomLeft' && { x: LEFT_TRANSLATE }),\n                  ...(typedKey === 'bottomCenter' && { y: BOTTOM_TRANSLATE }),\n                }}\n                animate={{\n                  opacity: 1,\n                  ...(typedKey === 'topRight' && { x: NO_TRANSLATE }),\n                  ...(typedKey === 'topLeft' && { x: NO_TRANSLATE }),\n                  ...(typedKey === 'topCenter' && { y: NO_TRANSLATE }),\n                  ...(typedKey === 'bottomRight' && { x: NO_TRANSLATE }),\n                  ...(typedKey === 'bottomLeft' && { x: NO_TRANSLATE }),\n                  ...(typedKey === 'bottomCenter' && { y: NO_TRANSLATE }),\n                }}\n                transition={{\n                  duration: designTokens.base.motion.normal.fast.jsDuration,\n                  ease: designTokens.base.motion.normal.fast.jsEase,\n                }}\n              />\n            }\n          >\n            <AnimatePresence>\n              {group.map(toast => {\n                const {\n                  id,\n                  content,\n                  hideDismissButton,\n                  variant,\n                  onCloseToast,\n                  buttonsPosition,\n                  testId,\n                  sx = {},\n                } = toast;\n                const { otherChildren } = splitApartChildrenAndSubComponents(\n                  content,\n                  [ToastMessage, ToastButtCon, ToastButton],\n                );\n                return (\n                  <Box\n                    data-id={id}\n                    key={id}\n                    testId={testId ?? 'toastsContainer__toast'}\n                    sx={merge(\n                      {\n                        ...(buttonsPosition === 'right'\n                          ? {\n                              ...hFlex,\n                              alignItems: 'center',\n                              justifyContent: 'space-between',\n                            }\n                          : { ...vFlex }),\n                        gap: 'base.spacing.x2',\n                        bg: 'base.color.translucent.standard.1000',\n                        p: 'base.spacing.x2',\n                        pl: 'base.spacing.x9',\n                        brad: 'base.borderRadius.x6',\n                        c: 'base.color.text.inverse.primary',\n                        minw: '230px',\n                        maxw: '450px',\n                        minh: '64px',\n                        boxShadow: 'base.shadow.500',\n                        position: 'relative',\n                      },\n                      sx,\n                    )}\n                    rc={\n                      <motion.div\n                        initial={{\n                          opacity: 0,\n                          ...(typedKey === 'topRight' && {\n                            x: RIGHT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'topLeft' && {\n                            x: LEFT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'topCenter' && {\n                            y: TOP_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomRight' && {\n                            x: RIGHT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomLeft' && {\n                            x: LEFT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomCenter' && {\n                            y: BOTTOM_TRANSLATE,\n                          }),\n                        }}\n                        exit={{\n                          opacity: 0,\n                          ...(typedKey === 'topRight' && {\n                            x: RIGHT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'topLeft' && {\n                            x: RIGHT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'topCenter' && {\n                            y: TOP_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomRight' && {\n                            x: RIGHT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomLeft' && {\n                            x: LEFT_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomCenter' && {\n                            y: BOTTOM_TRANSLATE,\n                          }),\n                        }}\n                        animate={{\n                          opacity: 1,\n                          ...(typedKey === 'topRight' && { x: NO_TRANSLATE }),\n                          ...(typedKey === 'topLeft' && { x: NO_TRANSLATE }),\n                          ...(typedKey === 'topCenter' && {\n                            y: NO_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomRight' && {\n                            x: NO_TRANSLATE,\n                          }),\n                          ...(typedKey === 'bottomLeft' && { x: NO_TRANSLATE }),\n                          ...(typedKey === 'bottomCenter' && {\n                            y: NO_TRANSLATE,\n                          }),\n                        }}\n                        transition={{\n                          duration:\n                            designTokens.base.motion.normal.fast.jsDuration,\n                          ease: designTokens.base.motion.normal.fast.jsEase,\n                        }}\n                      />\n                    }\n                  >\n                    <Box\n                      testId=\"toastVariantBar\"\n                      sx={{\n                        top: 'base.spacing.x2',\n                        bottom: 'base.spacing.x2',\n                        position: 'absolute',\n                        left: 'base.spacing.x2',\n                        width: '6px',\n                        brad: 'base.borderRadius.x6',\n                        bg: `base.color.status.${variant}.bright`,\n                      }}\n                    />\n\n                    {Children.map(content, child => {\n                      return isChildSubcomponent(child, ToastMessage)\n                        ? child\n                        : null;\n                    })}\n                    <Box\n                      sx={{\n                        ...hFlex,\n                        ...(buttonsPosition === 'bottomRight'\n                          ? { justifyContent: 'flex-end' }\n                          : {}),\n                        gap: 'base.spacing.x1',\n                      }}\n                    >\n                      {Children.map(content, child => {\n                        return isChildSubcomponent(child, ToastButtCon) ||\n                          isChildSubcomponent(child, ToastButton)\n                          ? child\n                          : null;\n                      })}\n                      {!hideDismissButton ? (\n                        <ToastButton\n                          testId=\"dismissToastButton\"\n                          onClick={() => {\n                            onCloseToast?.();\n                          }}\n                        >\n                          Dismiss\n                        </ToastButton>\n                      ) : null}\n                    </Box>\n                    {otherChildren}\n                  </Box>\n                );\n              })}\n            </AnimatePresence>\n          </Box>\n        );\n      })}\n    </AnimatePresence>\n  );\n}\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useConvertSxToEmotionStyles } from '../../../hooks/useConvertSxToEmotionStyles';\nimport { BaseClickableWithRCAndDomProps } from '../../../types/clickable';\nimport { cloneElementWithCssProp } from '../../../utils';\n\nexport function BaseClickable<RC extends ReactElement | undefined = undefined>({\n  rc = <button />,\n  testId,\n  sx = {},\n  children,\n  domRef,\n  ...props\n}: BaseClickableWithRCAndDomProps<RC>) {\n  const { onClick, ...otherProps } =\n    'onClick' in props ? props : { ...props, onClick: null };\n  const customStyles = useConvertSxToEmotionStyles(sx);\n\n  const css = merge(\n    {\n      // @NOTE Some basic reset styles:\n      padding: 0,\n      border: 'none',\n      background: 'transparent',\n      display: 'inline-flex',\n      alignItems: 'baseline',\n      cursor: 'pointer',\n      textDecoration: 'none',\n    },\n    customStyles,\n  );\n\n  return cloneElementWithCssProp(rc, {\n    ...otherProps,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    ...(onClick ? { onClick } : {}),\n    css,\n    children,\n  });\n}\n\nBaseClickable.displayName = 'BaseClickable';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetCurrentSizeClass,\n  useGetSubcomponentChild,\n  useTheme,\n} from '../../../hooks';\nimport { ButtConProps, BUTTON_SIZES } from '../../../types/clickable';\nimport { getStartingSize } from '../../../utils/styleHelpers';\nimport { Icon } from '../../Icon';\nimport { SmartClone } from '../../SmartClone';\nimport { ButtConSvgIcon } from './ButtConSvgIcon';\nimport { Button } from './Button';\nimport {\n  DEFAULT_BUTTON_SIZE,\n  DEFAULT_BUTTON_VARIANT,\n  getButtConIconStyles,\n  getButtConStyles,\n  getResponsiveButtConIconStyles,\n  getResponsiveButtConStyles,\n} from './styles';\n\nexport function ButtCon<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_BUTTON_SIZE,\n  variant = DEFAULT_BUTTON_VARIANT,\n  sx = {},\n  iconSx = {},\n  testId,\n  iconVariant,\n  className,\n  ...props\n}: ButtConProps<RC>) {\n  const { icon } = 'icon' in props ? props : { icon: undefined };\n  const { children } = 'children' in props ? props : { children: null };\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const currentSizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_BUTTON_SIZE,\n    BUTTON_SIZES,\n  );\n  const allButtonSx = merge(\n    getButtConStyles({ size: startingSize, themeProps }),\n    getResponsiveButtConStyles({\n      size,\n      themeProps,\n    }),\n    themeProps.components?.ButtCon?.sxOverride ?? {},\n    sx,\n  );\n  const allIconSx = merge(\n    getButtConIconStyles({ size: startingSize, variant, themeProps }),\n    getResponsiveButtConIconStyles({\n      variant,\n      size,\n      themeProps,\n    }),\n    iconSx,\n  );\n  const svgIconChild = useGetSubcomponentChild(children, ButtConSvgIcon);\n\n  return (\n    <Button\n      {...props}\n      size={size}\n      variant={variant}\n      sx={allButtonSx}\n      testId={testId}\n      className={`${\n        className ?? ''\n      } ButtCon ButtCon--${variant} ButtCon--${currentSizeClass}`}\n    >\n      {svgIconChild ? (\n        <SmartClone testId={`${testId}__svgIcon`}>{svgIconChild}</SmartClone>\n      ) : icon ? (\n        <Icon\n          className=\"buttCon__icon\"\n          sx={allIconSx}\n          icon={icon}\n          variant={iconVariant}\n          testId={`${testId}__icon`}\n        />\n      ) : (\n        children\n      )}\n    </Button>\n  );\n}\n\nButtCon.displayName = 'ButtCon';\nButtCon.SvgIcon = ButtConSvgIcon;\n","import { keyframes } from '@emotion/react';\nimport { ReactElement, useContext, useEffect, useRef, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect';\nimport { DualVariantIconProps } from '../../types/icon';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { fetchIconContent } from '../../utils/svgHelpers';\nimport { SvgIcon } from '../SvgIcon';\nimport { TooltipComponentContext } from '../Tooltip/shared';\n\n// @TODO: should eventually maybe turn this into a simple array of strings\nexport const dualVariantIcons = {\n  Add: null,\n  Alert: null,\n  AirDrop: null,\n  ArrowBackward: null,\n  ArrowForward: null,\n  Authenticated: null,\n  Calendar: null,\n  Cart: null,\n  ChevronBackward: null,\n  ChevronCollapse: null,\n  ChevronExpand: null,\n  ChevronForward: null,\n  CircleRightArrow: null,\n  CircleDownArrow: null,\n  Close: null,\n  CloseWithCircle: null,\n  Coins: null,\n  CopyText: null,\n  Countdown: null,\n  Dashboard: null,\n  DevContracts: null,\n  DevExplorer: null,\n  Document: null,\n  Documents: null,\n  Dollar: null,\n  Education: null,\n  Edit: null,\n  EmailAddress: null,\n  EmbedCode: null,\n  ESports: null,\n  EthToken: null,\n  Exclamation: null,\n  Expand: null,\n  Faucet: null,\n  Fullscreen: null,\n  FullscreenExit: null,\n  Home: null,\n  HidePassword: null,\n  ImageAdd: null,\n  Immutable: null,\n  ImxRewards: null,\n  ImxToken: null,\n  Information: null,\n  Instagram: null,\n  JumpTo: null,\n  Logout: null,\n  Lock: null,\n  Menu: null,\n  Minting: null,\n  Minus: null,\n  More: null,\n  MoreVertical: null,\n  Notification: null,\n  PancakeSwap: null,\n  People: null,\n  ReturnKeyboard: null,\n  Search: null,\n  Security: null,\n  SettingsCog: null,\n  Shield: null,\n  ShowPassword: null,\n  SocialShare: null,\n  SoundOn: null,\n  SoundOff: null,\n  Sparkle: null,\n  Swatch: null,\n  TickWithCircle: null,\n  Tags: null,\n  Tick: null,\n  Tokens: null,\n  TreasureChest: null,\n  Trophy: null,\n  ViewList: null,\n  Wallet: null,\n  Profile: null,\n  Items: null,\n  BankCard: null,\n} as const;\n\n// @TODO: should eventually maybe turn this into a simple array of strings\nexport const singleVariantIcons = {\n  Apple: null,\n  DevSdk: null,\n  Discord: null,\n  Email: null,\n  Exchange: null,\n  GraphPerformance: null,\n  Google: null,\n  InformationCircle: null,\n  JumpTo: null,\n  LinkedIn: null,\n  Loading: null,\n  Pause: null,\n  Percentage: null,\n  Play: null,\n  Preferences: null,\n  Reddit: null,\n  Refresh: null,\n  Sort: null,\n  SushiSwap: null,\n  Swap: null,\n  Flip: null,\n  Sword: null,\n  Telegram: null,\n  ThemeDark: null,\n  ThemeLight: null,\n  Twitter: null,\n  UniSwap: null,\n  Unity: null,\n  ViewGrid: null,\n  WalletConnect: null,\n  WalletDisconnect: null,\n  YouTube: null,\n  Overview: null,\n} as const;\n\nexport const allIcons = {\n  ...dualVariantIcons,\n  ...singleVariantIcons,\n};\n\nexport type AllIconKeys = keyof typeof allIcons;\n\nconst spin = keyframes`\n  from { \n    rotate: 0deg; \n  } \n  to { \n    rotate: 360deg; \n  }\n`;\n\ntype IconBaseProps = DualVariantIconProps & {\n  icon: AllIconKeys;\n};\n\nexport type IconProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'svg'> & IconBaseProps\n    : IconBaseProps & { rc: RC };\n\nexport function Icon<RC extends ReactElement | undefined = undefined>({\n  icon,\n  variant = 'regular',\n  sx = {},\n  testId,\n  className,\n  ...props\n}: IconProps<RC>) {\n  const { triggerDomRecrawl } = useContext(TooltipComponentContext);\n  const [svgContent, setSvgContent] = useState<string[] | null>(null);\n  const isFetching = useRef(false);\n  const previousIcon = usePrevious(icon);\n  const modifiedSx =\n    icon === 'Loading'\n      ? merge(\n          {\n            animation: `${spin} 1s linear infinite`,\n            transformOrigin: '50% 50%',\n          },\n          sx,\n        )\n      : sx;\n\n  useEffect(() => {\n    async function fetchContent() {\n      isFetching.current = true;\n      const content = await fetchIconContent(icon, variant);\n      isFetching.current = false;\n      if (content) setSvgContent(content);\n    }\n    // @NOTE: ONLY fetch the icon content if it hasn't already been fetched\n    if (!svgContent && !isFetching.current) fetchContent();\n  }, [icon, variant, svgContent]);\n\n  useEffect(() => {\n    triggerDomRecrawl?.();\n  }, [triggerDomRecrawl, svgContent]);\n\n  useUpdateEffect(() => {\n    if (previousIcon !== icon) setSvgContent(null);\n  }, [icon, previousIcon]);\n\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      sx={modifiedSx}\n      data-icon={icon}\n      data-variant={variant}\n      className={`${className ?? ''} Icon`}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nIcon.displayName = 'Icon';\n","import { DependencyList, EffectCallback, useEffect, useRef } from 'react';\n\n// useUpdateEffect is a React hook that runs an effect only on updates, not on the initial render.\n// If we ever use usehooks-ts, we can use its version of this, with the same name.\nexport const useUpdateEffect = (\n  effect: EffectCallback,\n  deps?: DependencyList,\n) => {\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n","import ls from 'localstorage-slim';\n\nimport { AllIconKeys, dualVariantIcons } from '../components/Icon/Icon';\nimport { AllLogoKeys } from '../components/Logo/Logo';\nimport { IconVariant } from '../types/icon';\n\ntype IconChildJsonResponse = {\n  regular: string[];\n  bold?: string[];\n};\n\nconst LS_OPTIONS = {\n  ttl: 1000 * 60 * 60 * 24 * 4, // 4 days\n};\n\nexport async function fetchIconContent(\n  icon: AllIconKeys,\n  variant: IconVariant,\n): Promise<string[]> {\n  const localStorageKey = `@biom3/react icon-cache: ${icon}-${variant}`;\n  const cachedIcon = ls.get(localStorageKey);\n\n  if (cachedIcon) {\n    return cachedIcon as string[];\n  }\n\n  try {\n    const resp = await fetch(\n      `https://biome.immutable.com/hosted-assets/icons/${icon}.json`,\n    );\n    const children = (await resp.json()) as IconChildJsonResponse;\n    const content =\n      variant === 'bold' && Object.keys(dualVariantIcons).includes(icon)\n        ? (children[variant] as string[])\n        : children.regular;\n    ls.set(localStorageKey, content, LS_OPTIONS);\n    return content;\n  } catch (err) {\n    console.error(`🧬 BIOME (icon) Fetch Error 🚨:`, err);\n    return [];\n  }\n}\n\nexport async function fetchLogoContent(logo: AllLogoKeys): Promise<string[]> {\n  const localStorageKey = `@biom3/react logo-cache: ${logo}`;\n  const cachedIcon = ls.get(localStorageKey);\n\n  if (cachedIcon) {\n    return cachedIcon as string[];\n  }\n\n  try {\n    const resp = await fetch(\n      `https://biome.immutable.com/hosted-assets/logos/${logo}.json`,\n    );\n    const data = await resp.json();\n    ls.set(localStorageKey, data, LS_OPTIONS);\n    return data;\n  } catch (err) {\n    console.error(`🧬 BIOME (logo) Fetch Error 🚨:`, err);\n    return [];\n  }\n}\n","import { Gradient, smartPickTokenValue } from '@biom3/design-tokens';\nimport { Interpolation } from '@emotion/react';\nimport { Children, isValidElement, ReactElement, ReactNode } from 'react';\nimport { isFragment } from 'react-is';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { useConvertSxToEmotionStyles } from '../../hooks/useConvertSxToEmotionStyles';\nimport {\n  DomPropsWithDomRef,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { cloneElementWithCssProp } from '../../utils/componentHelpers';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\n\nexport type SvgIconProps = StandardComponentWithProps<\n  SVGSVGElement,\n  {\n    children: ReactNode;\n    viewBox?: string;\n  }\n>;\n\nexport const CUSTOM_CSS_GRADIENT_ERROR = `<SvgIcon /> does not support fill styles that are css-gradients. Custom gradients must be converted into SVG gradient syntax.`;\nexport const RESPONSIVE_GRADIENT_ERROR = `Due to the complexity involved, <SvgIcon /> does not yet support responsive gradients. Please only use a single gradient token. If this functionality is required, please indicate your interest in this functionality using the following jira ticket: https://immutable.atlassian.net/browse/DS-114.`;\n\nconst GRADIENT_REGEX = /base\\.gradient|linear-gradient|radial-gradient/g;\nconst DEFAULT_SX_PROPS = {\n  fill: 'base.color.brand.1',\n};\n\nexport function SvgIcon<RC extends ReactElement | undefined = undefined>({\n  testId,\n  children,\n  domRef,\n  className,\n  viewBox = '0 0 24 24',\n  sx = {},\n  rc = <svg />,\n  ...svgDomAttributes\n}: RC extends undefined\n  ? DomPropsWithDomRef<'svg'> & SvgIconProps\n  : SvgIconProps & { rc: RC }) {\n  const themeProps = useTheme();\n  let gradientTokens: Gradient = {\n    spectrum: '',\n    blendMode: '',\n    svgDefs: '',\n    svgDefIds: '',\n  };\n  if (typeof sx.fill === 'string') {\n    if (sx.fill.includes('base.gradient')) {\n      gradientTokens = smartPickTokenValue<Gradient>(themeProps, sx.fill);\n    } else if (sx.fill.match(/linear-gradient|radial-gradient/g)) {\n      throw new Error(CUSTOM_CSS_GRADIENT_ERROR);\n    }\n  } else if (typeof sx.fill === 'object') {\n    // @TODO: we should eventually allow the ability to supply responsive gradients\n    // but for now, we'll throw an error if we detect that the user is trying to do this\n    let isArrayAndIncludesGradient;\n    let isObjectAndIncludesGradient;\n    if (Array.isArray(sx.fill)) {\n      isArrayAndIncludesGradient = Boolean(\n        sx.fill.find(\n          item => typeof item === 'string' && item.match(GRADIENT_REGEX),\n        ),\n      );\n    } else {\n      isObjectAndIncludesGradient = Boolean(\n        Object.entries(sx.fill).find(\n          ([, value]) =>\n            typeof value === 'string' && value.match(GRADIENT_REGEX),\n        ),\n      );\n    }\n\n    if (isArrayAndIncludesGradient || isObjectAndIncludesGradient) {\n      throw new Error(RESPONSIVE_GRADIENT_ERROR);\n    }\n  }\n  const { svgDefs, svgDefIds } = gradientTokens;\n  const svgDefIdsAsArray = svgDefIds?.split(',').map(id => id.trim());\n\n  const unwrappedChildren = isFragment(children)\n    ? children.props.children\n    : children;\n  const clonedChildren =\n    svgDefIds?.length > 1\n      ? Children.map(unwrappedChildren, child => {\n          return svgDefIdsAsArray.map((id: string) => {\n            const clonedChild = isValidElement(child)\n              ? cloneElementWithCssProp(child, {\n                  key: id,\n                  css: { fill: `url(#${id})` },\n                })\n              : null;\n\n            return clonedChild;\n          });\n        })\n      : [children];\n\n  const sxWithDefaults = merge(\n    {},\n    DEFAULT_SX_PROPS,\n    setDefaultWidthSx(sx, 'base.icon.size.100'),\n    sx,\n  );\n  const customStyles = useConvertSxToEmotionStyles(\n    sxWithDefaults,\n  ) as Interpolation<BiomeTheme>;\n\n  const modifiedChildren = (\n    <>\n      {svgDefs && <defs dangerouslySetInnerHTML={{ __html: svgDefs }} />}\n      {clonedChildren}\n    </>\n  );\n\n  return cloneElementWithCssProp(rc, {\n    ...svgDomAttributes,\n    ...(testId ? { 'data-testid': testId } : {}),\n    ...(domRef ? { ref: domRef } : {}),\n    viewBox,\n    className: `SvgIcon ${className ?? ''}`,\n    xmlns: 'http://www.w3.org/2000/svg',\n    css: customStyles,\n    children: modifiedChildren,\n  });\n}\n\nSvgIcon.displayName = 'SvgIcon';\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport {\n  BUTTON_SIZES,\n  ButtonSize,\n  ButtonVariant,\n} from '../../../types/clickable';\nimport { MakeResponsive } from '../../../types/shared';\nimport { getStartingSize } from '../../../utils/styleHelpers';\nimport { SvgIcon, SvgIconProps } from '../../SvgIcon';\nimport {\n  DEFAULT_BUTTON_SIZE,\n  DEFAULT_BUTTON_VARIANT,\n  getButtConIconStyles,\n  getResponsiveButtConIconStyles,\n} from './styles';\n\nexport type ButtonIconProps = SvgIconProps & {\n  size?: MakeResponsive<ButtonSize>;\n  variant?: ButtonVariant;\n};\n\nexport function ButtConSvgIcon({\n  size = DEFAULT_BUTTON_SIZE,\n  variant = DEFAULT_BUTTON_VARIANT,\n  domRef,\n  children,\n  sx = {},\n  ...props\n}: ButtonIconProps) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const allIconSx = merge(\n    getButtConIconStyles({ size: startingSize, variant, themeProps }),\n    getResponsiveButtConIconStyles({\n      variant,\n      size,\n      themeProps,\n    }),\n    {\n      ...sx,\n      // @NOTE: convert sx shorthand to longhand (if neccissary)\n      // So that these sizes are correctly applied down below inside SvgIcon\n      ...(sx.w ? { width: sx.w } : sx.width ? { width: sx.width } : {}),\n      ...(sx.h ? { height: sx.w } : sx.height ? { height: sx.height } : {}),\n    },\n  );\n  return (\n    <SvgIcon {...props} sx={allIconSx}>\n      {children}\n    </SvgIcon>\n  );\n}\n\nButtConSvgIcon.displayName = 'ButtCon.SvgIcon';\n","import merge from 'ts-deepmerge';\n\nimport { ButtonSize, ButtonVariant } from '../../../../types/clickable';\nimport { MakeResponsive } from '../../../../types/shared';\nimport { BiomeTheme } from '../../../../types/theme';\nimport { isError } from '../../../../utils/textStyleHelpers';\nimport {\n  getPrimaryButtonStyles,\n  getPrimaryDestructiveButtonGenericStyles,\n  getPrimaryDestructiveButtonStyles,\n  getPrimaryInverseButtonGenericStyles,\n  getPrimaryInverseButtonStyles,\n  primaryButtonGenericStyles,\n} from './primaryStyles';\nimport {\n  getSecondaryButtonStyles,\n  getSecondaryDestructiveButtonStyles,\n  secondaryButtonGenericStyles,\n  secondaryDestructiveButtonGenericStyles,\n} from './secondaryStyles';\nimport {\n  getTertiaryButtonStyles,\n  tertiaryButtonGenericStyles,\n  tertiaryInverseButtonGenericStyles,\n} from './tertiaryStyles';\n\nexport const DEFAULT_BUTTON_SIZE = 'medium' as const;\nexport const DEFAULT_BUTTON_VARIANT = 'primary' as const;\n\nexport const baseButtonInnerSpanStyles = {\n  position: 'relative',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nexport function getInnerSpanStyles({\n  size,\n  themeProps: { base },\n}: {\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) {\n  return {\n    gap:\n      size === 'large'\n        ? base.spacing.x4\n        : size === 'medium'\n        ? base.spacing.x2\n        : base.spacing.x2,\n  };\n}\n\nexport function getResponsiveInnerSpanStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getInnerSpanStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport const baseButtonStyles = {\n  position: 'relative',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  textDecoration: 'none',\n  transitionProperty: 'box-shadow',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n  '&[disabled]': {\n    cursor: 'default',\n  },\n};\n\nexport function getResponsiveButtonStyles({\n  size,\n  variant,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  variant: ButtonVariant;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        let styles = {};\n        switch (variant) {\n          case 'secondary':\n            styles = getSecondaryButtonStyles(responsiveSize, themeProps);\n            break;\n\n          case 'tertiary':\n            styles = getTertiaryButtonStyles(responsiveSize, themeProps);\n            break;\n\n          case 'tertiary/inverse':\n            styles = getTertiaryButtonStyles(responsiveSize, themeProps, true);\n            break;\n\n          case 'primary/destructive':\n            styles = getPrimaryDestructiveButtonStyles(\n              responsiveSize,\n              themeProps,\n            );\n            break;\n\n          case 'secondary/destructive':\n            styles = getSecondaryDestructiveButtonStyles(\n              responsiveSize,\n              themeProps,\n            );\n            break;\n\n          case 'primary/inverse':\n            styles = getPrimaryInverseButtonStyles(responsiveSize, themeProps);\n            break;\n\n          case 'primary':\n          default:\n            styles = getPrimaryButtonStyles(responsiveSize, themeProps);\n            break;\n        }\n        return {\n          [mediaStyleRule]: styles,\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport function getDefaultButtonStyles({\n  size,\n  variant,\n  themeProps,\n}: {\n  size: ButtonSize;\n  variant: ButtonVariant;\n  themeProps: BiomeTheme;\n}) {\n  switch (variant) {\n    case 'secondary':\n      return merge(\n        {},\n        baseButtonStyles,\n        getSecondaryButtonStyles(size, themeProps),\n        secondaryButtonGenericStyles,\n      );\n\n    case 'secondary/destructive':\n      return merge(\n        {},\n        baseButtonStyles,\n        getSecondaryDestructiveButtonStyles(size, themeProps),\n        secondaryDestructiveButtonGenericStyles,\n      );\n\n    case 'tertiary/inverse':\n      return merge(\n        {},\n        baseButtonStyles,\n        getTertiaryButtonStyles(size, themeProps, true),\n        tertiaryInverseButtonGenericStyles,\n      );\n\n    case 'tertiary':\n      return merge(\n        {},\n        baseButtonStyles,\n        getTertiaryButtonStyles(size, themeProps),\n        tertiaryButtonGenericStyles,\n      );\n\n    case 'primary/destructive':\n      return merge(\n        {},\n        baseButtonStyles,\n        primaryButtonGenericStyles,\n        getPrimaryDestructiveButtonStyles(size, themeProps),\n        getPrimaryDestructiveButtonGenericStyles(themeProps),\n      );\n\n    case 'primary/inverse': {\n      return merge(\n        {},\n        baseButtonStyles,\n        primaryButtonGenericStyles,\n        getPrimaryInverseButtonStyles(size, themeProps),\n        getPrimaryInverseButtonGenericStyles(themeProps),\n      );\n    }\n\n    case 'primary':\n    default:\n      return merge(\n        {},\n        baseButtonStyles,\n        primaryButtonGenericStyles,\n        getPrimaryButtonStyles(size, themeProps),\n      );\n  }\n}\n\nexport const getButtConIconStyles = ({\n  variant,\n  size,\n  themeProps: { base },\n}: {\n  variant: ButtonVariant;\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) => {\n  return {\n    width:\n      size === 'small'\n        ? base.icon.size[200]\n        : size === 'medium'\n        ? base.icon.size[250]\n        : base.icon.size[300],\n    fill: variant.includes('primary/inverse')\n      ? base.color.text.primary\n      : variant.includes('primary')\n      ? base.color.brand[2]\n      : variant.includes('secondary/destructive')\n      ? base.color.status.destructive.bright\n      : variant.includes('secondary')\n      ? base.color.text.primary\n      : variant.includes('tertiary/inverse')\n      ? base.color.text.inverse.primary\n      : base.color.text.primary,\n  };\n};\n\nexport const getButtConStyles = ({\n  size,\n  themeProps,\n}: {\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) => ({\n  w:\n    size === 'small'\n      ? themeProps.base.spacing.x8\n      : size === 'medium'\n      ? themeProps.base.spacing.x12\n      : themeProps.base.spacing.x16,\n  minw:\n    size === 'small'\n      ? themeProps.base.spacing.x8\n      : size === 'medium'\n      ? themeProps.base.spacing.x12\n      : themeProps.base.spacing.x16,\n  paddingLeft: '0',\n  paddingRight: '0',\n});\n\nexport function getResponsiveButtConStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtConStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n\nexport function getResponsiveButtConIconStyles({\n  variant,\n  size,\n  themeProps,\n}: {\n  variant: ButtonVariant;\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtConIconStyles({\n            size: responsiveSize,\n            themeProps,\n            variant,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n\nexport function getButtonIconSizeStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return {\n    alignSelf: 'center',\n    width:\n      size === 'small'\n        ? themeProps.base.icon.size[100]\n        : size === 'large'\n        ? themeProps.base.icon.size[250]\n        : themeProps.base.icon.size[200],\n  };\n}\n\nexport function getButtonIconVariantStyles(\n  variant: ButtonVariant,\n  { base }: BiomeTheme,\n) {\n  let fill;\n  switch (variant) {\n    case 'primary/destructive':\n      fill =\n        base.colorMode === 'lightOnDark'\n          ? base.color.text.primary\n          : base.color.text.inverse.primary;\n      break;\n    case 'primary/inverse':\n      fill = base.color.text.primary;\n      break;\n    case 'primary':\n      fill = base.color.text.inverse.primary;\n      break;\n    case 'tertiary/inverse':\n      fill = base.color.text.inverse.primary;\n      break;\n    case 'secondary/destructive':\n      fill = base.color.status.destructive.bright;\n      break;\n    case 'secondary':\n    case 'tertiary':\n    default:\n      fill = base.color.text.primary;\n      break;\n  }\n  return { fill };\n}\n\nexport function getResponsiveButtonIconStyles({\n  size,\n  variant,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  variant: MakeResponsive<ButtonVariant>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  const defaultSize = sizeAsArray.shift() as ButtonSize;\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtonIconSizeStyles(responsiveSize, themeProps),\n        };\n      }\n      return {};\n    }),\n  );\n\n  const variantAsArray = Array.isArray(variant) ? [...variant] : [variant];\n  const defaultVariant = variantAsArray.shift() as ButtonVariant;\n  const variantStyles = merge(\n    ...variantAsArray.map((responsiveVariant, index) => {\n      if (responsiveVariant != null && !isError(responsiveVariant)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtonIconVariantStyles(\n            responsiveVariant,\n            themeProps,\n          ),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return {\n    defaultSize,\n    defaultVariant,\n    styles: merge({}, sizeStyles, variantStyles),\n  };\n}\n","import merge from 'ts-deepmerge';\n\nimport { ButtonSize } from '../../../../types/clickable';\nimport { BiomeTheme } from '../../../../types/theme';\nimport {\n  largeButtonStaticStyles,\n  mediumButtonStaticStyles,\n  smallButtonStaticStyles,\n} from './shared';\n\nexport const primaryButtonGenericStyles = {\n  background: 'base.color.brand.1',\n  color: 'base.color.text.inverse.primary',\n  boxShadow: `inset 0 0 0 0 transparent`,\n  transitionProperty: 'none',\n\n  '&::before': {\n    content: '\"\"',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    background: 'base.color.brand.1',\n    transitionProperty: 'clip-path',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n};\n\nexport const getPrimaryInverseButtonGenericStyles = ({ base }: BiomeTheme) => ({\n  background:\n    base.colorMode === 'lightOnDark'\n      ? 'base.color.translucent.inverse.1000'\n      : 'base.color.neutral.500',\n  color: 'base.color.text.primary',\n\n  '&::before': {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    background:\n      base.colorMode === 'lightOnDark'\n        ? 'base.color.translucent.inverse.1000'\n        : 'base.color.neutral.500',\n  },\n});\n\nexport const getPrimaryDestructiveButtonGenericStyles = ({\n  base,\n}: BiomeTheme) => ({\n  background: 'base.color.status.destructive.bright',\n  color:\n    base.colorMode === 'lightOnDark'\n      ? 'base.color.text.primary'\n      : 'base.color.text.inverse.primary',\n\n  '&::before': {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    background: 'base.color.status.destructive.bright',\n  },\n});\n\nexport function getSmallPrimaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[100]} + ${base.border.size[200]})`;\n  const pressCutaway = `calc(${base.border.size[200]} + ${base.border.size[200]})`;\n\n  return {\n    ...smallButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x10})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.brand[1]}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.brand[1]}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x10})`,\n      },\n    },\n  };\n}\n\nexport function getMediumPrimaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[300]})`;\n  const pressCutaway = `calc(${base.border.size[300]} + ${base.border.size[300]})`;\n\n  return {\n    ...mediumButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x15})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.brand[1]}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.brand[1]}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x15})`,\n      },\n    },\n  };\n}\n\nexport function getLargePrimaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[400]})`;\n  const pressCutaway = `calc(${base.border.size[400]} + ${base.border.size[400]})`;\n\n  return {\n    ...largeButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x20})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.brand[1]}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.brand[1]}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x20})`,\n      },\n    },\n  };\n}\n\nexport function getSmallPrimaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[100]} + ${base.border.size[200]})`;\n  const pressCutaway = `calc(${base.border.size[200]} + ${base.border.size[200]})`;\n\n  return {\n    ...smallButtonStaticStyles(themeProps),\n\n    '&::before': {\n      background: 'base.color.text.primary',\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x10})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x10})`,\n      },\n    },\n  };\n}\n\nexport function getMediumPrimaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[300]})`;\n  const pressCutaway = `calc(${base.border.size[300]} + ${base.border.size[300]})`;\n\n  return {\n    ...mediumButtonStaticStyles(themeProps),\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x15})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x15})`,\n      },\n    },\n  };\n}\n\nexport function getLargePrimaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[400]})`;\n  const pressCutaway = `calc(${base.border.size[400]} + ${base.border.size[400]})`;\n\n  return {\n    ...largeButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x20})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.status.destructive.bright}`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x20})`,\n      },\n    },\n  };\n}\n\nexport function getSmallPrimaryInverseButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[100]} + ${base.border.size[200]})`;\n  const pressCutaway = `calc(${base.border.size[200]} + ${base.border.size[200]})`;\n\n  return {\n    ...smallButtonStaticStyles(themeProps),\n\n    '&::before': {\n      background: 'base.color.text.primary',\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x10})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x10})`,\n      },\n    },\n  };\n}\n\nexport function getMediumPrimaryInverseButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[300]})`;\n  const pressCutaway = `calc(${base.border.size[300]} + ${base.border.size[300]})`;\n\n  return {\n    ...mediumButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x15})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x15})`,\n      },\n    },\n  };\n}\n\nexport function getLargePrimaryInverseButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc(${base.border.size[200]} + ${base.border.size[400]})`;\n  const pressCutaway = `calc(${base.border.size[400]} + ${base.border.size[400]})`;\n\n  return {\n    ...largeButtonStaticStyles(themeProps),\n\n    '&::before': {\n      clipPath: `inset(${hoverCutaway} ${hoverCutaway} ${hoverCutaway} ${hoverCutaway} round ${base.borderRadius.x20})`,\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n    },\n\n    '&:active:not([disabled])': {\n      background: 'transparent',\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${\n        base.colorMode === 'lightOnDark'\n          ? base.color.translucent.inverse[1000]\n          : base.color.neutral[500]\n      }`,\n\n      '&::before': {\n        clipPath: `inset(${pressCutaway} ${pressCutaway} ${pressCutaway} ${pressCutaway} round ${base.borderRadius.x20})`,\n      },\n    },\n  };\n}\n\nexport function getPrimaryButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallPrimaryButtonUniqueStyles(themeProps)\n      : size === 'medium'\n      ? getMediumPrimaryButtonUniqueStyles(themeProps)\n      : getLargePrimaryButtonUniqueStyles(themeProps),\n  );\n}\n\nexport function getPrimaryDestructiveButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallPrimaryDestructiveButtonUniqueStyles(themeProps)\n      : size === 'medium'\n      ? getMediumPrimaryDestructiveButtonUniqueStyles(themeProps)\n      : getLargePrimaryDestructiveButtonUniqueStyles(themeProps),\n  );\n}\n\nexport function getPrimaryInverseButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallPrimaryInverseButtonUniqueStyles(themeProps)\n      : size === 'medium'\n      ? getMediumPrimaryInverseButtonUniqueStyles(themeProps)\n      : getLargePrimaryInverseButtonUniqueStyles(themeProps),\n  );\n}\n","import { BiomeTheme } from '../../../../types/theme';\n\nexport const smallButtonStaticStyles = ({ base }: BiomeTheme) => ({\n  height: base.spacing.x8,\n  fontSize: base.text.body.xSmall.regular.fontSize,\n  fontWeight: base.text.body.medium.bold.fontWeight,\n  fontFamily: base.font.family.body.primary,\n  borderRadius: base.borderRadius.x15,\n  paddingX: base.spacing.x4,\n  gap: '2px',\n});\n\nexport const mediumButtonStaticStyles = ({ base }: BiomeTheme) => ({\n  height: base.spacing.x12,\n  fontSize: base.text.body.medium.regular.fontSize,\n  fontWeight: base.text.body.medium.bold.fontWeight,\n  fontFamily: base.font.family.body.primary,\n  borderRadius: base.borderRadius.x15,\n  paddingX: base.spacing.x6,\n  gap: base.spacing.x1,\n});\n\nexport const largeButtonStaticStyles = ({ base }: BiomeTheme) => ({\n  height: base.spacing.x16,\n  fontSize: base.text.body.medium.regular.fontSize,\n  fontWeight: base.text.body.medium.bold.fontWeight,\n  fontFamily: base.font.family.body.primary,\n  borderRadius: base.borderRadius.x20,\n  paddingX: base.spacing.x8,\n  gap: base.spacing.x2,\n});\n","import { keyframes } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { ButtonSize } from '../../../../types/clickable';\nimport { BiomeTheme } from '../../../../types/theme';\nimport {\n  largeButtonStaticStyles,\n  mediumButtonStaticStyles,\n  smallButtonStaticStyles,\n} from './shared';\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    scale: 0.95;\n  }\n  100% {\n    opacity: 1;\n    scale: 1;\n  }\n`;\n\nexport const secondaryButtonGenericStyles = {\n  color: 'base.color.text.primary',\n\n  '&::before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    translate: '-50% -50%',\n    boxShadow: `inset 0 0 0 0px transparent`,\n    transitionProperty: 'box-shadow',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n    animationName: fadeIn,\n    animationDuration: 'base.motion.normal.fast.cssDuration',\n    animationTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n};\n\nexport const secondaryDestructiveButtonGenericStyles = {\n  color: 'base.color.status.destructive.bright',\n  '&::before': {\n    position: 'absolute',\n    boxShadow: `inset 0 0 0 0px transparent`,\n    top: '50%',\n    left: '50%',\n    translate: '-50% -50%',\n    transitionProperty: 'box-shadow',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n    animationName: fadeIn,\n    animationDuration: 'base.motion.normal.fast.cssDuration',\n    animationTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n};\n\nexport function getSmallSecondaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc((${base.border.size[100]} + ${base.border.size[200]}) * 2)`;\n  const pressCutaway = `calc((${base.border.size[100]} + ${base.border.size[200]}) * 2)`;\n\n  return {\n    ...smallButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n\n    '&::before': {\n      borderRadius: base.borderRadius.x15,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[100]} ${base.color.status.destructive.bright}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n      },\n    },\n  };\n}\nexport function getMediumSecondaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc((${base.border.size[200]} + ${base.border.size[300]}) * 2)`;\n  const pressCutaway = `calc((${base.border.size[200]} + ${base.border.size[300]}) * 2)`;\n\n  return {\n    ...mediumButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n\n    '&::before': {\n      borderRadius: base.borderRadius.x20,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[100]} ${base.color.status.destructive.bright}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n      },\n    },\n  };\n}\n\nexport function getLargeSecondaryDestructiveButtonUniqueStyles(\n  themeProps: BiomeTheme,\n) {\n  const { base } = themeProps;\n  const hoverCutaway = `calc((${base.border.size[200]} + ${base.border.size[400]}) * 2)`;\n  const pressCutaway = `calc((${base.border.size[200]} + ${base.border.size[400]}) * 2)`;\n\n  return {\n    ...largeButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${base.border.size[300]} ${base.color.status.destructive.bright}`,\n\n    '&::before': {\n      borderRadius: base.borderRadius.x25,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[200]} ${base.color.status.destructive.bright}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.status.destructive.bright}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${base.border.size[400]} ${base.color.status.destructive.bright}`,\n      },\n    },\n  };\n}\n\nexport function getSmallSecondaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const hoverCutaway = `calc((${themeProps.base.border.size[100]} + ${themeProps.base.border.size[200]}) * 2)`;\n  const pressCutaway = `calc((${themeProps.base.border.size[100]} + ${themeProps.base.border.size[200]}) * 2)`;\n\n  return {\n    ...smallButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${themeProps.base.border.size[200]} ${themeProps.base.color.brand[1]}`,\n\n    '&::before': {\n      borderRadius: themeProps.base.borderRadius.x15,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[200]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[100]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[200]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[200]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n  };\n}\nexport function getMediumSecondaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const hoverCutaway = `calc((${themeProps.base.border.size[200]} + ${themeProps.base.border.size[300]}) * 2)`;\n  const pressCutaway = `calc((${themeProps.base.border.size[200]} + ${themeProps.base.border.size[300]}) * 2)`;\n\n  return {\n    ...mediumButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${themeProps.base.border.size[300]} ${themeProps.base.color.brand[1]}`,\n\n    '&::before': {\n      borderRadius: themeProps.base.borderRadius.x20,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[300]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[100]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[300]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[300]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n  };\n}\n\nexport function getLargeSecondaryButtonUniqueStyles(themeProps: BiomeTheme) {\n  const hoverCutaway = `calc((${themeProps.base.border.size[200]} + ${themeProps.base.border.size[400]}) * 2)`;\n  const pressCutaway = `calc((${themeProps.base.border.size[200]} + ${themeProps.base.border.size[400]}) * 2)`;\n\n  return {\n    ...largeButtonStaticStyles(themeProps),\n    boxShadow: `inset 0 0 0 ${themeProps.base.border.size[300]} ${themeProps.base.color.brand[1]}`,\n\n    '&::before': {\n      borderRadius: themeProps.base.borderRadius.x25,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[400]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[200]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${themeProps.base.border.size[400]} ${themeProps.base.color.brand[1]}`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${themeProps.base.border.size[400]} ${themeProps.base.color.brand[1]}`,\n      },\n    },\n  };\n}\n\nexport function getSecondaryButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallSecondaryButtonUniqueStyles(themeProps)\n      : size === 'medium'\n      ? getMediumSecondaryButtonUniqueStyles(themeProps)\n      : getLargeSecondaryButtonUniqueStyles(themeProps),\n  );\n}\n\nexport function getSecondaryDestructiveButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallSecondaryDestructiveButtonUniqueStyles(themeProps)\n      : size === 'medium'\n      ? getMediumSecondaryDestructiveButtonUniqueStyles(themeProps)\n      : getLargeSecondaryDestructiveButtonUniqueStyles(themeProps),\n  );\n}\n","import merge from 'ts-deepmerge';\n\nimport { ButtonSize } from '../../../../types/clickable';\nimport { BiomeTheme } from '../../../../types/theme';\nimport {\n  largeButtonStaticStyles,\n  mediumButtonStaticStyles,\n  smallButtonStaticStyles,\n} from './shared';\n\nexport const tertiaryButtonGenericStyles = {\n  color: 'base.color.text.primary',\n  transitionDelay: '0.06s',\n  background: ({ base }: BiomeTheme) =>\n    base.colorMode === 'lightOnDark'\n      ? base.color.translucent.standard[200]\n      : base.color.translucent.standard[100],\n\n  '&::before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    translate: '-50% -50%',\n    boxShadow: `inset 0 0 0 0px transparent`,\n    transitionProperty: 'box-shadow',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n};\n\nexport const tertiaryInverseButtonGenericStyles = {\n  ...tertiaryButtonGenericStyles,\n  color: 'base.color.text.inverse.primary',\n  background: 'base.color.translucent.inverse.200',\n  '&::before': {\n    ...tertiaryButtonGenericStyles['&::before'],\n  },\n};\n\nexport function getSmallTertiaryButtonUniqueStyles(\n  theme: BiomeTheme,\n  inverse?: boolean,\n) {\n  const hoverCutaway = `calc((${theme.base.border.size[100]} + ${theme.base.border.size[200]}) * 2)`;\n  const pressCutaway = `calc((${theme.base.border.size[100]} + ${theme.base.border.size[200]}) * 2)`;\n\n  return {\n    ...smallButtonStaticStyles(theme),\n\n    '&::before': {\n      borderRadius: theme.base.borderRadius.x15,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[200]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[100]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[200]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[200]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n  };\n}\nexport function getMediumTertiaryButtonUniqueStyles(\n  theme: BiomeTheme,\n  inverse?: boolean,\n) {\n  const hoverCutaway = `calc((${theme.base.border.size[200]} + ${theme.base.border.size[300]}) * 2)`;\n  const pressCutaway = `calc((${theme.base.border.size[200]} + ${theme.base.border.size[300]}) * 2)`;\n\n  return {\n    ...mediumButtonStaticStyles(theme),\n\n    '&::before': {\n      borderRadius: theme.base.borderRadius.x20,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[300]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[100]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[300]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[300]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n  };\n}\nexport function getLargeTertiaryButtonUniqueStyles(\n  theme: BiomeTheme,\n  inverse?: boolean,\n) {\n  const hoverCutaway = `calc((${theme.base.border.size[200]} + ${theme.base.border.size[400]}) * 2)`;\n  const pressCutaway = `calc((${theme.base.border.size[200]} + ${theme.base.border.size[400]}) * 2)`;\n\n  return {\n    ...largeButtonStaticStyles(theme),\n\n    '&::before': {\n      borderRadius: theme.base.borderRadius.x25,\n    },\n\n    '&:hover:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[400]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${hoverCutaway})`,\n        height: `calc(100% - ${hoverCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[200]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n\n    '&:active:not([disabled])': {\n      boxShadow: `inset 0 0 0 ${theme.base.border.size[400]} ${\n        inverse\n          ? theme.base.color.text.inverse.primary\n          : theme.base.color.text.primary\n      }`,\n\n      '&::before': {\n        content: '\"\"',\n        width: `calc(100% - ${pressCutaway})`,\n        height: `calc(100% - ${pressCutaway})`,\n        boxShadow: `inset 0 0 0 ${theme.base.border.size[400]} ${\n          inverse\n            ? theme.base.color.text.inverse.primary\n            : theme.base.color.text.primary\n        }`,\n      },\n    },\n  };\n}\n\nexport function getTertiaryButtonStyles(\n  size: ButtonSize,\n  themeProps: BiomeTheme,\n  inverse?: boolean,\n) {\n  return merge(\n    size === 'small'\n      ? getSmallTertiaryButtonUniqueStyles(themeProps, inverse)\n      : size === 'medium'\n      ? getMediumTertiaryButtonUniqueStyles(themeProps, inverse)\n      : getLargeTertiaryButtonUniqueStyles(themeProps, inverse),\n  );\n}\n","import { Children, cloneElement, ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useConvertSxToEmotionStyles,\n  useGetCurrentSizeClass,\n  useTheme,\n} from '../../../hooks';\nimport { BUTTON_SIZES, ButtonProps } from '../../../types/clickable';\nimport { getStartingSize } from '../../../utils/styleHelpers';\nimport { isChildSubcomponent } from '../../../utils/subcomponentHelpers';\nimport { Icon } from '../../Icon';\nimport { BaseClickable } from '../BaseClickable/BaseClickable';\nimport { ButtConSvgIcon } from './ButtConSvgIcon';\nimport { ButtonIcon } from './ButtonIcon';\nimport { ButtonLogo } from './ButtonLogo';\nimport {\n  baseButtonInnerSpanStyles,\n  DEFAULT_BUTTON_SIZE,\n  getDefaultButtonStyles,\n  getInnerSpanStyles,\n  getResponsiveButtonStyles,\n  getResponsiveInnerSpanStyles,\n} from './styles';\n\nexport function Button<RC extends ReactElement | undefined = undefined>({\n  children,\n  sx = {},\n  variant = 'primary',\n  size = DEFAULT_BUTTON_SIZE,\n  testId,\n  className,\n  ...props\n}: ButtonProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const currentSizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_BUTTON_SIZE,\n    BUTTON_SIZES,\n  );\n  const allContainerStyles = merge(\n    getDefaultButtonStyles({ size: startingSize, variant, themeProps }),\n    getResponsiveButtonStyles({\n      size,\n      variant,\n      themeProps,\n    }),\n    themeProps.components?.Button?.sxOverride ?? {},\n    sx,\n  );\n\n  const allInnerSpanSx = merge(\n    baseButtonInnerSpanStyles,\n    getInnerSpanStyles({ size: startingSize, themeProps }),\n    getResponsiveInnerSpanStyles({ size, themeProps }),\n  );\n  const allInnerSpanStyles = useConvertSxToEmotionStyles(allInnerSpanSx);\n\n  return (\n    <BaseClickable\n      {...props}\n      sx={allContainerStyles}\n      testId={testId}\n      className={`${\n        className ?? ''\n      } Button Button--${variant} Button--${currentSizeClass}`}\n    >\n      <span css={allInnerSpanStyles} className=\"BiomeButton__inner\">\n        {Children.map(children, child => {\n          if (\n            isChildSubcomponent(child, ButtonIcon) ||\n            isChildSubcomponent(child, ButtonLogo)\n          ) {\n            // @NOTE: get sub-component children, with some special extra props\n            return cloneElement(child, {\n              size,\n              variant,\n              className: 'Button__iconOrLogo',\n              testId: child.props.testId\n                ? child.props.testId\n                : `${testId}__icon`,\n              sx: child.props.sx,\n            });\n          }\n          if (\n            // @NOTE: this is to handle when used by the ButtCon component:\n            isChildSubcomponent(child, Icon) ||\n            isChildSubcomponent(child, ButtConSvgIcon)\n          ) {\n            return child;\n          }\n          if (typeof child !== 'object') {\n            // Otherwise get simple children as Body text:\n            return child;\n          }\n\n          return null;\n        })}\n      </span>\n    </BaseClickable>\n  );\n}\n\nButton.displayName = 'Button';\nButton.Icon = ButtonIcon;\nButton.Logo = ButtonLogo;\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { ButtonSize, ButtonVariant, MakeResponsive } from '../../../types';\nimport { Icon, IconProps } from '../../Icon';\nimport {\n  getButtonIconSizeStyles,\n  getButtonIconVariantStyles,\n  getResponsiveButtonIconStyles,\n} from './styles';\n\nexport type ButtonIconProps = Omit<IconProps, 'variant'> & {\n  size?: MakeResponsive<ButtonSize>;\n  variant?: MakeResponsive<ButtonVariant>;\n  iconVariant?: 'bold' | 'regular';\n};\n\nexport function ButtonIcon({\n  sx = {},\n  iconVariant,\n  variant = 'primary',\n  size = 'medium',\n  domRef,\n  ...props\n}: ButtonIconProps) {\n  const themeProps = useTheme();\n  const {\n    defaultSize,\n    defaultVariant,\n    styles: responsiveStyles,\n  } = getResponsiveButtonIconStyles({\n    size,\n    variant,\n    themeProps,\n  });\n  const allStyles = merge(\n    getButtonIconSizeStyles(defaultSize, themeProps),\n    getButtonIconVariantStyles(defaultVariant, themeProps),\n    responsiveStyles,\n    sx,\n  );\n  return (\n    <Icon {...props} sx={allStyles} variant={iconVariant} domRef={domRef} />\n  );\n}\n\nButtonIcon.displayName = 'Button.Icon';\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { ButtonSize, ButtonVariant, MakeResponsive } from '../../../types';\nimport { Logo, LogoProps } from '../../Logo';\nimport {\n  getButtonIconSizeStyles,\n  getButtonIconVariantStyles,\n  getResponsiveButtonIconStyles,\n} from './styles';\n\nexport type ButtonLogoProps = LogoProps & {\n  size?: MakeResponsive<ButtonSize>;\n  variant?: MakeResponsive<ButtonVariant>;\n};\n\nexport function ButtonLogo({\n  sx = {},\n  size = 'medium',\n  variant = 'primary',\n  domRef,\n  logo,\n  ...props\n}: ButtonLogoProps) {\n  const themeProps = useTheme();\n  const {\n    defaultSize,\n    defaultVariant,\n    styles: responsiveStyles,\n  } = getResponsiveButtonIconStyles({\n    size,\n    variant,\n    themeProps,\n  });\n  const allStyles = merge(\n    getButtonIconSizeStyles(defaultSize, themeProps),\n    getButtonIconVariantStyles(defaultVariant, themeProps),\n    responsiveStyles,\n    sx,\n  );\n  return <Logo {...props} sx={allStyles} logo={logo} domRef={domRef} />;\n}\n\nButtonLogo.displayName = 'Button.Logo';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function DocsHorizontalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('DocsHorizontalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      viewBox=\"0 0 275 48\"\n      testId={testId}\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nDocsHorizontalLockup.displayName = 'DocsHorizontalLockup';\n","import { useEffect, useRef, useState } from 'react';\n\nimport { AllLogoKeys } from '../components/Logo/Logo';\nimport { fetchLogoContent } from '../utils/svgHelpers';\nimport { usePrevious } from './usePrevious';\nimport { useUpdateEffect } from './useUpdateEffect';\n\nexport function useFetchLogoContent(logo: AllLogoKeys) {\n  const isFetching = useRef(false);\n  const [svgContent, setSvgContent] = useState<string[] | null>(null);\n  const previousLogo = usePrevious(logo);\n  useEffect(() => {\n    async function fetchContent() {\n      isFetching.current = true;\n      const content = await fetchLogoContent(logo);\n      isFetching.current = false;\n      setSvgContent(content);\n    }\n    // @NOTE: ONLY fetch the icon content if it hasn't already been fetched\n    if (!svgContent && !isFetching.current) fetchContent();\n  }, [logo, svgContent]);\n\n  useUpdateEffect(() => {\n    if (previousLogo !== logo) setSvgContent(null);\n  }, [logo, previousLogo]);\n\n  return svgContent;\n}\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function DocsHorizontalLockupCompact({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('DocsHorizontalLockupCompact');\n  return (\n    <SvgIcon\n      {...props}\n      viewBox=\"0 0 130 48\"\n      testId={testId}\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nDocsHorizontalLockupCompact.displayName = 'DocsHorizontalLockupCompact';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function DocsVerticalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('DocsVerticalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 123 112\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nDocsVerticalLockup.displayName = 'DocsVerticalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function GameStopSymbol({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('GameStopSymbol');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 48 48\"\n      sx={merge(\n        setDefaultWidthSx(sx, '100px'),\n        { fill: 'base.color.text.primary' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nGameStopSymbol.displayName = 'GameStopSymbol';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function HubHorizontalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('HubHorizontalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 262 48\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nHubHorizontalLockup.displayName = 'HubHorizontalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function HubHorizontalLockupCompact({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('HubHorizontalLockupCompact');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 115 48\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nHubHorizontalLockupCompact.displayName = 'HubHorizontalLockupCompact';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function HubVerticalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('HubVerticalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 123 112\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nHubVerticalLockup.displayName = 'HubVerticalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function ImmutableHorizontalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('ImmutableHorizontalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 200 48\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\nImmutableHorizontalLockup.displayName = 'ImmutableHorizontalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { Icon } from '../Icon';\n\nexport function ImmutableSymbol({ sx = {}, ...props }: SingleVariantIconProps) {\n  return (\n    <Icon\n      {...props}\n      icon=\"Immutable\"\n      sx={merge(\n        { fill: 'base.color.brand.1' },\n        setDefaultWidthSx(sx, '32px'),\n        sx,\n      )}\n      variant=\"bold\"\n    />\n  );\n}\n\nImmutableSymbol.displayName = 'ImmutableSymbol';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function ImmutableVerticalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('ImmutableVerticalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 123 96\"\n      sx={merge(\n        setDefaultWidthSx(sx, '123px'),\n        {\n          fill: 'base.color.brand.1',\n        },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nImmutableVerticalLockup.displayName = 'ImmutableVerticalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function MagicSymbol({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('MagicSymbol');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 48 48\"\n      sx={merge(setDefaultWidthSx(sx, '100px'), { fill: '#6851FF' }, sx)}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nMagicSymbol.displayName = 'MagicSymbol';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function MetaMaskSymbol({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('MetaMaskSymbol');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 48 48\"\n      sx={merge(setDefaultWidthSx(sx, '100px'), sx)}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nMetaMaskSymbol.displayName = 'MetaMaskSymbol';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function PassportHorizontalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('PassportHorizontalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      viewBox=\"0 0 328 48\"\n      testId={testId}\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nPassportHorizontalLockup.displayName = 'PassportHorizontalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function PassportHorizontalLockupCompact({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('PassportHorizontalLockupCompact');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 181 48\"\n      sx={merge(\n        setDefaultWidthSx(sx, '200px'),\n        { fill: 'base.color.brand.1' },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nPassportHorizontalLockupCompact.displayName = 'PassportHorizontalLockupCompact';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function PassportSymbol({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('PassportSymbol');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 32 32\"\n      sx={merge(setDefaultWidthSx(sx, '100px'), sx)}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nPassportSymbol.displayName = 'PassportSymbol';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function PassportSymbolOutlined({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('PassportSymbolOutlined');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 48 48\"\n      sx={merge(setDefaultWidthSx(sx, '100px'), sx)}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nPassportSymbolOutlined.displayName = 'PassportSymbolOutlined';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function PassportVerticalLockup({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('PassportVerticalLockup');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 123 112\"\n      sx={merge(\n        setDefaultWidthSx(sx, '123px'),\n        {\n          fill: 'base.color.brand.1',\n        },\n        sx,\n      )}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n\nPassportVerticalLockup.displayName = 'PassportVerticalLockup';\n","import merge from 'ts-deepmerge';\n\nimport { useFetchLogoContent } from '../../hooks/useFetchLogoContent';\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { setDefaultWidthSx } from '../../utils/styleHelpers';\nimport { SvgIcon } from '../SvgIcon';\n\nexport function WalletConnectSymbol({\n  sx = {},\n  testId,\n  ...props\n}: SingleVariantIconProps) {\n  const svgContent = useFetchLogoContent('WalletConnectSymbol');\n  return (\n    <SvgIcon\n      {...props}\n      testId={testId}\n      viewBox=\"0 0 48 48\"\n      sx={merge(setDefaultWidthSx(sx, '100px'), { fill: '#368AFA' }, sx)}\n    >\n      {svgContent && (\n        <g\n          data-testid={`${testId}__g`}\n          dangerouslySetInnerHTML={{ __html: svgContent.join('') }}\n        />\n      )}\n    </SvgIcon>\n  );\n}\n","import { ReactElement } from 'react';\n\nimport { SingleVariantIconProps } from '../../types/icon';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { DocsHorizontalLockup } from './DocsHorizontalLockup';\nimport { DocsHorizontalLockupCompact } from './DocsHorizontalLockupCompact';\nimport { DocsVerticalLockup } from './DocsVerticalLockup';\nimport { GameStopSymbol } from './GameStopSymbol';\nimport { HubHorizontalLockup } from './HubHorizontalLockup';\nimport { HubHorizontalLockupCompact } from './HubHorizontalLockupCompact';\nimport { HubVerticalLockup } from './HubVerticalLockup';\nimport { ImmutableHorizontalLockup } from './ImmutableHorizontalLockup';\nimport { ImmutableSymbol } from './ImmutableSymbol';\nimport { ImmutableVerticalLockup } from './ImmutableVerticalLockup';\nimport { MagicSymbol } from './MagicSymbol';\nimport { MetaMaskSymbol } from './MetaMaskSymbol';\nimport { PassportHorizontalLockup } from './PassportHorizontalLockup';\nimport { PassportHorizontalLockupCompact } from './PassportHorizontalLockupCompact';\nimport { PassportSymbol } from './PassportSymbol';\nimport { PassportSymbolOutlined } from './PassportSymbolOutlined';\nimport { PassportVerticalLockup } from './PassportVerticalLockup';\nimport { WalletConnectSymbol } from './WalletConnectSymbol';\n\nexport const lockupLogos = {\n  ImmutableHorizontalLockup,\n  ImmutableVerticalLockup,\n  PassportHorizontalLockup,\n  PassportHorizontalLockupCompact,\n  PassportVerticalLockup,\n  HubHorizontalLockup,\n  HubHorizontalLockupCompact,\n  HubVerticalLockup,\n  DocsHorizontalLockup,\n  DocsHorizontalLockupCompact,\n  DocsVerticalLockup,\n} as const;\n\nexport const immutableSymbolLogos = {\n  ImmutableSymbol,\n  PassportSymbol,\n  PassportSymbolOutlined,\n} as const;\n\nexport const otherSymbolLogos = {\n  MetaMaskSymbol,\n  WalletConnectSymbol,\n  MagicSymbol,\n  GameStopSymbol,\n} as const;\n\nexport const allLogos = {\n  ...lockupLogos,\n  ...immutableSymbolLogos,\n  ...otherSymbolLogos,\n};\n\nexport type AllLogoKeys = keyof typeof allLogos;\n\nexport type LogoProps = SingleVariantIconProps & {\n  logo: AllLogoKeys;\n};\n\nexport function Logo<RC extends ReactElement | undefined = undefined>({\n  logo,\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'svg'> & LogoProps\n  : LogoProps & { rc: RC }) {\n  const LogoComponent = allLogos[logo];\n  return <LogoComponent {...props} />;\n}\n\nLogo.displayName = 'Logo';\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { ButtConProps, IconVariant } from '../../../types';\nimport { BiomeTheme } from '../../../types/theme';\nimport { AllIconKeys } from '../../Icon';\nimport { ButtCon } from './ButtCon';\n\nexport type StatefulButtConState = 'initial' | 'loading' | 'success' | 'fatal';\n\nexport type StatefulButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtConProps<RC>, 'variant'> & {\n  state?: StatefulButtConState;\n};\n\nconst getButtConSx = ({ state }: { state: StatefulButtConState }) => {\n  switch (state) {\n    case 'success':\n      return {\n        bg: 'base.color.status.success.bright',\n      };\n\n    case 'fatal':\n      return {\n        bg: 'base.color.status.fatal.bright',\n      };\n\n    case 'initial':\n    case 'loading':\n    default:\n      return {};\n  }\n};\n\nconst getIconSx = ({\n  state,\n  theme,\n}: {\n  state: StatefulButtConState;\n  theme: BiomeTheme;\n}) => {\n  switch (state) {\n    case 'success':\n    case 'fatal':\n      return {\n        fill:\n          theme.base.colorMode === 'lightOnDark'\n            ? 'base.color.text.inverse.primary'\n            : 'base.color.text.primary',\n      };\n\n    case 'initial':\n    case 'loading':\n    default:\n      return {};\n  }\n};\n\nexport function StatefulButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  state = 'initial',\n  iconVariant = 'regular',\n  sx = {},\n  ...props\n}: StatefulButtConProps<RC>) {\n  const { icon } = 'icon' in props ? props : { icon: undefined };\n  const theme = useTheme();\n  const currentIcon: { icon: AllIconKeys | undefined; variant: IconVariant } =\n    useMemo(() => {\n      switch (state) {\n        case 'loading':\n          return { icon: 'Loading', variant: 'regular' };\n        case 'success':\n          return { icon: 'Tick', variant: 'bold' };\n        case 'fatal':\n          return { icon: 'Exclamation', variant: 'bold' };\n        case 'initial':\n        default:\n          return { icon, variant: iconVariant };\n      }\n    }, [state, icon, iconVariant]);\n\n  const buttConSx = merge(\n    {\n      transitionProperty: 'background, box-shadow',\n      transitionDuration: ({ base }: BiomeTheme) =>\n        `${base.motion.normal.gentle.cssDuration}, ${base.motion.normal.fast.cssDuration}`,\n      transitionTimingFunction: ({ base }: BiomeTheme) =>\n        `${base.motion.normal.gentle.cssEase}, ${base.motion.normal.fast.cssEase}`,\n    },\n    getButtConSx({ state }),\n    sx,\n  );\n  const iconSx = getIconSx({ state, theme });\n  return (\n    <ButtCon\n      {...props}\n      variant=\"tertiary\"\n      sx={buttConSx}\n      iconSx={iconSx}\n      icon={currentIcon.icon}\n      iconVariant={currentIcon.variant}\n    />\n  );\n}\n\nStatefulButtCon.displayName = 'StatefulButtCon';\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { Children, cloneElement, ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../../hooks';\nimport { LinkProps } from '../../../types/clickable';\nimport { cloneElementWithCssProp } from '../../../utils';\nimport { setDefaultSxTextColor } from '../../../utils/styleHelpers';\nimport { isChildSubcomponent } from '../../../utils/subcomponentHelpers';\nimport { hFlex } from '../../../utils/sxChunks';\nimport { Body } from '../../Text';\nimport { BaseClickable } from '../BaseClickable/BaseClickable';\nimport { LinkIcon } from './LinkIcon';\nimport { renderLinkVariantStyles } from './styles';\n\nexport const DEFAULT_LINK_SIZE = 'medium';\nexport const DEFAULT_LINK_WEIGHT = 'regular';\n\nexport function Link<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  variant = 'primary',\n  sx = {},\n  children,\n  testId,\n  rc = <button />,\n  ...props\n}: LinkProps<RC, Use>) {\n  const { use, ...baseClickableProps } =\n    'use' in props ? props : { ...props, use: undefined };\n\n  const { size } = 'size' in props ? props : { size: DEFAULT_LINK_SIZE };\n  const { weight } =\n    'weight' in props ? props : { weight: DEFAULT_LINK_WEIGHT };\n\n  const themeProps = useTheme();\n  const allStyles = merge(\n    setDefaultSxTextColor(sx, 'base.color.text.link.primary'),\n    renderLinkVariantStyles(variant, themeProps),\n    sx,\n  );\n\n  const textContent = useMemo(\n    () =>\n      cloneElementWithCssProp(\n        use || <Body size={size as BodySize} weight={weight as BodyWeight} />,\n        {\n          testId: `${testId}__text`,\n          className: 'inner',\n          sx: {\n            ...hFlex,\n            color: 'inherit',\n            alignItems: 'center',\n            gap: '0.2em',\n          },\n          children: Children.map(children, child => {\n            if (isChildSubcomponent(child, LinkIcon)) {\n              // @NOTE: render sub-component children, with some special extra props\n              return cloneElement(child, {\n                size,\n                variant,\n                className: 'Link__icon',\n                testId: child.props.testId\n                  ? child.props.testId\n                  : `${testId}__text__icon`,\n                sx: merge(\n                  {\n                    width: '1.1em',\n                  },\n                  child.props.sx || {},\n                ),\n              });\n            }\n            if (typeof child !== 'object') {\n              // Otherwise render simple children as Body text:\n              return child;\n            }\n\n            return null;\n          }),\n        },\n      ),\n    [children, size, testId, use, variant, weight],\n  );\n\n  return (\n    <BaseClickable\n      {...baseClickableProps}\n      sx={allStyles}\n      rc={rc}\n      testId={testId}\n    >\n      {textContent}\n    </BaseClickable>\n  );\n}\n\nLink.displayName = 'Link';\nLink.Icon = LinkIcon;\n","import merge from 'ts-deepmerge';\n\nimport { LinkIconProps } from '../../../types/icon';\nimport { Icon } from '../../Icon';\n\nexport function LinkIcon({\n  sx = {},\n  variant = 'primary',\n  iconVariant,\n  ...props\n}: LinkIconProps) {\n  const allStyles = merge({ fill: `base.color.text.link.${variant}` }, sx);\n  return <Icon {...props} sx={allStyles} variant={iconVariant} />;\n}\n\nLinkIcon.displayName = 'Link.Icon';\n","import merge from 'ts-deepmerge';\n\nimport { LinkVariant } from '../../../types/clickable';\nimport { BiomeTheme } from '../../../types/theme';\n\nexport function renderPrimaryLinkUniqueStyles(themeProps: BiomeTheme) {\n  return {\n    color: themeProps.base.color.text.link.primary,\n\n    '& > .inner::before': {\n      background: themeProps.base.color.text.link.primary,\n    },\n  };\n}\n\nexport function renderSecondaryLinkUniqueStyles(themeProps: BiomeTheme) {\n  return {\n    color: themeProps.base.color.text.link.secondary,\n\n    '& > .inner::before': {\n      background: themeProps.base.color.text.link.secondary,\n    },\n  };\n}\n\nexport function renderLinkGenericStyles() {\n  return {\n    '&[disabled]': {\n      cursor: 'default',\n    },\n\n    '& > .inner': {\n      position: 'relative',\n    },\n\n    '& > .inner::before': {\n      content: \"''\",\n      position: 'absolute',\n      left: '0',\n      width: '100%',\n      bottom: '-0.04em',\n      height: '0.07em',\n      opacity: 0,\n      transformOrigin: 'center bottom',\n      transitionProperty: 'opacity, scale',\n      transitionDuration: 'base.motion.normal.fast.cssDuration',\n      transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n    },\n\n    '&:hover:not([disabled]) > .inner::before': {\n      opacity: 1,\n    },\n    '&:active:not([disabled]) > .inner::before': {\n      opacity: 1,\n      scale: '1 2',\n    },\n  };\n}\n\nexport function renderLinkVariantStyles(\n  variant: LinkVariant,\n  themeProps: BiomeTheme,\n) {\n  return merge(\n    renderLinkGenericStyles(),\n    variant === 'primary'\n      ? renderPrimaryLinkUniqueStyles(themeProps)\n      : renderSecondaryLinkUniqueStyles(themeProps),\n  );\n}\n\nexport function renderLinkIconVariantStyles(\n  variant: LinkVariant,\n  themeProps: BiomeTheme,\n) {\n  return {\n    fill: themeProps.base.color.text.link[variant],\n  };\n}\n","import { ReactElement } from 'react';\n\nimport { ButtConProps } from '../../types';\nimport { ButtCon } from '../Clickable';\n\nexport type ToastButtConProps<RC extends ReactElement | undefined = undefined> =\n  ButtConProps<RC>;\n\nexport function ToastButtCon<RC extends ReactElement | undefined = undefined>({\n  size = 'small',\n  variant = 'tertiary/inverse',\n  ...props\n}: ToastButtConProps<RC>) {\n  return <ButtCon {...props} size={size} variant={variant} />;\n}\n\nToastButtCon.displayName = 'Toast.ButtCon';\n","import { ReactElement } from 'react';\n\nimport { ButtonProps } from '../../types';\nimport { Button } from '../Clickable';\n\nexport type ToastButtonProps<RC extends ReactElement | undefined = undefined> =\n  ButtonProps<RC>;\n\nexport function ToastButton<RC extends ReactElement | undefined = undefined>({\n  size = 'small',\n  variant = 'tertiary/inverse',\n  ...props\n}: ToastButtonProps<RC>) {\n  return <Button {...props} size={size} variant={variant} />;\n}\n\nToastButton.displayName = 'Toast.Button';\n","import { Children, ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { BodyProps } from '../../types/text';\nimport { isChildSubcomponent } from '../../utils';\nimport { Icon } from '../Icon';\nimport { SmartClone } from '../SmartClone';\nimport { Body } from '../Text';\n\nexport type ToastMessageProps<RC extends ReactElement | undefined = undefined> =\n  BodyProps<RC>;\n\nexport function ToastMessage<RC extends ReactElement | undefined = undefined>({\n  size = 'medium',\n  sx = {},\n  children,\n  ...props\n}: ToastMessageProps<RC>) {\n  return (\n    <Body\n      {...props}\n      sx={merge(\n        {\n          verticalAlign: 'middle',\n          color: 'base.color.text.inverse.primary',\n        },\n        sx,\n      )}\n      size={size}\n    >\n      {Children.map(children, child => {\n        if (isChildSubcomponent(child, Icon)) {\n          return (\n            <SmartClone\n              sx={merge(\n                {\n                  fill: 'base.color.text.inverse.primary',\n                  mr: 'base.spacing.x2',\n                  w: '1em',\n                },\n                child.props.sx || {},\n              )}\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n        return child;\n      })}\n    </Body>\n  );\n}\n\nToastMessage.displayName = 'Toast.Message';\n","import { createContext, ReactNode, useId } from 'react';\n\nexport const BiomePortalIdContext = createContext<string | undefined>(\n  undefined,\n);\n\nexport function BiomePortalIdProvider({ children }: { children: ReactNode }) {\n  const id = useId().replaceAll(':', '-');\n  return (\n    <BiomePortalIdContext.Provider value={id}>\n      {children}\n    </BiomePortalIdContext.Provider>\n  );\n}\n","import { TooltipContext, TooltipItem } from '../../types/tooltip';\nimport { serializeChildren } from '../../utils';\nimport {\n  createFastContext,\n  FastContextDispatchAction,\n} from '../../utils/createFastContext';\n\nexport const initialState: TooltipContext = { tooltipList: [] };\n\nexport const CLEAR_TOOLTIP = 'clearTooltip';\nexport const STORE_TOOLTIP = 'storeTooltip';\nexport const UPDATE_TOOLTIP_CONTENT = 'updateTooltipContent';\n\nconst tooltipReducer = (\n  state: TooltipContext,\n  action: FastContextDispatchAction,\n) => {\n  switch (action.type) {\n    case UPDATE_TOOLTIP_CONTENT: {\n      let currentIndex = -1;\n      state.tooltipList.forEach((tooltip, i) => {\n        if (tooltip.id === action.payload.id) {\n          currentIndex = i;\n        }\n      });\n      if (currentIndex >= 0) {\n        // @TODO: this is a pretty shitty way to check if content has\n        // changed, and could have pretty regrettable performance\n        // but it's the only option we can think of right now...\n        const newContentSerialised = serializeChildren(action.payload.content);\n        const oldContentSerialised = serializeChildren(\n          state.tooltipList[currentIndex].content,\n        );\n        const contentHasChanged = newContentSerialised !== oldContentSerialised;\n        if (contentHasChanged) {\n          const updatedList = [...state.tooltipList];\n          updatedList[currentIndex].content = (\n            action.payload as TooltipItem\n          ).content;\n          return { ...state, tooltipList: updatedList };\n        }\n        return state;\n      }\n      return state;\n    }\n\n    case STORE_TOOLTIP: {\n      const newTooltipList = [...state.tooltipList];\n      const existingTooltip = state.tooltipList.find(\n        tooltip => tooltip.id === action.payload.id,\n      );\n      let modifiedList = false;\n      if (existingTooltip) {\n        newTooltipList.forEach((tooltip, i) => {\n          if (tooltip.id === action.payload.id) {\n            const newTooltip = serializeChildren(action.payload);\n            const oldTooltip = serializeChildren(newTooltipList[i]);\n            if (newTooltip !== oldTooltip) {\n              newTooltipList[i] = action.payload as TooltipItem;\n              modifiedList = true;\n            }\n          }\n        });\n      } else {\n        newTooltipList.push(action.payload as TooltipItem);\n        modifiedList = true;\n      }\n\n      return modifiedList\n        ? {\n            ...state,\n            tooltipList: newTooltipList,\n          }\n        : state;\n    }\n\n    case CLEAR_TOOLTIP:\n      return {\n        ...state,\n        tooltipList: state.tooltipList.filter(\n          tooltip => tooltip.id !== action.payload.id,\n        ),\n      };\n\n    default:\n      console.error('Unknown reducer action:', action);\n      return state;\n  }\n};\n\nexport const { Provider: BiomeTooltipProvider, useStore: useTooltipStore } =\n  createFastContext(initialState, tooltipReducer);\n\nBiomeTooltipProvider.displayName = 'BiomeTooltipProvider';\n","import { ReactNode, useContext } from 'react';\n\nimport { ClientOnlyPortal } from '../../overlays/ClientOnlyPortal';\nimport { TooltipOverlay } from '../../overlays/TooltipOverlay';\nimport { BiomePortalIdContext } from '../BiomePortalIdProvider/BiomePortalIdProvider';\nimport { BiomeTooltipProvider } from './context';\n\nconst SELECTOR = 'tooltip-container';\nexport function MountedTooltipOverlayAndProvider({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const portalId = useContext(BiomePortalIdContext);\n  return (\n    <BiomeTooltipProvider>\n      {children}\n\n      {/* TOOLTIP */}\n      <ClientOnlyPortal selector={`#${SELECTOR}${portalId}`}>\n        <TooltipOverlay />\n      </ClientOnlyPortal>\n      <div id={`${SELECTOR}${portalId}`} />\n    </BiomeTooltipProvider>\n  );\n}\n","import { createFastContext } from '../../utils/createFastContext';\n\nexport type WindowSizeStore = { width: number | null; height: number | null };\n\nexport const initialState: WindowSizeStore = { width: null, height: null };\n\nexport const {\n  Provider: BiomeWindowSizeProvider,\n  useStore: useWindowSizeStore,\n} = createFastContext(initialState);\n\nBiomeWindowSizeProvider.displayName = 'BiomeWindowSizeProvider';\n","import debounce from 'lodash.debounce';\n\nimport { useBrowserLayoutEffect, useEventListener } from '../../hooks';\nimport { DEFAULT_RESIZE_DEBOUNCE_TIME } from '.';\nimport { useWindowSizeStore } from './context';\n\nexport type SetWindowSizeProps = { resizeDebounceDuration?: number };\n\nexport function SetWindowSize({\n  resizeDebounceDuration = DEFAULT_RESIZE_DEBOUNCE_TIME,\n}: SetWindowSizeProps) {\n  const { setState } = useWindowSizeStore(state => state);\n  const debouncedOnResize = debounce(() => {\n    setState({ width: window.innerWidth, height: window.innerHeight });\n  }, resizeDebounceDuration);\n  useEventListener('resize', debouncedOnResize, {\n    current: typeof window !== 'undefined' ? window : null,\n  });\n  useBrowserLayoutEffect(\n    () => setState({ width: window.innerWidth, height: window.innerHeight }),\n    [],\n  );\n  return null;\n}\n","export { useWindowSizeStore } from './context';\nexport type { SetWindowSizeProps } from './SetWindowSize';\nexport { SetWindowSize } from './SetWindowSize';\n\nexport const DEFAULT_RESIZE_DEBOUNCE_TIME = 40;\n","/* eslint-disable no-param-reassign */\nimport {\n  BaseTokensLeaf,\n  DesignTokens,\n  designTokens,\n  leafIsObject,\n  smartPickTokenValue,\n} from '@biom3/design-tokens';\nimport { injectGlobal } from '@emotion/css';\nimport { Global, Interpolation, ThemeProvider } from '@emotion/react';\nimport { ReactNode } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useConvertSxToEmotionStyles } from '../../../hooks';\nimport { DeeplyNestedSx } from '../../../types/sxProps';\nimport { BiomeTheme } from '../../../types/theme';\nimport { InputTheme } from '../shared';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\ninjectGlobal`\n  @import url(\"https://biome.immutable.com/hosted-assets/css/im-fonts-v4.css\");\n  /*  ^ @NOTE: never put anyting (even a comment), before the fontFaceStylesImport */\n`;\n\nexport function recursivelyConvertNestedColorTokens<T extends BaseTokensLeaf>(\n  leaf: T,\n  theme: DesignTokens,\n) {\n  if (leafIsObject(leaf)) {\n    let leafKey: keyof typeof leaf;\n    // eslint-disable-next-line no-restricted-syntax\n    for (leafKey in leaf) {\n      const child = leaf[leafKey];\n      if (typeof child === 'object') {\n        leaf[leafKey] = recursivelyConvertNestedColorTokens(\n          leaf[leafKey],\n          theme,\n        );\n      } else if (typeof child === 'string' && child.includes('base.')) {\n        leaf[leafKey] = smartPickTokenValue(theme, child);\n      }\n    }\n  }\n  return leaf;\n}\n\nfunction augmentThemeWithCalculatedTokens(theme: DesignTokens): BiomeTheme {\n  const { base, ...other } = theme;\n  const { color } = base;\n  return {\n    base: {\n      ...base,\n      color: recursivelyConvertNestedColorTokens(color, theme),\n      breakpointAsArray: Object.values(base.breakpoint),\n    },\n    ...other,\n  };\n}\n\nconst DEFAULT_THEME = designTokens;\n\nexport type BiomeThemeProviderProps = {\n  theme?: InputTheme;\n  children: ReactNode;\n  globalSx?: DeeplyNestedSx;\n};\n\nexport function BiomeThemeProvider({\n  children,\n  theme = DEFAULT_THEME,\n  globalSx = {},\n}: BiomeThemeProviderProps) {\n  const defaultGlobalSx = {\n    '*, *::before, *::after': {\n      boxSizing: 'border-box',\n    },\n    'html, body': {\n      height: '100%',\n      margin: 0,\n    },\n    'pre, p, h1, h2, h3, h4, h5, h6': {\n      margin: 0,\n    },\n    body: {\n      WebkitFontSmoothing: 'antialiased',\n      MozOsxFontSmoothing: 'grayscale',\n      textRendering: 'optimizeLegibility',\n    },\n  };\n  const augmentedTheme = augmentThemeWithCalculatedTokens(theme);\n  const globalStyles = useConvertSxToEmotionStyles(\n    merge(defaultGlobalSx, globalSx),\n    augmentedTheme,\n  );\n\n  return (\n    <ThemeProvider theme={augmentedTheme}>\n      <Global styles={globalStyles as Interpolation<BiomeTheme>} />\n      {children}\n    </ThemeProvider>\n  );\n}\n","import { designTokens, onDarkBase, onLightBase } from '@biom3/design-tokens';\nimport {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { useBrowserLayoutEffect } from '../../../hooks';\nimport { DeeplyNestedSx } from '../../../types/sxProps';\nimport { BiomeThemeProvider } from '../BiomeThemeProvider';\nimport { InputTheme } from '../shared';\n\nexport const ToggleableThemeContext = createContext<{\n  toggleTheme: () => void;\n  currentTheme: typeof designTokens;\n}>({ toggleTheme: () => {}, currentTheme: { base: onLightBase } });\n\nexport function ToggleableThemeProvider({\n  children,\n  lightTheme = { base: onLightBase },\n  darkTheme = { base: onDarkBase },\n  autoPickTheme = false,\n  globalSx,\n}: {\n  children: ReactNode;\n  lightTheme?: InputTheme;\n  darkTheme?: InputTheme;\n  autoPickTheme?: boolean;\n  globalSx?: DeeplyNestedSx;\n}) {\n  const [currentTheme, setCurrentTheme] = useState({\n    base: onLightBase,\n  });\n\n  const toggleTheme = useCallback(() => {\n    setCurrentTheme(currentTheme.base === onLightBase ? darkTheme : lightTheme);\n  }, [currentTheme.base, darkTheme, lightTheme]);\n\n  // @NOTE: set the current color mode, based on the user's OS color mode:\n  useBrowserLayoutEffect(() => {\n    if (!autoPickTheme) return;\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    ) {\n      setCurrentTheme(darkTheme);\n    }\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', event => {\n        setCurrentTheme(event.matches ? darkTheme : lightTheme);\n      });\n  }, []);\n\n  const contextValue = useMemo(() => {\n    return { toggleTheme, currentTheme };\n  }, [currentTheme, toggleTheme]);\n\n  return (\n    <ToggleableThemeContext.Provider value={contextValue}>\n      <BiomeThemeProvider theme={currentTheme} globalSx={globalSx}>\n        {children}\n      </BiomeThemeProvider>\n    </ToggleableThemeContext.Provider>\n  );\n}\n\nexport const useToggleableTheme = () => {\n  const context = useContext(ToggleableThemeContext);\n  if (context === undefined) {\n    throw new Error(\n      'useToggleableTheme must be used within ToggleableThemeProvider',\n    );\n  }\n  return context;\n};\n","import {\n  MountedOverlayAndProviderProps,\n  MountedOverlaysAndProvider,\n} from '../BiomeOverlaysProvider/MountedOverlaysAndProvider';\nimport { BiomePortalIdProvider } from '../BiomePortalIdProvider';\nimport { BiomeShadowRootContext } from '../BiomeShadowRootProvider/context';\nimport { MountedTooltipOverlayAndProvider } from '../BiomeTooltipProvider';\nimport {\n  DEFAULT_RESIZE_DEBOUNCE_TIME,\n  SetWindowSize,\n  SetWindowSizeProps,\n} from '../BiomeWindowSize';\nimport { BiomeWindowSizeProvider } from '../BiomeWindowSize/context';\nimport { ToggleableThemeProvider } from '../theming';\nimport { BiomeThemeProvider } from '../theming/BiomeThemeProvider';\nimport { BiomeThemeProviderProps } from '../theming/BiomeThemeProvider/BiomeThemeProvider';\nimport { InputTheme } from '../theming/shared';\n\n// @TODO: for some reason this needs to be a type helper, for the discriminated\n// union to kick in and actually work. Simply using a discriminated union\n// inside the type intersection leaves react unable to decide that darkTheme\n// cannot be supplied when withThemeToggle is false or undefined. :(\n// TS PLAYGROUND LINK:\n// https://www.typescriptlang.org/play?ts=4.9.5#code/JYWwDg9gTgLgBAbzgJQKYEMDGMByEAmqccAvnAGZQQhwDkUG2tA3AFCswCeYRAkgHZgArjAAqAC1QgiAXjgBnGFGD8A5m1aoAHpFhwuPOAFkIEAApUw8uHKSZxwADb4G-APwAuFI1wFUzUjgAMjhWYgAKBDDiGIB3YBhxCSlUUQhVVUdULyUhf2iYuEdgVXExSWlPOAFhcpS2QuJ8dCgAa2TKrxqRDvzG-QrUKv5UADdUKAaYkmiAH0Q4eMTetIysqvJ0R3kieaF+QnIVVHwAxJSq7rrpAJIASg1yfexgCH5jUwBhakgR-hhwmBLPIvCZzMC7ogCnBMG9FAslklBqtMkQyHIgRArFNiLD+PCkMVStdUAAaODNNq9cnnaSBOSIlbpVHQwpuBYAOi5mKsNMGXn2h2O+FIrJiXii-X6XI5PPkpLF-SJZV6AoOqCOI3wCqljUp7X5cEFGuFOqlJA0hTx8ggWQ5jnS4VoAAFXW7aOTlSTyfrqQMUg9WDN2AB6EMKcQQITOOATKhQDysMHfcBvVD-SJFEoqw20ACMtFIgeTPzTGaQiwSSJSKKyOSgeT5KS8+cL9zYJdTfwBFcZyOZdYoWx2nuzJJbBaLGlYYYjUZj-Ag8Dj0ETnd+6Z7xD7NYH2X0DbJWeJqrok-bSa+pe7mdp+9bU8vEBTG-LF-YQA\ntype GetThemeToggleProps<ThemeToggle extends boolean | undefined> =\n  ThemeToggle extends true\n    ? {\n        withThemeToggle: ThemeToggle;\n        autoPickTheme?: boolean;\n        lightTheme?: InputTheme;\n        darkTheme?: InputTheme;\n      }\n    : ThemeToggle extends false\n    ? { withThemeToggle: ThemeToggle; theme?: InputTheme }\n    : { withThemeToggle?: never; theme?: InputTheme };\n\nexport type BiomeCombinedProvidersProps<\n  Id extends string,\n  ThemeToggle extends boolean | undefined,\n> = Omit<BiomeThemeProviderProps, 'theme'> &\n  SetWindowSizeProps &\n  MountedOverlayAndProviderProps<Id> &\n  GetThemeToggleProps<ThemeToggle> & {\n    shadowRoot?: ShadowRoot;\n  };\n\nexport function BiomeCombinedProviders<\n  Id extends string,\n  ThemeToggle extends boolean | undefined = undefined,\n>(props: BiomeCombinedProvidersProps<Id, ThemeToggle>) {\n  const {\n    children,\n    withThemeToggle,\n    resizeDebounceDuration = DEFAULT_RESIZE_DEBOUNCE_TIME,\n    modalContainerId,\n    drawerContainerId,\n    popoverContainerId,\n    toastContainerId,\n    shadowRoot,\n    globalSx,\n  } = props;\n  const { autoPickTheme, lightTheme, darkTheme, theme } = withThemeToggle\n    ? { ...props, theme: undefined }\n    : {\n        ...props,\n        autoPickTheme: undefined,\n        lightTheme: undefined,\n        darkTheme: undefined,\n      };\n\n  const wrappedChildren = (\n    <BiomeWindowSizeProvider>\n      <SetWindowSize resizeDebounceDuration={resizeDebounceDuration} />\n      <MountedTooltipOverlayAndProvider>\n        <MountedOverlaysAndProvider\n          modalContainerId={modalContainerId}\n          drawerContainerId={drawerContainerId}\n          popoverContainerId={popoverContainerId}\n          toastContainerId={toastContainerId}\n        >\n          {children}\n        </MountedOverlaysAndProvider>\n      </MountedTooltipOverlayAndProvider>\n    </BiomeWindowSizeProvider>\n  );\n\n  return (\n    <BiomePortalIdProvider>\n      <BiomeShadowRootContext.Provider value={shadowRoot}>\n        {withThemeToggle ? (\n          <ToggleableThemeProvider\n            lightTheme={lightTheme}\n            darkTheme={darkTheme}\n            globalSx={globalSx}\n            autoPickTheme={autoPickTheme}\n          >\n            {wrappedChildren}\n          </ToggleableThemeProvider>\n        ) : (\n          <BiomeThemeProvider theme={theme} globalSx={globalSx}>\n            {wrappedChildren}\n          </BiomeThemeProvider>\n        )}\n      </BiomeShadowRootContext.Provider>\n    </BiomePortalIdProvider>\n  );\n}\n","import { useEffect } from 'react';\n\nexport const useBrowserEffect =\n  typeof window !== 'undefined' ? useEffect : () => {};\n","import { useEffect } from 'react';\n\n/**\n * This function adds an event listener to the window object that triggers a callback function when\n * there are unsaved changes.\n * @param {boolean} unsavedChanges - A boolean value indicating whether there are unsaved changes in\n * the current state of the application.\n * @param callback - The `callback` parameter is a function that will be executed when the user tries\n * to leave the current page or close the browser window/tab, but only if there are unsaved changes.\n * The purpose of this function is to give the user a chance to save their changes before leaving the\n * page.\n */\nexport const useCallbackWhenDirty = (\n  unsavedChanges: boolean,\n  callback: () => boolean,\n) => {\n  useEffect(() => {\n    if (unsavedChanges) {\n      window.addEventListener('unload', callback);\n    }\n    return () => window.removeEventListener('unload', callback);\n  }, [unsavedChanges, callback]);\n};\n","/* eslint-disable no-console */\nimport { useEffect, useState } from 'react';\n\nexport function getInvalidPropWarningMsg(\n  component: 'Pagination' | 'OnboardingPagination',\n  propKind: 'totalPages' | 'currentPage' | 'defaultPage',\n  badProp: number,\n) {\n  return `@biom3/react \n  <${component} /> Warning: \n  ${propKind} is invalid. It must be greater than${\n    /currentPage|defaultPage/.test(propKind) ? 'or equal to' : ''\n  } ${\n    /currentPage|defaultPage/.test(propKind) ? '1' : '0'\n  }, but got ${badProp}`;\n}\n\nexport function getInvalidCurrentPageWarningMsg(\n  component: 'Pagination' | 'OnboardingPagination',\n  currentPage: number,\n  totalPages: number,\n) {\n  return `@biom3/react \n  <${component} /> Warning: \n  currentPage is invalid. It must be less than$ or equal to ${totalPages}, but got ${currentPage}`;\n}\n\nexport function useCheckForInvalidPaginationProps(\n  component: 'Pagination' | 'OnboardingPagination',\n  props: { totalPages: number; currentPage?: number; defaultPage: number },\n) {\n  const { totalPages, currentPage, defaultPage } = props;\n  const [errorState, setErrorState] = useState(false);\n\n  // @NOTE: handle various erroneous prop input states:\n  useEffect(() => {\n    if (currentPage !== undefined && currentPage < 1) {\n      if (process.env.NODE_ENV !== 'production')\n        console.warn(\n          getInvalidPropWarningMsg(component, 'currentPage', currentPage),\n        );\n      setErrorState(true);\n      return;\n    }\n    if (currentPage !== undefined && currentPage > totalPages) {\n      if (process.env.NODE_ENV !== 'production')\n        console.warn(\n          getInvalidCurrentPageWarningMsg(component, currentPage, totalPages),\n        );\n      setErrorState(true);\n      return;\n    }\n    if (totalPages < 1) {\n      if (process.env.NODE_ENV !== 'production')\n        console.warn(\n          getInvalidPropWarningMsg(component, 'totalPages', totalPages),\n        );\n      setErrorState(true);\n      return;\n    }\n    if (defaultPage < 1) {\n      if (process.env.NODE_ENV !== 'production')\n        console.warn(\n          getInvalidPropWarningMsg(component, 'defaultPage', defaultPage),\n        );\n      setErrorState(true);\n      return;\n    }\n\n    setErrorState(false);\n  }, [component, currentPage, defaultPage, totalPages]);\n\n  return errorState;\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * This function returns a boolean value indicating whether the code is running on the client side or\n * not.\n * @returns An object with a single property `isClientSide`, which is a boolean value indicating\n * whether the code is currently running on the client side or not.\n */\nexport const useClientSide = () => {\n  const [isClientSide, setIsClientSide] = useState(false);\n\n  useEffect(() => {\n    setIsClientSide(true);\n  }, []);\n  return { isClientSide };\n};\n","import { useEffect, useState } from 'react';\n\nexport type UseDetectBadImagePropTypes = {\n  imageUrl?: string;\n};\n\nexport const imageUrlChecks = /(http|https|\\/)/i;\n\n/**\n * This function uses React hooks to detect if an image URL is valid or not.\n * @param {UseDetectBadImagePropTypes}  - The function `useDetectBadImage` takes in an object with a\n * single property `imageUrl`, which is a string representing the URL of an image. The object is of\n * type `UseDetectBadImagePropTypes`, which is not shown in the code snippet but is likely defined\n * elsewhere in the codebase.\n * @returns a boolean value indicating whether the provided image URL is valid or not. The validity of\n * the image is determined by attempting to load the image using an HTMLImageElement and checking if it\n * successfully loads or not. If the image loads successfully, the function returns true, otherwise it\n * returns false.\n */\nexport function useDetectBadImage({\n  imageUrl,\n}: UseDetectBadImagePropTypes): boolean {\n  const [imageIsValid, setImageIsValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    let image: HTMLImageElement;\n    const onLoad = () => setImageIsValid(true);\n    const onError = () => setImageIsValid(false);\n    if (imageUrl && imageUrlChecks.test(imageUrl)) {\n      image = new Image();\n      image.addEventListener('load', onLoad);\n      image.addEventListener('error', onError);\n      image.src = imageUrl;\n    }\n    return () => {\n      image?.removeEventListener('load', onLoad);\n      image?.removeEventListener('error', onError);\n    };\n  }, [imageUrl]);\n\n  return imageIsValid;\n}\n","import { useState } from 'react';\n\nimport { useBrowserLayoutEffect } from './useBrowserLayoutEffect';\n\nexport type UseDetectSvgImagePropTypes = {\n  imageUrl?: string;\n};\n\nasync function urlIsSvg(url: string) {\n  try {\n    const imageResponse = await fetch(url, { method: 'HEAD' });\n    return imageResponse.headers.get('content-type') === 'image/svg+xml';\n  } catch (err) {\n    console.error('urlIsSvg Fetch HEAD Error:', url, err);\n    return false;\n  }\n}\n\n/**\n * This function detects whether an image URL is an SVG image or not.\n * @param {UseDetectSvgImagePropTypes}  - The function `useDetectSvgImage` takes in an object with a\n * single property `imageUrl`, which is a string representing the URL of an image. The function returns\n * a boolean value indicating whether the image at the given URL is an SVG image or not.\n * @returns The function `useDetectSvgImage` returns a boolean value indicating whether the provided\n * image URL is an SVG image or not.\n */\nexport function useDetectSvgImage({\n  imageUrl,\n}: UseDetectSvgImagePropTypes): boolean {\n  const [imageIsSvg, setImageIsSvg] = useState<boolean>(false);\n\n  useBrowserLayoutEffect(() => {\n    if (imageUrl) {\n      urlIsSvg(imageUrl).then(isSvg => {\n        setImageIsSvg(isSvg);\n      });\n    }\n  }, [imageUrl]);\n\n  return imageIsSvg;\n}\n","import { MutableRefObject, RefObject, useRef } from 'react';\n\nimport { useBrowserLayoutEffect } from './useBrowserLayoutEffect';\n\n/**\n * This is a TypeScript function that adds an event listener to a specified DOM element or the window\n * and removes it on cleanup.\n * @param {keyof WindowEventMap | string} eventName - The name of the event to listen for, which can be\n * a key of the `WindowEventMap` interface or a custom event name as a string.\n * @param handler - The function that will be called when the event is triggered. It takes an event\n * object as its argument.\n * @param {RefObject<T> | MutableRefObject<T>} [domRef] - `domRef` is an optional parameter that can be\n * a `RefObject` or `MutableRefObject` that points to the DOM element that the event listener should be\n * attached to. If `domRef` is not provided, the event listener will be attached to the `window`\n * object.\n */\nexport function useEventListener<\n  T extends HTMLElement | Document | Window | ShadowRoot = HTMLDivElement,\n  E extends Event = Event,\n>(\n  eventName: keyof WindowEventMap | string, // string to allow custom event\n  handler: (event: E) => void,\n  domRef?: RefObject<T> | MutableRefObject<T>,\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef<(event: E) => void>();\n\n  useBrowserLayoutEffect(() => {\n    // Define the listening target\n    const targetElement = domRef?.current;\n    if (!targetElement) {\n      return () => ({});\n    }\n\n    // Update saved handler if necessary\n    if (savedHandler.current !== handler) {\n      savedHandler.current = handler;\n    }\n\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event: Event) => {\n      savedHandler?.current?.(event as E);\n    };\n\n    targetElement.addEventListener(eventName, eventListener);\n\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, domRef, handler]);\n}\n","import { MutableRefObject, Ref, useEffect, useRef } from 'react';\n\n/**\n * This is a TypeScript function that creates a local DOM reference and forwards it to parent\n * components.\n * @param domRef - A reference to an HTML or SVG element that is passed in as a parameter to the custom\n * hook. This reference is used to forward the local DOM reference to parent components.\n * @returns The `useForwardLocalDomRef` function returns a `Ref` object that refers to a local DOM\n * element. This local DOM element is stored in the `localDomRef` variable, which is created using the\n * `useRef` hook. The function also updates the `domRef` object passed as an argument to refer to the\n * same local DOM element, so that it can be accessed by parent\n */\nexport function useForwardLocalDomRef<TElement extends HTMLElement>(\n  domRef: Ref<TElement>,\n) {\n  const localDomRef = useRef<TElement>(null);\n\n  // @NOTE: store the current domRef AND forward it on to\n  // parent components\n  useEffect(() => {\n    if (domRef && typeof domRef === 'object') {\n      // @TODO:\n      // We have to mutate the domRef type here, simply to allow it to be re-assigned\n      // to the localRef.current value. This is a bit of a hack - would be nice to find\n      // another way...\n      // eslint-disable-next-line no-param-reassign\n      (domRef as MutableRefObject<unknown | null>).current =\n        localDomRef.current;\n    } else if (typeof domRef === 'function') {\n      domRef(localDomRef.current);\n    }\n  }, [domRef, localDomRef]);\n\n  return localDomRef;\n}\n","import { useMemo } from 'react';\n\nimport { useWindowSizeStore } from '../providers';\nimport { SafeSizes } from '../types/image';\nimport { MakeResponsive } from '../types/shared';\nimport { getStartingSize } from '../utils/styleHelpers';\nimport { useTheme } from '.';\n\nexport function useGetCurrentSizeClass<Size extends string>(\n  size: MakeResponsive<Size>,\n  defaultSize: Size,\n  safeSizes: SafeSizes,\n) {\n  const startingSize = getStartingSize(size, defaultSize, safeSizes);\n  const { state: windowWidth } = useWindowSizeStore(state => state.width);\n  const {\n    base: { breakpointAsArray },\n  } = useTheme();\n  const currentSizeClass = useMemo(() => {\n    if (!windowWidth) {\n      return startingSize;\n    }\n\n    if (Array.isArray(size)) {\n      const actualResponsiveSizes = [...size];\n      actualResponsiveSizes.shift();\n      return actualResponsiveSizes.reduce((accum, curr, index) => {\n        let newAccum = accum;\n        if (curr !== null && windowWidth >= breakpointAsArray[index]) {\n          newAccum = curr;\n        }\n        return newAccum;\n      }, startingSize) as Size;\n    }\n\n    return safeSizes.indexOf(size) !== -1 ? size : startingSize;\n  }, [windowWidth, size, safeSizes, startingSize, breakpointAsArray]);\n\n  return currentSizeClass;\n}\n","import { Children, ComponentType, ReactElement, ReactNode } from 'react';\nimport { isFragment } from 'react-is';\n\nimport {\n  isChildSubcomponent,\n  isSubcomponentNestedInSmartClone,\n} from '../utils/subcomponentHelpers';\n\n/**\n * This function returns the first child element that matches a given subcomponent or an array of\n * subcomponents.\n * @param {ReactNode} children - The `children` parameter is a ReactNode, which represents the child\n * elements passed to a component. It can be a single child element or an array of child elements.\n * @param {ComponentType<TProps> | Array<ComponentType<TProps>>} subcomponent - The `subcomponent`\n * parameter is either a single React component or an array of React components that the function is\n * searching for within the `children` prop. The function returns the first matching child element that\n * is a subcomponent of the specified `subcomponent`.\n * @returns The function `useGetSubcomponentChild` returns a React element of type\n * `ReactElement<TProps>` or `undefined`. It takes two arguments: `children` of type `ReactNode` and\n * `subcomponent` of type `ComponentType<TProps> | Array<ComponentType<TProps>>`. The function uses\n * `Children.toArray` to convert the `children` prop to an array and then uses\n */\nexport function useGetSubcomponentChild<TProps>(\n  children: ReactNode,\n  subcomponent: ComponentType<TProps> | Array<ComponentType<TProps>>,\n) {\n  if (isFragment(children)) {\n    return Children.toArray(children.props.children).find(child => {\n      if (Array.isArray(subcomponent)) {\n        return subcomponent.some(\n          sub =>\n            isChildSubcomponent(child, sub) ||\n            isSubcomponentNestedInSmartClone(child, sub),\n        );\n      }\n      return (\n        isChildSubcomponent(child, subcomponent) ||\n        isSubcomponentNestedInSmartClone(child, subcomponent)\n      );\n    }) as undefined | ReactElement<TProps>;\n  }\n\n  return Children.toArray(children).find(child => {\n    if (Array.isArray(subcomponent)) {\n      return subcomponent.some(\n        sub =>\n          isChildSubcomponent(child, sub) ||\n          isSubcomponentNestedInSmartClone(child, sub),\n      );\n    }\n    return (\n      isChildSubcomponent(child, subcomponent) ||\n      isSubcomponentNestedInSmartClone(child, subcomponent)\n    );\n  }) as undefined | ReactElement<TProps>;\n}\n","import { Children, ComponentType, ReactElement, ReactNode } from 'react';\nimport { isFragment } from 'react-is';\n\nimport {\n  isChildSubcomponent,\n  isSubcomponentNestedInFragment,\n  isSubcomponentNestedInSmartClone,\n} from '../utils/subcomponentHelpers';\n\n/**\n * This function filters and returns an array of React elements that are either direct children or\n * nested within a smart clone of a specified subcomponent.\n * @param {ReactNode} children - The children prop is a special prop in React that allows components to\n * pass children elements (components, text, etc.) to other components. It is typically used to compose\n * components and create complex UIs. In this function, the children prop is being passed as an\n * argument and is expected to be a React\n * @param subcomponent - The subcomponent parameter is a React component type that is expected to be a\n * child of the parent component. The function filters through the children of the parent component and\n * returns an array of React elements that match the subcomponent type.\n * @returns The function `useGetSubcomponentChildren` returns an array of React elements that are\n * either direct children of the specified `subcomponent` or nested within a smart clone of the\n * `subcomponent`. The function takes two arguments: `children`, which is a ReactNode representing the\n * children of a component, and `subcomponent`, which is a ComponentType representing the subcomponent\n * whose children are being filtered.\n */\nexport function useGetSubcomponentChildren<TProps>(\n  children: ReactNode,\n  subcomponent: ComponentType<TProps>,\n) {\n  if (isFragment(children) && Array.isArray(children.props.children)) {\n    const filteredGrandChildren = children.props.children.filter(\n      (child: ReactNode) =>\n        isChildSubcomponent(child, subcomponent) ||\n        isSubcomponentNestedInSmartClone(child, subcomponent),\n    ) as undefined | ReactElement<TProps>[];\n    return filteredGrandChildren;\n  }\n\n  return Children.toArray(children).filter(child => {\n    return (\n      isChildSubcomponent(child, subcomponent) ||\n      isSubcomponentNestedInSmartClone(child, subcomponent) ||\n      isSubcomponentNestedInFragment(child, subcomponent)\n    );\n  }) as undefined | ReactElement<TProps>[];\n}\n","import { RefObject, useRef, useState } from 'react';\n\nimport { useEventListener } from './useEventListener';\n\n/**\n * This is a TypeScript function that uses React hooks to detect when a mouse is hovering over a\n * specified HTML element.\n * @param [domRef] - A reference to the DOM element that you want to track hover events on. It is an\n * optional parameter and if not provided, the hook will track hover events on the entire document.\n * @param {number} [mouseLeaveDelay=0] - `mouseLeaveDelay` is an optional parameter that specifies the\n * delay (in milliseconds) before the `hovering` state is set to `false` after the mouse leaves the\n * element. If `mouseLeaveDelay` is not provided or is set to 0, the `hovering` state will\n * @returns The `useHover` function returns a boolean value indicating whether the element referenced\n * by the `domRef` is currently being hovered over by the mouse cursor.\n */\nexport function useHover<T extends HTMLElement = HTMLElement>(\n  domRef?: RefObject<T>,\n  mouseLeaveDelay: number = 0,\n): boolean {\n  const [hovering, setHovering] = useState<boolean>(false);\n  const leaveTimer = useRef<number>();\n  const handleMouseEnter = () => {\n    clearTimeout(leaveTimer.current);\n    setHovering(true);\n  };\n  const handleMouseLeave = () => {\n    if (mouseLeaveDelay) {\n      leaveTimer.current = window.setTimeout(() => {\n        setHovering(false);\n      }, mouseLeaveDelay);\n    } else {\n      setHovering(false);\n    }\n  };\n\n  useEventListener('mouseenter', handleMouseEnter, domRef);\n  useEventListener('mouseleave', handleMouseLeave, domRef);\n\n  return hovering;\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * The function `useInterval` sets up an interval that repeatedly calls a given callback function with\n * a specified time interval.\n * @param callback - A function that will be called repeatedly at the specified interval.\n * @param {number} interval - The `interval` parameter is a number that represents the time interval\n * (in milliseconds) at which the `callback` function should be called repeatedly.\n * @returns The `useInterval` hook is returning a `ref` object that holds the ID of the interval set by\n * `window.setInterval()`. This `ref` can be used to clear the interval using `window.clearInterval()`.\n */\nexport function useInterval(callback: () => void, interval: number) {\n  const intervalRef = useRef<number>();\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const tick = () => savedCallback.current();\n    intervalRef.current = window.setInterval(tick, interval);\n    return () => window.clearInterval(intervalRef.current);\n  }, [interval]);\n  return intervalRef;\n}\n","import { Dispatch, useEffect, useState } from 'react';\n\n/**\n * This is a TypeScript function that uses local storage to store and retrieve a value, with a default\n * value provided if none exists.\n * @param {string} key - The key is a string that is used as the key to store and retrieve the value\n * from the local storage. It should be unique and descriptive enough to identify the value it\n * represents.\n * @param {ValueType} defaultValue - The default value to be used if there is no value stored in the\n * localStorage for the given key. It should be of type ValueType, which is a generic type parameter\n * that extends the string type.\n * @returns The function `useLocalStorage` returns an array with two elements: the current value stored\n * in local storage (or the default value if no value is found), and a function to update the value in\n * local storage. The first element in the array has a type of `ValueType`, which is a generic type\n * that is inferred from the `defaultValue` argument passed to the function. The second element in the\n * array\n */\nexport function useLocalStorage<ValueType extends string>(\n  key: string,\n  defaultValue: ValueType,\n): [ValueType, Dispatch<ValueType>] {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n    try {\n      currentValue = JSON.parse(localStorage.getItem(key) || defaultValue);\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n    return currentValue;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n}\n","import { RefObject, useCallback, useContext, useEffect } from 'react';\n\nimport { BiomeShadowRootContext } from '../providers/BiomeShadowRootProvider';\n\n/**\n * This function listens for clicks/touches outside of specified elements and triggers a handler\n * function when detected.\n * @param elementRefs - An array of RefObject or undefined elements that represent the elements that\n * should not trigger the handler when clicked.\n * @param handler - The function that will be called when a click event occurs outside of the specified\n * elementRefs.\n */\nexport function useOnClickOutside<T extends HTMLElement>(\n  // eslint-disable-next-line @typescript-eslint/default-param-last\n  elementRefs: Array<RefObject<T> | undefined> = [],\n  handler: () => void,\n) {\n  const shadowRoot = useContext(BiomeShadowRootContext);\n  const clickAnywhereListener = useCallback(\n    (event: Event) => {\n      // Do nothing if we do not have a handler, or if there are\n      // no elementRefs to check against\n      if (!handler || elementRefs.length === 0) {\n        return;\n      }\n\n      const isClickInside = elementRefs.some(elementRef => {\n        return elementRef\n          ? elementRef?.current?.contains(event.target as Node)\n          : false;\n      });\n\n      if (!isClickInside) handler();\n    },\n    [elementRefs, handler],\n  );\n\n  useEffect(() => {\n    if (shadowRoot) {\n      shadowRoot.addEventListener('mousedown', clickAnywhereListener);\n      shadowRoot.addEventListener('touchstart', clickAnywhereListener);\n    } else {\n      document.body.addEventListener('mousedown', clickAnywhereListener);\n      document.body.addEventListener('touchstart', clickAnywhereListener);\n    }\n\n    return () => {\n      if (shadowRoot) {\n        shadowRoot.removeEventListener('mousedown', clickAnywhereListener);\n        shadowRoot.removeEventListener('touchstart', clickAnywhereListener);\n      } else {\n        document.body.removeEventListener('mousedown', clickAnywhereListener);\n        document.body.removeEventListener('touchstart', clickAnywhereListener);\n      }\n    };\n  }, [clickAnywhereListener, shadowRoot]);\n}\n","import debounce from 'lodash.debounce';\nimport { RefObject, useEffect, useState } from 'react';\n\nexport type ResizeState = {\n  width: number;\n  height: number;\n};\n\n/**\n * This is a TypeScript function that uses the ResizeObserver API to track changes in the dimensions of\n * a specified HTML element and returns the updated dimensions.\n * @param elementRef - A reference to the DOM element that you want to observe for changes in size.\n * @param [debounceDuration=60] - `debounceDuration` is an optional parameter that specifies the\n * duration (in milliseconds) to wait before updating the dimensions after a resize event. It is used\n * to prevent the `setDimensions` function from being called too frequently and causing performance\n * issues. The default value is 60 milliseconds.\n * @returns The `useResizeObserver` hook returns an object containing the current dimensions of the\n * observed element, which includes its width and height.\n */\nexport function useResizeObserver(\n  elementRef: RefObject<HTMLElement>,\n  debounceDuration = 60,\n) {\n  const [dimensions, setDimensions] = useState<ResizeState>({\n    width: 0,\n    height: 0,\n  });\n\n  const debouncedSetDimensions = debounce(\n    (entries: ResizeObserverEntry[]) => {\n      const [entry] = entries;\n      const newDims = {\n        width:\n          entry.borderBoxSize[0].inlineSize || elementRef?.current?.offsetWidth,\n        height:\n          entry.borderBoxSize[0].blockSize || elementRef?.current?.offsetHeight,\n      } as ResizeState;\n      setDimensions(newDims);\n    },\n    debounceDuration,\n    { leading: true },\n  );\n\n  useEffect(() => {\n    const observer = new ResizeObserver(debouncedSetDimensions);\n    if (elementRef.current) {\n      observer.observe(elementRef.current as Element);\n    }\n    return () => {\n      observer.disconnect();\n      debouncedSetDimensions.cancel();\n    };\n    // @NOTE: we do not include `debouncedSetDimensions` in the dependency array -\n    // becuase when we do, it causes the useEffect to trigger constantly\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef, debounceDuration]);\n\n  return dimensions;\n}\n","import { Children, ComponentType, ReactNode } from 'react';\n\nimport { isChildSubcomponent } from '../utils/subcomponentHelpers';\n\nfunction isChildPartOfSubcomponentCollection(\n  child: ReactNode,\n  subcomponents: ComponentType<any>[],\n) {\n  return subcomponents.some(component => {\n    return isChildSubcomponent(child, component);\n  });\n}\n\n/**\n * This function separates React children into subcomponents and other children based on a specified\n * subcomponent type.\n * @param {ReactNode} children - `children` is a prop that is passed to a React component and\n * represents the child elements that are nested within the component. It can be a single child element\n * or an array of child elements.\n * @param subcomponent - The `subcomponent` parameter is a React component type that is expected to be\n * a child of the `children` parameter. The function will split the `children` into two arrays: one\n * containing all the `subcomponent` instances, and the other containing all the other children.\n * @returns An object with two properties: `subComponents` and `otherChildren`. `subComponents` is an\n * array of React nodes that are subcomponents of the specified `subcomponent` type, and\n * `otherChildren` is an array of all other React nodes that are not subcomponents of the specified\n * `subcomponent` type.\n */\nexport function useSplitApartChildrenAndSubComponents(\n  children: ReactNode,\n  subcomponents: ComponentType<any> | ComponentType<any>[],\n) {\n  // eslint-disable-next-line no-param-reassign\n  if (!Array.isArray(subcomponents)) subcomponents = [subcomponents];\n  const splitSubComponents: ReactNode[] = [];\n  const otherChildren: ReactNode[] = [];\n\n  Children.forEach(children, child => {\n    if (\n      isChildPartOfSubcomponentCollection(\n        child,\n        subcomponents as ComponentType<any>[],\n      )\n    ) {\n      splitSubComponents.push(child);\n    } else {\n      otherChildren.push(child);\n    }\n  });\n\n  return {\n    subcomponents: splitSubComponents,\n    otherChildren:\n      otherChildren.length === 0\n        ? null\n        : otherChildren.length === 1\n        ? otherChildren[0]\n        : otherChildren,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * This is a TypeScript function that sets a timeout and returns a reference to it.\n * @param callback - A function that will be executed after the specified delay has elapsed.\n * @param {number} delay - The delay parameter is a number that represents the amount of time, in\n * milliseconds, that the timeout should wait before executing the callback function.\n * @returns The `useTimeout` function returns a `timeoutRef` object which is a reference to the timeout\n * ID returned by `window.setTimeout`. This can be used to clear the timeout using\n * `window.clearTimeout(timeoutRef.current)`.\n */\nexport function useTimeout(callback: () => void, delay: number) {\n  const timeoutRef = useRef<number>();\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    timeoutRef.current = window.setTimeout(\n      () => savedCallback.current(),\n      delay,\n    );\n    return () => window.clearTimeout(timeoutRef.current);\n  }, [delay]);\n  return timeoutRef;\n}\n","import { LooseAutocomplete, SpacingTokenPaths } from '@biom3/design-tokens';\nimport { Property } from 'csstype';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { MakeValidSxValue } from '../../types/sxProps';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type StackProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    direction?: MakeValidSxValue<Property.FlexDirection>;\n    gap?: MakeValidSxValue<LooseAutocomplete<NonNullable<SpacingTokenPaths>>>;\n    rowGap?: MakeValidSxValue<\n      LooseAutocomplete<NonNullable<SpacingTokenPaths>>\n    >;\n    columnGap?: MakeValidSxValue<\n      LooseAutocomplete<NonNullable<SpacingTokenPaths>>\n    >;\n    justifyContent?: MakeValidSxValue<Property.JustifyContent>;\n    alignItems?: MakeValidSxValue<Property.AlignItems>;\n    alignContent?: MakeValidSxValue<Property.AlignContent>;\n    flexWrap?: MakeValidSxValue<Property.FlexWrap>;\n    flexFlow?: MakeValidSxValue<Property.FlexFlow>;\n  };\n\nexport function Stack<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  direction = 'column',\n  rowGap,\n  columnGap,\n  gap = Boolean(rowGap) || Boolean(columnGap) ? undefined : 'base.spacing.x2',\n  justifyContent,\n  alignContent,\n  alignItems,\n  flexWrap,\n  flexFlow,\n  className,\n  ...props\n}: StackProps<RC>) {\n  return (\n    <Box\n      {...props}\n      className={`${className ?? ''} Stack`}\n      sx={merge(\n        {\n          d: 'flex',\n          flexDirection: direction,\n          rowGap,\n          columnGap,\n          gap,\n          justifyContent,\n          alignContent,\n          alignItems,\n          flexWrap,\n          flexFlow,\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nStack.displayName = 'Stack';\n","import { Children, isValidElement, ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { isChildSubcomponent } from '../../utils';\nimport { Divider } from '../Divider';\nimport { SmartClone } from '../SmartClone';\nimport { Stack, StackProps } from '../Stack';\nimport { ChevronSide } from './shared';\nimport { expandedContentContainer } from './style';\n\nexport type AccordionExpandedContentProps<\n  RC extends ReactElement | undefined = undefined,\n> = StackProps<RC> & { chevronSide?: ChevronSide };\n\nexport function AccordionExpandedContent<\n  RC extends ReactElement | undefined = undefined,\n>({\n  children,\n  className,\n  sx = {},\n  chevronSide = 'left',\n  ...props\n}: AccordionExpandedContentProps<RC>) {\n  return (\n    <Stack\n      {...props}\n      className={`${className ?? ''} AccordionExpandedContent`}\n      sx={merge(\n        expandedContentContainer,\n        {\n          ...(chevronSide === 'left'\n            ? { pl: 'base.spacing.x15' }\n            : { pr: 'base.spacing.x15' }),\n        },\n        sx,\n      )}\n    >\n      {Children.map(children, child => {\n        if (isValidElement(child) && isChildSubcomponent(child, Divider)) {\n          return <SmartClone size=\"xSmall\">{child}</SmartClone>;\n        }\n\n        return child;\n      })}\n    </Stack>\n  );\n}\n\nAccordionExpandedContent.displayName = 'Accordion.ExpandedContent';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { DEFAULT_DIVIDER_SIZE, DIVIDER_SIZES, DividerProps } from './shared';\nimport { baseStyles, getResponsiveStyles, getSizeBasedStyles } from './styles';\n\nexport function Divider<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_DIVIDER_SIZE,\n  sx = {},\n  children,\n  textAlign = 'left',\n  className,\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & DividerProps\n  : DividerProps & { rc: RC }) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_DIVIDER_SIZE,\n    DIVIDER_SIZES,\n  );\n  const allStyles = merge(\n    baseStyles(children !== undefined, textAlign),\n    getSizeBasedStyles({ theme, size: startingSize }),\n    getResponsiveStyles({ theme, size }),\n    sx,\n  );\n  return (\n    <Box {...props} sx={allStyles} className={`${className ?? ''} Divider`}>\n      {children}\n    </Box>\n  );\n}\n\nDivider.displayName = 'Divider';\n","import { MakeResponsive, StandardComponentWithProps } from '../../types/shared';\n\nexport const DEFAULT_DIVIDER_SIZE = 'medium';\nexport const DIVIDER_SIZES = ['xSmall', 'small', 'medium', 'large'] as const;\nexport type DividerSize = (typeof DIVIDER_SIZES)[number];\n\nexport type DividerProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    size?: MakeResponsive<DividerSize>;\n    children?: string | number | boolean;\n    textAlign?: 'left' | 'center';\n  }\n>;\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport {\n  getBodyTextStyles,\n  getCaptionTextStyles,\n  getHeadingTextStyles,\n  isError,\n} from '../../utils/textStyleHelpers';\nimport { DividerSize } from './shared';\n\nexport const baseStyles = (\n  hasChildren: boolean,\n  textAlign: 'left' | 'center',\n) => ({\n  display: 'flex',\n  justifyContent: textAlign === 'left' ? 'flex-start' : 'center',\n  textAlign,\n  alignItems: 'center',\n  width: '100%',\n  border: 'none',\n\n  ...(textAlign === 'left'\n    ? {\n        '&::after': {\n          content: '\"\"',\n          flex: 1,\n          ml: hasChildren ? 'base.spacing.x6' : '0',\n        },\n      }\n    : {\n        '&::after, &::before': {\n          content: '\"\"',\n          flex: 1,\n        },\n        '&::after': {\n          ml: hasChildren ? 'base.spacing.x6' : '0',\n        },\n        '&::before': {\n          mr: hasChildren ? 'base.spacing.x6' : '0',\n        },\n      }),\n});\n\nexport const getSizeBasedStyles = ({\n  size,\n  theme,\n}: {\n  size: DividerSize;\n  theme: BiomeTheme;\n}) => {\n  const textStyles =\n    size === 'large'\n      ? getHeadingTextStyles({\n          size: 'xSmall',\n          weight: 'bold',\n          themeProps: theme,\n        })\n      : size === 'medium'\n      ? getBodyTextStyles({ size: 'medium', weight: 'bold', themeProps: theme })\n      : getCaptionTextStyles({\n          size: 'small',\n          weight: 'bold',\n          themeProps: theme,\n        });\n\n  return {\n    ...textStyles,\n    color:\n      size === 'xSmall'\n        ? theme.base.color.text.secondary\n        : theme.base.color.text.primary,\n\n    '&::after, &::before': {\n      height: size === 'large' ? '4px' : size === 'medium' ? '2px' : '1px',\n      background:\n        size === 'xSmall'\n          ? theme.base.color.translucent.standard[200]\n          : theme.base.color.text.primary,\n    },\n  };\n};\n\nexport const getResponsiveStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<DividerSize>;\n  theme: BiomeTheme;\n}) => {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getSizeBasedStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n};\n","import { BiomeTheme } from '../../types/theme';\nimport { hFlex } from '../../utils';\nimport { getTertiaryButtonStyles } from '../Clickable/Buttons/styles/tertiaryStyles';\n\nexport const getContainerSx = (theme: BiomeTheme) => {\n  const smallButtConStyles = getTertiaryButtonStyles('small', theme, false);\n  return {\n    brad: 'base.borderRadius.x4',\n    overflow: 'hidden',\n    transitionProperty: 'background-color',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n    '&.emphasized': {\n      bgc: 'base.color.translucent.standard.100',\n    },\n\n    '&.expanded': {\n      bgc: 'base.color.translucent.standard.100',\n    },\n\n    '&.emphasized.expanded': {\n      bgc: 'base.color.translucent.standard.200',\n    },\n\n    '&:hover': {\n      bgc: 'base.color.translucent.standard.200',\n    },\n\n    '&.emphasized:hover': {\n      bgc: 'base.color.translucent.standard.300',\n    },\n\n    '&:hover .ButtCon': {\n      ...smallButtConStyles['&:hover:not([disabled])'],\n    },\n  };\n};\n\nexport const clickableAreaSx = {\n  ...hFlex,\n  alignItems: 'flex-start',\n  justifyContent: 'space-between',\n  gap: 'base.spacing.x4',\n  position: 'relative',\n  px: 'base.spacing.x3',\n  py: 'base.spacing.x4',\n  minh: 'base.spacing.x16',\n};\n\nexport const buttConSx = {\n  position: 'absolute',\n  top: 'base.spacing.x4',\n};\n\nexport const expandableAreaSx = {\n  overflow: 'visible',\n  bg: 'transparent',\n  maxh: 'unset',\n  boxShadow: 'unset',\n  brad: 'unset',\n  p: '0',\n};\n\nexport const expandedContentContainer = {\n  mb: 'base.spacing.x10',\n  px: 'base.spacing.x3',\n\n  '& .Divider:first-of-type': {\n    mb: 'base.spacing.x4',\n  },\n};\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Stack, StackProps } from '../Stack';\n\ntype AccordionTargetSlotProps<RC extends ReactElement | undefined = undefined> =\n  StackProps<RC> & {};\n\nfunction AccordionTargetSlot<RC extends ReactElement | undefined = undefined>({\n  children,\n  direction = 'column',\n  gap = '0px',\n  rc = <span />,\n  ...props\n}: AccordionTargetSlotProps<RC>) {\n  return (\n    <Stack {...props} direction={direction} gap={gap} rc={rc}>\n      {children}\n    </Stack>\n  );\n}\n\nexport function AccordionTargetLeftSlot<\n  RC extends ReactElement | undefined = undefined,\n>({\n  sx = {},\n  alignItems = 'flex-start',\n  className,\n  ...props\n}: AccordionTargetSlotProps<RC>) {\n  return (\n    <AccordionTargetSlot\n      {...props}\n      alignItems={alignItems}\n      sx={merge({ flex: 1, textAlign: 'left' }, sx)}\n      className={`${className ?? ''} AccordionTargetLeftSlot`}\n    />\n  );\n}\n\nexport function AccordionTargetRightSlot<\n  RC extends ReactElement | undefined = undefined,\n>({\n  alignItems = 'flex-end',\n  className,\n  sx = {},\n  ...props\n}: AccordionTargetSlotProps<RC>) {\n  return (\n    <AccordionTargetSlot\n      {...props}\n      alignItems={alignItems}\n      sx={merge({ textAlign: 'right' }, sx)}\n      className={`${className ?? ''} AccordionTargetRightSlot`}\n    />\n  );\n}\n\nAccordionTargetLeftSlot.displayName = 'Accordion.TargetLeftSlot';\nAccordionTargetRightSlot.displayName = 'Accordion.TargetRightSlot';\n","import { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { SmartClone } from '../SmartClone';\nimport { AppHeaderBarLeftButtCon } from './AppHeaderBarLeftButtCon';\nimport { AppHeaderBarLeftLogo } from './AppHeaderBarLeftLogo';\nimport { AppHeaderBarOverflowPopoverMenu } from './AppHeaderBarOverflowPopoverMenu';\nimport {\n  AppHeaderBarLeftSlot,\n  AppHeaderBarRightSlot,\n} from './AppHeaderBarSlot';\nimport { AppHeaderBarTitle } from './AppHeaderBarTitle';\nimport { AppHeaderBarTitleLogo } from './AppHeaderBarTitleLogo';\nimport {\n  APP_HEADER_BAR_SIZES,\n  AppHeaderBarContentAlign,\n  AppHeaderBarSize,\n  AppHeaderBarVariant,\n  DEFAULT_APP_HEADER_BAR_SIZE,\n} from './shared';\nimport {\n  baseInnerContainerStyles,\n  getOuterContainerStyles,\n  innerContainerStyles,\n  outerContainerStaticStyles,\n  responsiveInnerContainerStyles,\n  responsiveOuterContainerStyles,\n} from './styles';\n\nexport type AppHeaderBarProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<AppHeaderBarSize>;\n    emphasized?: boolean;\n    contentAlign?: AppHeaderBarContentAlign;\n    variant?: AppHeaderBarVariant;\n  };\n\nexport function AppHeaderBar<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  rc = <header />,\n  variant = 'dim',\n  size = DEFAULT_APP_HEADER_BAR_SIZE,\n  children,\n  emphasized,\n  contentAlign = 'center',\n  testId = 'AppHeaderBar',\n  ...props\n}: AppHeaderBarProps<RC>) {\n  const themeProps = useTheme();\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    AppHeaderBarLeftButtCon,\n    AppHeaderBarLeftLogo,\n    AppHeaderBarTitle,\n    AppHeaderBarTitleLogo,\n    AppHeaderBarRightSlot,\n    AppHeaderBarLeftSlot,\n    AppHeaderBarOverflowPopoverMenu,\n  ]);\n\n  const leftButtCon = useGetSubcomponentChild(\n    children,\n    AppHeaderBarLeftButtCon,\n  );\n  const leftLogo = useGetSubcomponentChild(children, AppHeaderBarLeftLogo);\n  const title = useGetSubcomponentChild(children, AppHeaderBarTitle);\n  const titleLogo = useGetSubcomponentChild(children, AppHeaderBarTitleLogo);\n  const rightSlot = useGetSubcomponentChild(children, AppHeaderBarRightSlot);\n  const leftSlot = useGetSubcomponentChild(children, AppHeaderBarLeftSlot);\n  const overflowPopoverMenu = useGetSubcomponentChild(\n    children,\n    AppHeaderBarOverflowPopoverMenu,\n  );\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_APP_HEADER_BAR_SIZE,\n    APP_HEADER_BAR_SIZES,\n  );\n  const responsiveInnerContainerSx = responsiveInnerContainerStyles({\n    themeProps,\n    size,\n  });\n  const mergedOuterContainerStyles = useMemo(\n    () =>\n      merge(\n        outerContainerStaticStyles,\n        {\n          bg:\n            variant === 'dim'\n              ? 'base.color.neutral.1000'\n              : variant === 'transparent'\n              ? 'transparent'\n              : variant === 'bright'\n              ? 'base.color.neutral.700'\n              : 'base.color.neutral.1000',\n        },\n        getOuterContainerStyles({ size: startingSize }),\n        responsiveOuterContainerStyles({ size, themeProps }),\n        sx,\n      ),\n    [startingSize, sx, themeProps, variant, size],\n  );\n  const mergedInnerContainerStyles = merge(\n    baseInnerContainerStyles,\n    { ...(emphasized ? { bg: 'base.color.neutral.800' } : {}) },\n    innerContainerStyles({ themeProps, size: startingSize }),\n    responsiveInnerContainerSx,\n  );\n\n  return (\n    <Box {...props} rc={rc} sx={mergedOuterContainerStyles} testId={testId}>\n      <Box sx={mergedInnerContainerStyles} testId={`${testId}__innerContainer`}>\n        {titleLogo ? (\n          <SmartClone\n            testId={`${testId}__innerContainer__titleLogo`}\n            size={size}\n            contentAlign={contentAlign}\n          >\n            {titleLogo}\n          </SmartClone>\n        ) : title ? (\n          <SmartClone\n            testId={`${testId}__innerContainer__title`}\n            contentAlign={contentAlign}\n            size={size}\n          >\n            {title}\n          </SmartClone>\n        ) : null}\n\n        {leftButtCon ? (\n          <SmartClone\n            testId={`${testId}__innerContainer__leftButtCon`}\n            size={size}\n          >\n            {leftButtCon}\n          </SmartClone>\n        ) : null}\n\n        {leftLogo ? (\n          <SmartClone\n            testId={`${testId}__innerContainer__leftLogo`}\n            size={size}\n          >\n            {leftLogo}\n          </SmartClone>\n        ) : null}\n\n        {leftSlot && (\n          <SmartClone\n            testId={\n              leftSlot.props.testId ?? `${testId}__innerContainer__leftSlot`\n            }\n          >\n            {leftSlot}\n          </SmartClone>\n        )}\n\n        <Box\n          sx={{\n            d: 'flex',\n            gap: 'base.spacing.x6',\n            alignItems: 'center',\n            ml: 'auto',\n          }}\n          testId={`${testId}__innerContainer__rightSide`}\n        >\n          {rightSlot && (\n            <SmartClone\n              testId={\n                rightSlot.props.testId ??\n                `${testId}__innerContainer__rightSide__slotContent`\n              }\n            >\n              {rightSlot}\n            </SmartClone>\n          )}\n\n          {overflowPopoverMenu ? (\n            <SmartClone\n              testId={`${testId}__innerContainer__rightSide__overflowPopoverMenu`}\n              size={size}\n            >\n              {overflowPopoverMenu}\n            </SmartClone>\n          ) : null}\n        </Box>\n\n        {otherChildren}\n      </Box>\n    </Box>\n  );\n}\n\nAppHeaderBar.displayName = 'AppHeaderBar';\nAppHeaderBar.LeftButtCon = AppHeaderBarLeftButtCon;\nAppHeaderBar.LeftLogo = AppHeaderBarLeftLogo;\nAppHeaderBar.Title = AppHeaderBarTitle;\nAppHeaderBar.TitleLogo = AppHeaderBarTitleLogo;\nAppHeaderBar.RightSlot = AppHeaderBarRightSlot;\nAppHeaderBar.LeftSlot = AppHeaderBarLeftSlot;\nAppHeaderBar.OverflowPopoverMenu = AppHeaderBarOverflowPopoverMenu;\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { ButtConProps } from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport { ButtCon } from '../Clickable';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport { AppHeaderBarSize } from './shared';\n\nexport type AppHeaderBarLeftButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtConProps<RC>, 'size'> & {\n  size?: MakeResponsive<AppHeaderBarSize>;\n};\n\nexport function AppHeaderBarLeftButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  size,\n  variant = 'tertiary',\n  sx = {},\n  ...props\n}: AppHeaderBarLeftButtConProps<RC>) {\n  return (\n    <ButtCon\n      {...props}\n      variant={variant}\n      size={DEFAULT_BUTTON_SIZE}\n      sx={merge({ position: 'relative' }, sx)}\n    />\n  );\n}\n\nAppHeaderBarLeftButtCon.displayName = 'AppHeaderBar.LeftButtCon';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  GetHybridClickableRCandDomProps,\n  isBaseClickable,\n  isLogo,\n} from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport {\n  setDefaultHeightSx,\n  setDefaultWidthSx,\n} from '../../utils/styleHelpers';\nimport { BaseClickable } from '../Clickable';\nimport { Logo, LogoProps } from '../Logo';\nimport { AppHeaderBarSize } from './shared';\n\nexport type AppHeaderBarLeftLogoProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n> = GetHybridClickableRCandDomProps<RC, OnClick> &\n  Omit<LogoProps, 'domRef'> & {\n    size?: MakeResponsive<AppHeaderBarSize>;\n  };\n\nexport function AppHeaderBarLeftLogo<\n  RC extends ReactElement | undefined = undefined,\n  OnClick extends Function | undefined = undefined,\n>({\n  size,\n  logo,\n  sx = {},\n  rc,\n  ...otherProps\n}: AppHeaderBarLeftLogoProps<RC, OnClick>) {\n  const { onClick } =\n    'onClick' in otherProps ? otherProps : { ...otherProps, onClick: null };\n  const baseClickableProps = { onClick, rc, ...otherProps };\n  const mergedSx = merge(\n    setDefaultWidthSx(sx, 'auto'),\n    setDefaultHeightSx(sx, 'base.icon.size.500'),\n    { position: 'relative' },\n    sx,\n  );\n  return isBaseClickable(onClick, rc, false, baseClickableProps) ? (\n    <BaseClickable {...baseClickableProps}>\n      <Logo logo={logo} sx={mergedSx} />\n    </BaseClickable>\n  ) : isLogo(onClick, rc, otherProps) ? (\n    <Logo {...otherProps} logo={logo} sx={mergedSx} />\n  ) : null;\n}\n\nAppHeaderBarLeftLogo.displayName = 'AppHeaderBar.LeftLogo';\n","import merge from 'ts-deepmerge';\n\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport { OverflowPopoverMenuProps } from '../OverflowMenus';\nimport { OverflowPopoverMenu } from '../OverflowMenus/OverflowPopoverMenu';\n\nexport type AppHeaderBarOverflowPopoverMenuProps = OverflowPopoverMenuProps;\n\nexport function AppHeaderBarOverflowPopoverMenu({\n  children,\n  sx = {},\n  size,\n  ...props\n}: AppHeaderBarOverflowPopoverMenuProps) {\n  return (\n    <OverflowPopoverMenu\n      {...props}\n      size={DEFAULT_BUTTON_SIZE}\n      sx={merge({ flexShrink: 0 }, sx)}\n    >\n      {children}\n    </OverflowPopoverMenu>\n  );\n}\n\nAppHeaderBarOverflowPopoverMenu.displayName =\n  'AppHeaderBar.OverflowPopoverMenu';\n","import {\n  Children,\n  isValidElement,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useWindowSizeStore } from '../../providers';\nimport { ButtCon } from '../Clickable';\nimport { Popover } from '../Popover';\nimport { SmartClone } from '../SmartClone';\nimport { VerticalMenu } from '../VerticalMenu';\nimport { OverflowPopoverMenuProps } from './types';\n\nexport function OverflowPopoverMenu({\n  children,\n  domRef,\n  testId,\n  icon = 'MoreVertical',\n  size = 'medium',\n  variant = 'tertiary',\n  onClick,\n  ...buttConProps\n}: OverflowPopoverMenuProps) {\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  const { state: windowSize } = useWindowSizeStore(store => store);\n  useEffect(() => setPopoverVisible(false), [windowSize]);\n  const handleTargetClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setPopoverVisible(!popoverVisible);\n      onClick?.(event);\n    },\n    [onClick, popoverVisible],\n  );\n  return (\n    <Popover\n      position={{ x: 'right', y: 'below' }}\n      visible={popoverVisible}\n      onOutsideClick={() => setPopoverVisible(false)}\n      domRef={domRef}\n    >\n      <Popover.Target>\n        <ButtCon\n          {...buttConProps}\n          testId={testId}\n          icon={icon}\n          size={size}\n          variant={variant}\n          onClick={handleTargetClick}\n        />\n      </Popover.Target>\n      <Popover.Content>\n        <VerticalMenu\n          testId={`${testId}__overflowPopoverMenu`}\n          emphasized\n          sx={{\n            // @NOTE: if VerticalMenu is nested inside another\n            // VerticalMenu, we want to not keep making the parent\n            // VerticalMenu's larger as each child opens. :P\n            '& .VerticalMenu': {\n              minw: 'unset',\n            },\n          }}\n        >\n          {Children.map(children, child => {\n            const shouldCloneWithOnClick =\n              isValidElement(child) &&\n              (Boolean(child.props.onClick) || Boolean(child.props.rc));\n\n            return shouldCloneWithOnClick ? (\n              <SmartClone\n                onClick={event => {\n                  event.stopPropagation();\n                  setPopoverVisible(false);\n                }}\n              >\n                {child}\n              </SmartClone>\n            ) : (\n              child\n            );\n          })}\n        </VerticalMenu>\n      </Popover.Content>\n    </Popover>\n  );\n}\n\nOverflowPopoverMenu.displayName = 'OverflowPopoverMenu';\n","import { useCallback, useEffect, useId, useMemo } from 'react';\n\nimport {\n  useBrowserEffect,\n  useBrowserLayoutEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n} from '../../hooks';\nimport {\n  CLOSE_POPOVER,\n  OPEN_POPOVER,\n  UPDATE_POPOVER_PROPS,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { PopoverComponentProps } from '../../types/overlays';\nimport { SmartClone } from '../SmartClone';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverTarget } from './PopoverTarget';\n\nexport function Popover({\n  visible,\n  id: idProp,\n  children,\n  position = { x: 'center', y: 'below' },\n  domRef = { current: null },\n  onOutsideClick,\n  verticalGap = 4,\n}: PopoverComponentProps) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const target = useGetSubcomponentChild(children, PopoverTarget);\n  const content = useGetSubcomponentChild(children, PopoverContent);\n  const { state: popoverList, dispatchAction } = useOverlaysStore(\n    state => state.popoverList,\n  );\n\n  const isControlled = useMemo(() => typeof visible !== 'undefined', [visible]);\n\n  const popoverProps = useMemo(\n    () => ({\n      id,\n      content,\n      targetRef: localDomRef,\n      position,\n      isControlled,\n      onOutsideClick,\n      verticalGap,\n    }),\n    [\n      content,\n      id,\n      isControlled,\n      localDomRef,\n      onOutsideClick,\n      position,\n      verticalGap,\n    ],\n  );\n\n  // @NOTE: this useEffect allows the Popover props to stay up to date,\n  // as the application re-renders and things potentially change\n  useEffect(() => {\n    dispatchAction({\n      type: UPDATE_POPOVER_PROPS,\n      payload: popoverProps,\n    });\n  }, [dispatchAction, popoverProps]);\n\n  const showPopover = useCallback(() => {\n    dispatchAction({\n      type: OPEN_POPOVER,\n      payload: popoverProps,\n    });\n  }, [dispatchAction, popoverProps]);\n\n  const hidePopover = useCallback(() => {\n    dispatchAction({\n      type: CLOSE_POPOVER,\n      payload: { id },\n    });\n  }, [dispatchAction, id]);\n\n  useBrowserLayoutEffect(() => {\n    if (visible) {\n      showPopover();\n    } else if (popoverList.find(popover => popover.id === id)) {\n      hidePopover();\n    }\n    // @NOTE: we want to trigger these changes ONLY when the visible prop changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  // @NOTE: when the Popover is unmounted, call to remove it from the modalList\n  useBrowserEffect(() => {\n    return () => hidePopover();\n  }, []);\n\n  const onClickProps = useMemo(() => {\n    return !isControlled\n      ? {\n          onClick: () => {\n            if (popoverList.find(popover => popover.id === id)) {\n              hidePopover();\n            } else {\n              showPopover();\n            }\n          },\n        }\n      : {};\n  }, [popoverList, isControlled, id, hidePopover, showPopover]);\n\n  return target ? (\n    <SmartClone {...onClickProps} id={id} domRef={localDomRef}>\n      {target}\n    </SmartClone>\n  ) : null;\n}\n\nPopover.displayName = 'Popover';\nPopover.Target = PopoverTarget;\nPopover.Content = PopoverContent;\n","import { ReactElement } from 'react';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type PopoverContentProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & {\n  id?: string;\n};\n\nexport function PopoverContent<\n  RC extends ReactElement | undefined = undefined,\n>({ children, domRef, ...props }: PopoverContentProps<RC>) {\n  return (\n    <Box {...props} domRef={domRef}>\n      {children}\n    </Box>\n  );\n}\n\nPopoverContent.displayName = 'Popover.Content';\n","import { ReactNode } from 'react';\n\nimport { StandardComponentWithProps } from '../../types/shared';\nimport { SmartClone } from '../SmartClone';\n\nexport type PopoverTargetProps = StandardComponentWithProps<\n  HTMLButtonElement,\n  {\n    children: ReactNode;\n    id?: string;\n  }\n>;\n\nexport function PopoverTarget({ children, ...props }: PopoverTargetProps) {\n  return <SmartClone {...props}>{children}</SmartClone>;\n}\n\nPopoverTarget.displayName = 'Popover.Target';\n","import { Children, ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { InputTextAlign } from '../../types/input';\nimport { MakeResponsive } from '../../types/shared';\nimport { isChildSubcomponent } from '../../utils';\nimport { vFlex } from '../../utils/sxChunks';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { Divider } from '../Divider';\nimport { ExpandableMenuItem } from '../ExpandableMenuItem';\nimport { InputBar } from '../InputBar';\nimport { MenuItem } from '../MenuItem';\nimport { MenuItemSize } from '../MenuItem/shared';\nimport { Option } from '../Select';\nimport { SmartClone } from '../SmartClone';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput';\nimport { verticalMenuSxProps } from './styles';\n\nexport type VerticalMenuProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<MenuItemSize>;\n    emphasized?: boolean;\n    textAlign?: InputTextAlign;\n  };\n\nexport function VerticalMenu<RC extends ReactElement | undefined = undefined>({\n  children,\n  sx = {},\n  size = 'xSmall',\n  emphasized,\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  className,\n  ...props\n}: VerticalMenuProps<RC>) {\n  return (\n    <Box\n      {...props}\n      sx={merge(\n        vFlex,\n        verticalMenuSxProps,\n        {\n          ...(emphasized ? { boxShadow: 'base.shadow.500' } : {}),\n        },\n        sx,\n      )}\n      className={`${className ?? ''} VerticalMenu`}\n    >\n      {Children.map(children, child => {\n        if (\n          isChildSubcomponent(child, Option) ||\n          isChildSubcomponent(child, MenuItem) ||\n          isChildSubcomponent(child, InputBar) ||\n          isChildSubcomponent(child, ExpandableMenuItem)\n        ) {\n          return (\n            <SmartClone\n              size={child.props.size ? child.props.size : size}\n              textAlign={textAlign}\n              sx={merge(\n                {\n                  '& .innerTextContainer': { alignItems: textAlign === 'left' },\n                },\n                child.props.sx || {},\n              )}\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n        if (isChildSubcomponent(child, Divider)) {\n          return (\n            <SmartClone\n              size={child.props.size ? child.props.size : size}\n              sx={{ my: 'base.spacing.x1' }}\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n\n        return null;\n      })}\n    </Box>\n  );\n}\n\nVerticalMenu.displayName = 'VerticalMenu';\nVerticalMenu.Divider = Divider;\nVerticalMenu.Item = MenuItem;\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { ReactElement, ReactNode, useCallback, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport { InputTextAlign } from '../../types/input';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { DeeplyNestedSx } from '../../types/sxProps';\nimport { noop } from '../../utils';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { MenuItem } from '../MenuItem';\nimport { MenuItemBadge } from '../MenuItem/MenuItemBadge';\nimport { MenuItemCaption } from '../MenuItem/MenuItemCaption';\nimport { MenuItemFramedIcon } from '../MenuItem/MenuItemFramedIcon';\nimport { MenuItemFramedImage } from '../MenuItem/MenuItemFramedImage';\nimport { MenuItemFramedLogo } from '../MenuItem/MenuItemFramedLogo';\nimport { MenuItemIcon } from '../MenuItem/MenuItemIcon';\nimport { MenuItemIntentIcon } from '../MenuItem/MenuItemIntentIcon';\nimport { MenuItemLabel } from '../MenuItem/MenuItemLabel';\nimport { MenuItemStatefulButtCon } from '../MenuItem/MenuItemStatefulButtCon';\nimport {\n  DEFAULT_MENU_ITEM_SIZE,\n  MENU_ITEM_SIZES,\n  MenuItemSize,\n} from '../MenuItem/shared';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport { SvgIcon } from '../SvgIcon';\nimport { VerticalMenu } from '../VerticalMenu';\nimport {\n  containerSx,\n  nestedVerticalMenuSx,\n  renderContainerResponsiveStyles,\n  renderSizeBasedContainerStyles,\n  rightChevronSx,\n} from './style';\n\nexport type ExpandableMenuItemProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    emphasized?: boolean;\n    children: ReactNode;\n    size?: MakeResponsive<MenuItemSize>;\n    textAlign?: InputTextAlign;\n    onExpandChange?: (expanded: boolean) => void;\n    shimmer?: boolean;\n    shimmerSx?: DeeplyNestedSx;\n  } & (\n    | {\n        expanded: boolean;\n        defaultExpanded?: never;\n      }\n    | {\n        defaultExpanded?: boolean;\n        expanded?: never;\n      }\n  )\n>;\n\nexport function ExpandableMenuItem<\n  RC extends ReactElement | undefined = undefined,\n>(\n  props: RC extends undefined\n    ? DomPropsWithDomRef<'div'> & ExpandableMenuItemProps\n    : ExpandableMenuItemProps & { rc: RC },\n) {\n  const {\n    children,\n    size = DEFAULT_MENU_ITEM_SIZE,\n    emphasized = false,\n    textAlign,\n    expanded,\n    defaultExpanded,\n    testId,\n    onExpandChange,\n    className,\n    shimmer,\n    shimmerSx,\n    sx = {},\n    ...otherProps\n  } = 'expanded' in props\n    ? { ...props, defaultExpanded: undefined }\n    : { ...props, expanded: undefined };\n  const theme = useTheme();\n  const { base } = theme;\n  const [uncontrolledExpanded, setUncontrolledExpanded] =\n    useState(defaultExpanded);\n  const expandedValueToUse = expanded ?? uncontrolledExpanded;\n  const nestedVerticalMenu = useGetSubcomponentChild(children, VerticalMenu);\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    VerticalMenu,\n    MenuItemStatefulButtCon,\n    MenuItemIntentIcon,\n  ]);\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n\n  const allStyles = merge(\n    {},\n    containerSx,\n    renderSizeBasedContainerStyles({ size: startingSize, theme }),\n    renderContainerResponsiveStyles({\n      size,\n      theme,\n    }),\n    sx,\n  );\n\n  const handleToggle = useCallback(() => {\n    if (shimmer) return;\n    if (typeof expanded === 'undefined') {\n      setUncontrolledExpanded(old => {\n        onExpandChange?.(!old);\n        return !old;\n      });\n    } else {\n      onExpandChange?.(!expanded);\n    }\n  }, [expanded, onExpandChange, shimmer]);\n\n  return (\n    <Stack\n      {...otherProps}\n      onClick={handleToggle}\n      direction=\"column\"\n      gap=\"base.spacing.x1\"\n      sx={allStyles}\n      className={`${className ?? ''} ExpandableMenuItem`}\n      testId={testId}\n    >\n      <MenuItem\n        size={size}\n        emphasized={emphasized}\n        textAlign={textAlign}\n        shimmer={shimmer}\n        shimmerSx={shimmerSx}\n        // @NOTE: ensure that hoverFX are automatically given to any\n        // ExpandableMenuItem component (to indicate interactivity)\n        onClick={noop}\n        sx={{ position: 'relative' }}\n        selected={expandedValueToUse}\n        testId={`${testId}__menuItem`}\n      >\n        {otherChildren}\n        <MenuItem.IntentIcon sx={{ opacity: 0 }} />\n        <SvgIcon className=\"chevron\" sx={rightChevronSx} rc={<motion.svg />}>\n          <motion.path\n            initial=\"down\"\n            animate={expandedValueToUse ? 'up' : 'down'}\n            variants={{\n              down: {\n                d: 'M5 9L12 16L19 9',\n              },\n              up: {\n                d: 'M5 16L12 9L19 16',\n              },\n            }}\n            transition={{\n              ease: base.motion.normal.fast.jsEase,\n              duration: base.motion.normal.fast.jsDuration,\n            }}\n          />\n        </SvgIcon>\n      </MenuItem>\n\n      <AnimatePresence>\n        {Boolean(nestedVerticalMenu) && expandedValueToUse ? (\n          <SmartClone\n            rc={\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  height: 0,\n                  overflow: 'hidden',\n                }}\n                animate={{\n                  height: 'auto',\n                  opacity: 1,\n                  transitionEnd: {\n                    overflow: 'visible',\n                  },\n                }}\n                exit={{\n                  height: 0,\n                  opacity: 0,\n                  overflow: 'hidden',\n                }}\n                transition={{\n                  duration: base.motion.normal.fast.jsDuration,\n                  ease: base.motion.normal.fast.jsEase,\n                }}\n              />\n            }\n            onClick={event => event.stopPropagation()}\n            emphasized={emphasized}\n            sx={merge(nestedVerticalMenuSx, nestedVerticalMenu?.props.sx || {})}\n            testId={\n              nestedVerticalMenu?.props.testId ??\n              `${testId}__nestedVerticalMenu`\n            }\n          >\n            {nestedVerticalMenu}\n          </SmartClone>\n        ) : null}\n      </AnimatePresence>\n    </Stack>\n  );\n}\n\nExpandableMenuItem.displayName = 'ExpandableMenuItem';\nExpandableMenuItem.Icon = MenuItemIcon;\nExpandableMenuItem.FramedIcon = MenuItemFramedIcon;\nExpandableMenuItem.FramedImage = MenuItemFramedImage;\nExpandableMenuItem.FramedLogo = MenuItemFramedLogo;\nExpandableMenuItem.Label = MenuItemLabel;\nExpandableMenuItem.Caption = MenuItemCaption;\nExpandableMenuItem.Badge = MenuItemBadge;\n","import { ClassNames } from '@emotion/react';\nimport { ReactElement, useEffect, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useGetSubcomponentChildren,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport {\n  isBaseClickable,\n  isBox,\n  MenuItemContentProps,\n  MenuItemProps,\n} from '../../types/clickable';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { BaseClickable } from '../Clickable';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput';\nimport { MenuItemBadge } from './MenuItemBadge';\nimport { MenuItemCaption } from './MenuItemCaption';\nimport { MenuItemFramedIcon } from './MenuItemFramedIcon';\nimport { MenuItemFramedImage } from './MenuItemFramedImage';\nimport { MenuItemFramedLogo } from './MenuItemFramedLogo';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { MenuItemIntentIcon } from './MenuItemIntentIcon';\nimport { MenuItemLabel } from './MenuItemLabel';\nimport { MenuItemOverflowDrawerMenu } from './MenuItemOverflowDrawerMenu';\nimport { MenuItemOverflowPopoverMenu } from './MenuItemOverflowPopoverMenu';\nimport { MenuItemPriceDisplay } from './MenuItemPriceDisplay';\nimport { MenuItemShimmer } from './MenuItemShimmer';\nimport { MenuItemStatefulButtCon } from './MenuItemStatefulButtCon';\nimport { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';\nimport {\n  baseStyles,\n  innerTextContainerSxProps,\n  renderResponsiveStyles,\n  renderSizeBasedStyles,\n} from './styles';\n\nfunction MenuItemContent<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n>({\n  testId,\n  className,\n  children,\n  emphasized,\n  selected,\n  sx = {},\n  rc,\n  size = DEFAULT_MENU_ITEM_SIZE,\n  controlledHover,\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  ...otherProps\n}: MenuItemContentProps<RC, OnClick>) {\n  const { onClick } =\n    'onClick' in otherProps ? otherProps : { ...otherProps, onClick: null };\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n\n  const allStyles = merge(\n    {},\n    baseStyles,\n    renderSizeBasedStyles({ size: startingSize, theme }),\n    renderResponsiveStyles({\n      size,\n      theme,\n    }),\n    sx,\n  );\n\n  const icon = useGetSubcomponentChild(children, MenuItemIcon);\n  const framedIcon = useGetSubcomponentChild(children, MenuItemFramedIcon);\n  const framedImage = useGetSubcomponentChild(children, MenuItemFramedImage);\n  const framedLogo = useGetSubcomponentChild(children, MenuItemFramedLogo);\n  const label = useGetSubcomponentChild(children, MenuItemLabel);\n  const caption = useGetSubcomponentChild(children, MenuItemCaption);\n  const intentIcon = useGetSubcomponentChild(children, MenuItemIntentIcon);\n  const badge = useGetSubcomponentChild(children, MenuItemBadge);\n  const priceDisplay = useGetSubcomponentChild(children, MenuItemPriceDisplay);\n  const popoverMenu = useGetSubcomponentChild(\n    children,\n    MenuItemOverflowPopoverMenu,\n  );\n  const drawerMenu = useGetSubcomponentChild(\n    children,\n    MenuItemOverflowDrawerMenu,\n  );\n  const statefulButtCons = useGetSubcomponentChildren(\n    children,\n    MenuItemStatefulButtCon,\n  );\n\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    MenuItemIcon,\n    MenuItemFramedIcon,\n    MenuItemFramedImage,\n    MenuItemFramedLogo,\n    MenuItemLabel,\n    MenuItemCaption,\n    MenuItemIntentIcon,\n    MenuItemBadge,\n    MenuItemPriceDisplay,\n    MenuItemOverflowPopoverMenu,\n    MenuItemOverflowDrawerMenu,\n    MenuItemStatefulButtCon,\n  ]);\n  const baseClickableProps = { ...otherProps, onClick, rc };\n  const boxProps = { ...otherProps, onClick };\n  const containsClickables =\n    Boolean(Array.isArray(statefulButtCons) && statefulButtCons.length) ||\n    Boolean(popoverMenu) ||\n    Boolean(drawerMenu);\n  const [isHovering, setIsHovering] = useState<boolean>(false);\n  useEffect(() => {\n    if (typeof controlledHover === 'undefined') return;\n    setIsHovering(controlledHover);\n  }, [controlledHover]);\n\n  const innerContents = (\n    <>\n      {framedLogo ? (\n        <SmartClone\n          testId={framedLogo.props.testId || `${testId}__framedLogo`}\n          size={size}\n        >\n          {framedLogo}\n        </SmartClone>\n      ) : framedImage ? (\n        <SmartClone\n          size={size}\n          testId={framedImage.props.testId || `${testId}__framedImage`}\n        >\n          {framedImage}\n        </SmartClone>\n      ) : framedIcon ? (\n        <SmartClone\n          testId={framedIcon.props.testId || `${testId}__framedIcon`}\n          size={size}\n        >\n          {framedIcon}\n        </SmartClone>\n      ) : icon ? (\n        <SmartClone testId={icon.props.testId || `${testId}__icon`}>\n          {icon}\n        </SmartClone>\n      ) : null}\n\n      <Box\n        rc={<span />}\n        sx={merge(innerTextContainerSxProps, {\n          alignItems: textAlign === 'left' ? 'flex-start' : 'flex-end',\n        })}\n        className=\"innerTextContainer\"\n      >\n        {label && (\n          <SmartClone\n            testId={label.props.testId || `${testId}__label`}\n            size={size}\n          >\n            {label}\n          </SmartClone>\n        )}\n\n        {caption && (\n          <SmartClone\n            testId={caption.props.testId || `${testId}__caption`}\n            size={size}\n          >\n            {caption}\n          </SmartClone>\n        )}\n      </Box>\n\n      {priceDisplay ||\n      statefulButtCons ||\n      drawerMenu ||\n      popoverMenu ||\n      badge ||\n      intentIcon ? (\n        <Box\n          sx={{\n            d: 'flex',\n            gap: 'base.spacing.x2',\n            alignItems: 'center',\n            flexShrink: 0,\n          }}\n          rc={<span />}\n        >\n          {priceDisplay && (\n            <SmartClone\n              testId={priceDisplay.props.testId || `${testId}__priceDisplay`}\n              size={size}\n            >\n              {priceDisplay}\n            </SmartClone>\n          )}\n\n          {statefulButtCons &&\n            statefulButtCons.map((statefulButtCon, index) => (\n              <SmartClone\n                // eslint-disable-next-line react/no-array-index-key\n                key={`statefulButtCon-${index}`}\n                testId={\n                  statefulButtCon.props.testId || `${testId}__statefulButtCon`\n                }\n              >\n                {statefulButtCon}\n              </SmartClone>\n            ))}\n\n          {drawerMenu ? (\n            <SmartClone\n              testId={drawerMenu.props.testId || `${testId}__drawerMenu`}\n            >\n              {drawerMenu}\n            </SmartClone>\n          ) : popoverMenu ? (\n            <SmartClone\n              testId={popoverMenu.props.testId || `${testId}__popoverMenu`}\n            >\n              {popoverMenu}\n            </SmartClone>\n          ) : null}\n\n          {(badge || intentIcon) && (\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              gap=\"base.spacing.x1\"\n              rc={<span />}\n            >\n              {badge && (\n                <SmartClone testId={badge.props.testId || `${testId}__badge`}>\n                  {badge}\n                </SmartClone>\n              )}\n\n              {intentIcon && (\n                <SmartClone\n                  testId={intentIcon.props.testId || `${testId}__intentIcon`}\n                >\n                  {intentIcon}\n                </SmartClone>\n              )}\n            </Stack>\n          )}\n        </Box>\n      ) : null}\n      {otherChildren}\n    </>\n  );\n\n  return (\n    <ClassNames>\n      {({ cx }) =>\n        isBaseClickable(onClick, rc, containsClickables, baseClickableProps) ? (\n          <BaseClickable\n            {...(!controlledHover\n              ? {\n                  onMouseEnter: () => setIsHovering(true),\n                  onMouseLeave: () => setIsHovering(false),\n                }\n              : {})}\n            {...baseClickableProps}\n            testId={testId}\n            className={cx(\n              { selected, emphasized, hover: isHovering },\n              `${className ?? ''} MenuItem`,\n            )}\n            sx={allStyles}\n          >\n            {innerContents}\n          </BaseClickable>\n        ) : isBox(onClick, rc, containsClickables, boxProps) ? (\n          <Box\n            {...(!controlledHover\n              ? {\n                  onMouseEnter: () => setIsHovering(true),\n                  onMouseLeave: () => setIsHovering(false),\n                }\n              : {})}\n            {...boxProps}\n            rc={onClick ? <div /> : <article />}\n            testId={testId}\n            className={cx(\n              { selected, emphasized, hover: isHovering },\n              `${className ?? ''} MenuItem`,\n            )}\n            sx={allStyles}\n          >\n            {innerContents}\n          </Box>\n        ) : null\n      }\n    </ClassNames>\n  );\n}\n\nexport function MenuItem<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n>({\n  shimmer = false,\n  size = DEFAULT_MENU_ITEM_SIZE,\n  rc,\n  testId,\n  className,\n  children,\n  emphasized,\n  selected,\n  domRef,\n  sx = {},\n  shimmerSx = {},\n  controlledHover,\n  textAlign,\n  ...otherProps\n}: MenuItemProps<RC, OnClick>) {\n  return shimmer ? (\n    <MenuItemShimmer\n      size={size}\n      rc={rc}\n      testId={`${testId}__shimmer`}\n      className={className}\n      emphasized={emphasized}\n      sx={shimmerSx}\n    />\n  ) : (\n    <MenuItemContent\n      {...otherProps}\n      controlledHover={controlledHover}\n      rc={rc}\n      size={size}\n      testId={testId}\n      className={className}\n      emphasized={emphasized}\n      selected={selected}\n      sx={sx}\n      domRef={domRef}\n      textAlign={textAlign}\n    >\n      {children}\n    </MenuItemContent>\n  );\n}\n\nMenuItem.displayName = 'MenuItem';\nMenuItem.Icon = MenuItemIcon;\nMenuItem.FramedIcon = MenuItemFramedIcon;\nMenuItem.FramedImage = MenuItemFramedImage;\nMenuItem.FramedLogo = MenuItemFramedLogo;\nMenuItem.Label = MenuItemLabel;\nMenuItem.IntentIcon = MenuItemIntentIcon;\nMenuItem.PriceDisplay = MenuItemPriceDisplay;\nMenuItem.Caption = MenuItemCaption;\nMenuItem.Badge = MenuItemBadge;\nMenuItem.OverflowPopoverMenu = MenuItemOverflowPopoverMenu;\nMenuItem.OverflowDrawerMenu = MenuItemOverflowDrawerMenu;\nMenuItem.StatefulButtCon = MenuItemStatefulButtCon;\n","export const DEFAULT_TEXT_INPUT_SIZE = 'medium' as const;\nexport const DEFAULT_TEXT_INPUT_ALIGN = 'left' as const;\nexport const TEXT_INPUT_SIZES = ['medium', 'large'] as const;\nexport type TextInputSize = (typeof TEXT_INPUT_SIZES)[number];\nexport const INPUT_MIN_WIDTH = '216px';\n","import { ClassNames } from '@emotion/react';\nimport { AnimatePresence } from 'framer-motion';\nimport {\n  ChangeEvent,\n  ComponentPropsWithoutRef,\n  ReactElement,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useConvertSxToEmotionStyles,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n  useResizeObserver,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport { TextInputProps } from '../../types/input';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport { ClearValueButton } from './ClearValueButton';\nimport {\n  DEFAULT_TEXT_INPUT_ALIGN,\n  DEFAULT_TEXT_INPUT_SIZE,\n  TEXT_INPUT_SIZES,\n} from './shared';\nimport {\n  baseInputSx,\n  buttonsContainerSx,\n  inputContainerBaseSx,\n  leftButtonsContainerSx,\n  renderContainerStyles,\n  renderInputSx,\n  renderResponsiveContainerStyles,\n  renderResponsiveInputSx,\n  rightButtonsContainerSx,\n} from './styles';\nimport { TextInputAdornment } from './TextInputAdornment';\nimport { TextInputButton } from './TextInputButton';\nimport { TextInputFramedImage } from './TextInputFramedImage';\nimport { TextInputIcon } from './TextInputIcon';\nimport { TextInputStatefulButtCon } from './TextInputStatefulButtCon';\n\n// @NOTE: when touching the styles inside this component, plz be aware that\n// other components compose themselves using them, eg:\n// <Select />\n// <TextArea />\n\nexport function TextInput<RC extends ReactElement | undefined = undefined>({\n  domRef,\n  inputRef = { current: null },\n  rc,\n  placeholder,\n  sx = {},\n  testId = 'TextInput',\n  name,\n  id = name,\n  children,\n  className,\n  validationStatus,\n  onChange,\n  onClearValue,\n  value,\n  // @NOTE: normally, the ClearValueButton would be a subcomponent, and engineers\n  // can choose whether they want it or not. This would mean however, that by default,\n  // we have no ClearValueButton. This is not ideal - as design wants inputs to\n  // feature this by default. Thus, for now, it is a simple flag instead, and is not\n  // a subcomponent.\n  hideClearValueButton,\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  // @NOTE: this would normally be undefined, but then we get react errors\n  // around a component switching between controlled and uncontrolled.\n  defaultValue = '',\n  // @NOTE: normally this prop would simply be called \"size\", but\n  // native text input tags already have a property called \"size\",\n  // (The size attribute defines the width of the <input> and the\n  // height of the <select> element).\n  // Thus we will need to call this property something else,\n  // eg \"sizeVariant\"\n  sizeVariant = DEFAULT_TEXT_INPUT_SIZE,\n  disabled,\n  ...inputDomAttributes\n}: RC extends undefined ? TextInputProps : TextInputProps & { rc: RC }) {\n  const localInputRef = useForwardLocalDomRef(inputRef);\n  const [uncontrolledValue, setUncontrolledValue] = useState<\n    ComponentPropsWithoutRef<'input'>['value']\n  >(\n    typeof value === 'number'\n      ? value.toString()\n      : typeof value === 'string'\n      ? value\n      : defaultValue,\n  );\n\n  const button = useGetSubcomponentChild(children, TextInputButton);\n  const buttCon = useGetSubcomponentChild(children, TextInputStatefulButtCon);\n  const icon = useGetSubcomponentChild(children, TextInputIcon);\n  const framedImage = useGetSubcomponentChild(children, TextInputFramedImage);\n  const adornment = useGetSubcomponentChild(children, TextInputAdornment);\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    TextInputButton,\n    TextInputStatefulButtCon,\n    TextInputIcon,\n    TextInputFramedImage,\n    TextInputAdornment,\n  ]);\n\n  const rightHandButtonsContainerRef = useRef<HTMLDivElement>(null);\n  const leftHandButtonsContainerRef = useRef<HTMLDivElement>(null);\n  const { width: rightHandButtonsContainerWidth } = useResizeObserver(\n    rightHandButtonsContainerRef,\n    30,\n  );\n  const { width: leftHandButtonsContainerWidth } = useResizeObserver(\n    leftHandButtonsContainerRef,\n    30,\n  );\n\n  const onClearInputText = useCallback(() => {\n    // @NOTE: if its a CONTROLLED input, simply call the\n    // onClearValue prop, and then early exit\n    if (value !== undefined) {\n      return onClearValue?.();\n    }\n\n    // @NOTE: input is UNCONTROLLED, so we need to manually\n    // update it's value:\n    if (localInputRef.current) {\n      localInputRef.current.value = '';\n      localInputRef.current.focus();\n    }\n    onChange?.({\n      type: 'change',\n      target: localInputRef?.current,\n    } as ChangeEvent<HTMLInputElement>);\n    setUncontrolledValue('');\n    onClearValue?.();\n    return false;\n  }, [localInputRef, onChange, value, onClearValue, setUncontrolledValue]);\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setUncontrolledValue(event.target.value);\n      onChange?.(event);\n    },\n    [setUncontrolledValue, onChange],\n  );\n\n  const theme = useTheme();\n  const defaultSize = getStartingSize(\n    sizeVariant,\n    DEFAULT_TEXT_INPUT_SIZE,\n    TEXT_INPUT_SIZES,\n  );\n  const allContainerStyles = merge(\n    inputContainerBaseSx,\n    renderContainerStyles({ size: defaultSize, theme }),\n    renderResponsiveContainerStyles({\n      size: sizeVariant,\n      theme,\n    }),\n    sx,\n  );\n  const valueToUse = value ?? uncontrolledValue;\n  const allInputSx = merge(\n    baseInputSx,\n    renderInputSx({\n      theme,\n      validationStatus,\n      leftHandButtonsWidth: leftHandButtonsContainerWidth,\n      rightHandButtonsWidth: rightHandButtonsContainerWidth,\n      textAlign,\n      hasValue: Boolean(valueToUse),\n    }),\n    renderResponsiveInputSx({\n      theme,\n      validationStatus,\n      size: sizeVariant,\n      leftHandButtonsWidth: leftHandButtonsContainerWidth,\n      rightHandButtonsWidth: rightHandButtonsContainerWidth,\n      textAlign,\n      hasValue: Boolean(valueToUse),\n    }),\n  );\n  const convertedInputStyles = useConvertSxToEmotionStyles(allInputSx);\n  const hasLeftHandItems =\n    framedImage || icon || (textAlign === 'left' && Boolean(adornment));\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <Box\n          rc={rc}\n          domRef={domRef}\n          className={cx(className, { disabled })}\n          testId={testId}\n          sx={allContainerStyles}\n          data-validation-status={validationStatus}\n        >\n          <input\n            {...inputDomAttributes}\n            disabled={disabled}\n            name={name}\n            ref={localInputRef}\n            data-testid={`${testId}__input`}\n            onChange={handleInputChange}\n            value={valueToUse}\n            id={id}\n            placeholder={placeholder}\n            css={convertedInputStyles}\n          />\n\n          {hasLeftHandItems && (\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              sx={merge(leftButtonsContainerSx, buttonsContainerSx)}\n              domRef={leftHandButtonsContainerRef}\n            >\n              {framedImage || icon || null}\n              {textAlign === 'left' && adornment ? (\n                <SmartClone\n                  testId={adornment?.props?.testId || `${testId}__adornment`}\n                >\n                  {adornment}\n                </SmartClone>\n              ) : null}\n            </Stack>\n          )}\n\n          <Stack\n            alignItems=\"center\"\n            direction=\"row\"\n            sx={merge(rightButtonsContainerSx, buttonsContainerSx)}\n            testId={`${testId}__rightButtonsContainer`}\n            domRef={rightHandButtonsContainerRef}\n          >\n            {textAlign === 'right' && Boolean(adornment) ? (\n              <SmartClone\n                testId={adornment?.props?.testId || `${testId}__adornment`}\n              >\n                {adornment}\n              </SmartClone>\n            ) : null}\n\n            <AnimatePresence>\n              {valueToUse && !hideClearValueButton && (\n                <ClearValueButton\n                  disabled={disabled}\n                  onClick={onClearInputText}\n                  testId={`${testId}__rightButtonsContainer__clearValueButton`}\n                />\n              )}\n            </AnimatePresence>\n\n            {button && (\n              <SmartClone\n                disabled={disabled}\n                currentInputValue={valueToUse}\n                testId={\n                  button.props.testId ??\n                  `${testId}__rightButtonsContainer__rightButton`\n                }\n              >\n                {button}\n              </SmartClone>\n            )}\n            {buttCon && (\n              <SmartClone\n                disabled={disabled}\n                currentInputValue={valueToUse}\n                testId={\n                  buttCon.props.testId ??\n                  `${testId}__rightButtonsContainer__rightButtCon`\n                }\n              >\n                {buttCon}\n              </SmartClone>\n            )}\n          </Stack>\n\n          {otherChildren}\n        </Box>\n      )}\n    </ClassNames>\n  );\n}\n\nTextInput.displayName = 'TextInput';\nTextInput.Button = TextInputButton;\nTextInput.Icon = TextInputIcon;\nTextInput.FramedImage = TextInputFramedImage;\nTextInput.StatefulButtCon = TextInputStatefulButtCon;\nTextInput.Adornment = TextInputAdornment;\n","import { motion } from 'framer-motion';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { ClearValueButtonProps } from '../../types/clickable';\nimport { BaseClickable } from '../Clickable';\nimport { Icon } from '../Icon';\nimport { clearValueButtonSx } from './styles';\n\nexport function ClearValueButton<\n  RC extends ReactElement | undefined = undefined,\n>({\n  sx = {},\n  className = 'clearValueButton',\n  rc,\n  ...props\n}: ClearValueButtonProps<RC>) {\n  const { base } = useTheme();\n  return (\n    <BaseClickable\n      {...props}\n      rc={\n        rc || (\n          <motion.button\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{\n              ease: base.motion.normal.fast.jsEase,\n              duration: base.motion.normal.fast.jsDuration,\n            }}\n          />\n        )\n      }\n      className={className}\n      sx={merge(clearValueButtonSx, sx)}\n    >\n      <Icon\n        icon=\"CloseWithCircle\"\n        variant=\"bold\"\n        sx={{ width: 'base.icon.size.200' }}\n      />\n    </BaseClickable>\n  );\n}\n\nClearValueButton.displayName = 'ClearValueButton';\n","import { Properties } from 'csstype';\n\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx, RenderSxProps } from '../../utils/styleHelpers';\nimport { INPUT_MIN_WIDTH, TextInputSize } from './shared';\n\nexport const inputContainerBaseSx = {\n  position: 'relative',\n  minWidth: INPUT_MIN_WIDTH,\n  flexShrink: 0,\n\n  '& > *': {\n    position: 'absolute',\n  },\n};\n\nexport const buttonsContainerSx = {\n  top: '50%',\n  transform: 'translateY(-50%)',\n};\nexport const leftButtonsContainerSx = {\n  left: 'base.spacing.x3',\n};\n\nexport const rightButtonsContainerSx = {\n  right: 'base.spacing.x3',\n};\n\nexport const clearValueButtonSx = {\n  padding: '0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '& > svg': {\n    fill: 'base.color.text.secondary',\n    transitionProperty: 'fill',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n\n  '&:hover > svg': {\n    fill: 'base.color.text.primary',\n  },\n};\n\nexport const baseInputSx = {\n  appearance: 'none',\n  w: '100%',\n  h: '100%',\n  border: 'none',\n  borderRadius: 'base.borderRadius.x4',\n  fontFamily: 'base.font.family.body.primary',\n  fontSize: 'base.text.body.medium.regular.fontSize',\n  lineHeight: 'base.text.body.medium.regular.lineHeight',\n  fontWeight: 'base.text.body.medium.regular.fontWeight',\n  c: 'base.color.text.primary',\n  bgc: 'base.color.translucent.emphasis.100',\n\n  transitionProperty: 'box-shadow, background',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n  '&:not(:disabled):hover': {\n    bgc: 'base.color.translucent.emphasis.200',\n  },\n  '&:not(:disabled):focus': {\n    bgc: 'base.color.translucent.emphasis.300',\n  },\n};\n\nexport const inputIconBaseSx = {\n  width: 'base.icon.size.300',\n  height: 'base.icon.size.300',\n  fill: 'base.color.brand.1',\n  left: 'base.spacing.x3',\n};\n\nexport const framedImageSx = {\n  w: 'base.icon.size.300',\n};\n\nexport const adornmentSx = {\n  c: 'base.color.text.primary',\n  lineHeight: 'unset',\n};\n\nexport function renderInputSx({\n  validationStatus,\n  leftHandButtonsWidth,\n  rightHandButtonsWidth,\n  textAlign,\n  theme,\n  hasValue,\n}: {\n  validationStatus: InputValidationStatus | undefined;\n  rightHandButtonsWidth: number;\n  leftHandButtonsWidth: number;\n  textAlign: InputTextAlign;\n  theme: BiomeTheme;\n  hasValue: boolean;\n}) {\n  const paddingLeft =\n    leftHandButtonsWidth > 0\n      ? `calc(${leftHandButtonsWidth}px + ${theme.base.spacing.x5})`\n      : theme.base.spacing.x3;\n  const paddingRight =\n    rightHandButtonsWidth > 0\n      ? `calc(${rightHandButtonsWidth}px + ${theme.base.spacing.x5})`\n      : theme.base.spacing.x3;\n  const hoverShadow = theme.base.shadow[200];\n  const emptyShadow = '0 0 0 rgba(0,0,0,0)';\n\n  return {\n    paddingLeft,\n    paddingRight,\n    textAlign,\n    background: hasValue\n      ? theme.base.color.translucent.emphasis[300]\n      : theme.base.color.translucent.emphasis[100],\n\n    boxShadow:\n      validationStatus === 'error'\n        ? `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.status.fatal.bright}`\n        : hasValue\n        ? `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[500]}`\n        : `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[300]}`,\n\n    '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n      // @NOTE: this hides the up and down arrows on number inputs\n      display: 'none',\n    },\n\n    '&::placeholder': {\n      color: theme.base.color.text.secondary,\n    },\n\n    '&:not(:disabled):hover': {\n      background: hasValue\n        ? theme.base.color.translucent.emphasis[300]\n        : theme.base.color.translucent.emphasis[200],\n      boxShadow:\n        validationStatus === 'error'\n          ? `${hoverShadow}, inset 0 0 0 1px ${theme.base.color.status.fatal.bright}`\n          : `${hoverShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[600]}`,\n    },\n\n    '&:not(:disabled):focus': {\n      outline: 'none',\n      background: theme.base.color.translucent.emphasis[300],\n      boxShadow:\n        validationStatus === 'error'\n          ? `${hoverShadow}, inset 0 0 0 2px ${theme.base.color.status.fatal.bright}`\n          : `${hoverShadow}, inset 0 0 0 2px ${theme.base.color.brand[1]}`,\n    },\n  };\n}\n\nexport const renderResponsiveInputSx = (props: {\n  validationStatus: InputValidationStatus | undefined;\n  leftHandButtonsWidth: number;\n  rightHandButtonsWidth: number;\n  textAlign: InputTextAlign;\n  theme: BiomeTheme;\n  size: MakeResponsive<TextInputSize>;\n  hasValue: boolean;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: renderInputSx as unknown as (\n      props: RenderSxProps<TextInputSize>,\n    ) => Properties,\n  });\n\nexport function renderContainerStyles({\n  size,\n  theme,\n}: {\n  size: TextInputSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'large':\n      return {\n        height: theme.base.spacing.x16,\n      };\n\n    case 'medium':\n    default:\n      return {\n        height: theme.base.spacing.x12,\n      };\n  }\n}\n\nexport const renderResponsiveContainerStyles = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<TextInputSize>;\n}) => {\n  const sx = getResponsiveSx({\n    ...props,\n    renderSxAtSize: renderContainerStyles,\n  });\n  return sx;\n};\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { BodyProps } from '../../types/text';\nimport { Body } from '../Text/Body';\nimport { adornmentSx } from './styles';\n\nexport type TextInputAdornmentProps<\n  RC extends ReactElement | undefined = undefined,\n> = BodyProps<RC> & {};\n\nexport function TextInputAdornment<\n  RC extends ReactElement | undefined = undefined,\n>({ children, sx = {}, ...props }: TextInputAdornmentProps<RC>) {\n  const allStyles = merge(adornmentSx, sx);\n\n  return (\n    <Body {...props} sx={allStyles}>\n      {children}\n    </Body>\n  );\n}\n\nTextInputAdornment.displayName = 'TextInput.Adornment';\n","import { TextInputButtonProps } from '../../types/clickable';\nimport { Button } from '../Clickable';\n\nexport function TextInputButton({\n  children,\n  currentInputValue,\n  sx = {},\n  ...props\n}: TextInputButtonProps) {\n  return (\n    <Button {...props} variant=\"tertiary\" size=\"small\" sx={sx}>\n      {children}\n    </Button>\n  );\n}\n\nTextInputButton.displayName = 'TextInput.Button';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { FramedImage, FramedImageProps } from '../FramedImage';\nimport { framedImageSx } from './styles';\n\nexport type TextInputFramedImageProps<\n  RC extends ReactElement | undefined = undefined,\n> = FramedImageProps<RC>;\n\nexport function TextInputFramedImage<\n  RC extends ReactElement | undefined = undefined,\n>({ sx = {}, ...props }: TextInputFramedImageProps<RC>) {\n  const allStyles = merge(framedImageSx, sx);\n  return <FramedImage {...props} sx={allStyles} />;\n}\n\nTextInputFramedImage.displayName = 'TextInput.FramedImage';\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { AspectRatioImage, AspectRatioImageProps } from '../AspectRatioImage';\n\nexport type FramedImageProps<RC extends ReactElement | undefined = undefined> =\n  DistributiveOmit<AspectRatioImageProps<RC>, 'aspectRatio'> & {\n    circularFrame?: boolean;\n  };\n\nexport function FramedImage<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  testId,\n  circularFrame = false,\n  responsiveSizes = [64, 128, 256, 450],\n  className,\n  ...props\n}: FramedImageProps<RC>) {\n  const allStyles = merge(\n    {\n      display: 'block',\n      bg: 'base.color.translucent.standard.100',\n      overflow: 'hidden',\n      borderRadius: circularFrame ? '50%' : 'base.borderRadius.x2',\n      objectFit: 'cover',\n      objectPosition: 'center',\n    },\n    sx,\n  );\n  return (\n    <AspectRatioImage\n      {...props}\n      className={`${className ?? ''} FramedImage`}\n      responsiveSizes={responsiveSizes}\n      aspectRatio=\"1:1\"\n      testId={testId}\n      sx={allStyles}\n    />\n  );\n}\n\nFramedImage.displayName = 'FramedImage';\n","import { Property } from 'csstype';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MakeResponsive, MakeValidSxValue } from '../../types';\nimport { BiomeTheme } from '../../types/theme';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { hFlex } from '../../utils/sxChunks';\nimport { isError } from '../../utils/textStyleHelpers';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { CloudImage, CloudImageProps } from '../CloudImage';\n\nexport const ASPECT_RATIOS = [\n  '1:1',\n  '3:4',\n  '4:3',\n  '7:5',\n  '16:9',\n  '21:9',\n  '32:9',\n] as const;\nexport const DEFAULT_ASPECT_RATIO: AspectRatio = '1:1';\nexport type AspectRatio = (typeof ASPECT_RATIOS)[number];\n\n// @TODO: refactor this component to just use the new\n// css aspect-ratio property: https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio\nexport type AspectRatioImageProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> &\n  Pick<\n    CloudImageProps,\n    | 'imageUrl'\n    | 'relativeImageSizeInLayout'\n    | 'imageResizeServiceUrl'\n    | 'responsiveSizes'\n    | 'loading'\n    | 'defaultImageUrl'\n    | 'defaultImageClassName'\n    | 'alt'\n  > & {\n    aspectRatio?: MakeResponsive<AspectRatio>;\n    objectFit?: MakeValidSxValue<Property.ObjectFit>;\n    objectPosition?: MakeValidSxValue<Property.ObjectPosition>;\n  };\n\nexport function getAspectRatioSx(aspect: AspectRatio) {\n  switch (aspect) {\n    case '3:4':\n      return { paddingBottom: '133.33%' };\n\n    case '4:3':\n      return { paddingBottom: '75%' };\n\n    case '7:5':\n      return { paddingBottom: '71.43%' };\n\n    case '16:9':\n      return { paddingBottom: '56.25%' };\n\n    case '21:9':\n      return { paddingBottom: '42.86%' };\n\n    case '32:9':\n      return { paddingBottom: '28.13%' };\n\n    case '1:1':\n    default:\n      return { paddingBottom: '100%' };\n  }\n}\n\nfunction getResponsiveAspectRatioSx({\n  theme,\n  aspect,\n}: {\n  theme: BiomeTheme;\n  aspect: MakeResponsive<AspectRatio>;\n}) {\n  const aspectAsArray = Array.isArray(aspect) ? [...aspect] : [aspect];\n  aspectAsArray.shift();\n\n  const aspectStyles = merge(\n    ...aspectAsArray.map((responsiveAspect, index) => {\n      if (responsiveAspect != null && !isError(responsiveAspect)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getAspectRatioSx(responsiveAspect),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return aspectStyles;\n}\n\nexport function AspectRatioImage<\n  RC extends ReactElement | undefined = undefined,\n>({\n  imageUrl,\n  relativeImageSizeInLayout,\n  responsiveSizes,\n  imageResizeServiceUrl,\n  defaultImageClassName,\n  defaultImageUrl,\n  loading,\n  sx = {},\n  aspectRatio = DEFAULT_ASPECT_RATIO,\n  objectFit = 'cover',\n  objectPosition = '50% 50%',\n  testId,\n  rc,\n  className,\n  alt,\n  ...props\n}: AspectRatioImageProps<RC>) {\n  const theme = useTheme();\n  const startingAspect = getStartingSize(\n    aspectRatio,\n    DEFAULT_ASPECT_RATIO,\n    ASPECT_RATIOS,\n  );\n  const innerContainerSx = merge(\n    { ...hFlex, position: 'relative', width: '100%' },\n    getResponsiveAspectRatioSx({ theme, aspect: aspectRatio }),\n    getAspectRatioSx(startingAspect),\n  );\n\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      sx={merge({ d: 'flex', w: '100%', minw: '16px' }, sx)}\n      rc={rc}\n      className={`${className ?? ''} AspectRatioImage`}\n    >\n      <Box\n        sx={innerContainerSx}\n        testId={`${testId}__innerContainer`}\n        rc={rc}\n        className=\"AspectRatioImage__inner\"\n      >\n        <CloudImage\n          alt={alt}\n          className=\"AspectRatioImage__inner__image\"\n          testId={`${testId}__innerContainer__cloudImage`}\n          imageUrl={imageUrl}\n          relativeImageSizeInLayout={relativeImageSizeInLayout}\n          responsiveSizes={responsiveSizes}\n          imageResizeServiceUrl={imageResizeServiceUrl}\n          loading={loading}\n          defaultImageClassName={defaultImageClassName}\n          defaultImageUrl={defaultImageUrl}\n          sx={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            top: '0',\n            left: '0',\n            objectFit,\n            objectPosition,\n          }}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nAspectRatioImage.displayName = 'AspectRatioImage';\n","import merge from 'ts-deepmerge';\n\nimport { TextInputIconProps } from '../../types/icon';\nimport { Icon } from '../Icon';\nimport { inputIconBaseSx } from './styles';\n\nexport function TextInputIcon({\n  sx = {},\n  iconVariant,\n  ...props\n}: TextInputIconProps) {\n  const allStyles = merge(inputIconBaseSx, sx);\n  return <Icon {...props} variant={iconVariant} sx={allStyles} />;\n}\n\nTextInputIcon.displayName = 'TextInput.Icon';\n","import { ReactElement } from 'react';\n\nimport { TextInputStatefulButtConProps } from '../../types/clickable';\nimport { StatefulButtCon } from '../Clickable';\n\nexport function TextInputStatefulButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  children,\n  currentInputValue,\n  sx = {},\n  ...props\n}: TextInputStatefulButtConProps<RC>) {\n  return (\n    <StatefulButtCon {...props} size=\"small\" sx={sx}>\n      {children}\n    </StatefulButtCon>\n  );\n}\n\nTextInputStatefulButtCon.displayName = 'TextInput.StatefulButtCon';\n","import { ReactElement, Ref, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  DomPropsWithDomRef,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { Box } from '../Box';\nimport { Body } from '../Text';\nimport { BadgeVariant } from './shared';\nimport {\n  baseBadgeSx,\n  getBadgeAnimationSx,\n  getBadgeVariantSx,\n  plainDotBadgeSx,\n  textSx,\n} from './styles';\n\nexport type BadgeProps = StandardComponentWithProps<\n  HTMLSpanElement,\n  {\n    variant?: BadgeVariant;\n    isAnimated?: boolean;\n    badgeContent?: string | number;\n    maxNumber?: number;\n    showZero?: boolean;\n  }\n>;\n\nexport function Badge<RC extends ReactElement | undefined = undefined>({\n  rc = <span />,\n  domRef,\n  testId,\n  sx = {},\n  variant = 'fatal',\n  isAnimated = false,\n  badgeContent,\n  maxNumber = 999,\n  showZero,\n  ...badgeDomAttributes\n}: RC extends undefined\n  ? DomPropsWithDomRef<'span'> & BadgeProps\n  : BadgeProps & { rc: RC }) {\n  const displayContent = useMemo(() => {\n    if (typeof badgeContent === 'number') {\n      if (typeof maxNumber === 'number' && badgeContent > maxNumber) {\n        return `+${maxNumber}`;\n      }\n      if (badgeContent === 0 && showZero) {\n        return `${badgeContent}`;\n      }\n      if (badgeContent === 0 && !showZero) {\n        return null;\n      }\n    }\n\n    return badgeContent;\n  }, [badgeContent, maxNumber, showZero]);\n\n  const hasContent = useMemo(() => Boolean(displayContent), [displayContent]);\n  const badgeSx = useMemo(\n    () =>\n      merge(\n        baseBadgeSx,\n        getBadgeVariantSx(variant),\n        getBadgeAnimationSx(isAnimated, hasContent),\n        {\n          ...(!displayContent ? plainDotBadgeSx : {}),\n        },\n        sx,\n      ),\n    [variant, isAnimated, hasContent, displayContent, sx],\n  );\n\n  return (\n    <Box\n      {...badgeDomAttributes}\n      rc={rc}\n      sx={badgeSx}\n      domRef={domRef as Ref<HTMLDivElement>}\n      testId={testId}\n    >\n      {Boolean(displayContent) && (\n        <Body\n          sx={textSx}\n          weight=\"bold\"\n          size=\"xxSmall\"\n          testId={`${testId}__text`}\n        >\n          {displayContent}\n        </Body>\n      )}\n    </Box>\n  );\n}\n\nBadge.displayName = 'Badge';\n","import { keyframes } from '@emotion/react';\n\nimport { BadgeVariant } from './shared';\n\nconst dotPulseAnimation = keyframes`\n  0% {\n    scale: 1;\n    opacity: 0.8;  \n  }\n  100% {\n    scale: 2.8;\n    opacity: 0\n  }\n`;\n\nconst contentPulseAnimation = keyframes`\n  0% {\n    scale: 1;\n    opacity: 0.8;  \n  }\n  100% {\n    scale: 1.5 1.9;\n    opacity: 0\n  }\n`;\n\nexport function getBadgeAnimationSx(isAnimated: boolean, hasContent: boolean) {\n  return isAnimated\n    ? {\n        '&:before': {\n          animation: `${\n            hasContent ? contentPulseAnimation : dotPulseAnimation\n          } infinite`,\n          animationDuration: '1.3s',\n          animationTimingFunction: 'base.motion.normal.gentle.cssEase',\n        },\n      }\n    : {};\n}\n\nexport const baseBadgeSx = {\n  position: 'relative',\n  flexShrink: '0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  px: 'base.spacing.x2',\n  py: '1px',\n  brad: 'base.spacing.x6',\n\n  '&:before': {\n    content: \"''\",\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    bottom: '0',\n    brad: 'base.spacing.x6',\n    scale: '1',\n  },\n};\n\nexport const plainDotBadgeSx = {\n  height: 'base.spacing.x2',\n  width: 'base.spacing.x2',\n  p: '0px',\n};\n\nexport const getBadgeVariantSx = (variant: BadgeVariant) => {\n  return {\n    bg: `base.color.status.${variant}.bright`,\n\n    '&:before': {\n      bg: `base.color.status.${variant}.bright`,\n    },\n  };\n};\n\nexport const textSx = {\n  c: 'base.color.fixed.black.1000',\n  position: 'relative',\n};\n","import { Badge, BadgeProps } from '../Badge';\n\nexport type MenuItemBadgeProps = BadgeProps;\n\nexport function MenuItemBadge({ ...props }: MenuItemBadgeProps) {\n  return <Badge {...props} />;\n}\n\nMenuItemBadge.displayName = 'MenuItem.Badge';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport {\n  DEFAULT_MENU_ITEM_SIZE,\n  MENU_ITEM_SIZES,\n  MenuItemSize,\n} from './shared';\nimport { renderCaptionSx, renderResponsiveCaptionSx } from './styles';\n\nexport type MenuItemCaptionProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & { size?: MakeResponsive<MenuItemSize> };\n\nexport function MenuItemCaption<\n  RC extends ReactElement | undefined = undefined,\n>({\n  size = DEFAULT_MENU_ITEM_SIZE,\n  sx = {},\n  rc = <span />,\n  ...props\n}: MenuItemCaptionProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const allSx = merge(\n    {\n      ...lineClamp(2),\n      color: 'base.color.text.secondary',\n      textAlign: 'left',\n    },\n    renderCaptionSx({ theme: themeProps, size: startingSize }),\n    renderResponsiveCaptionSx({\n      theme: themeProps,\n      size,\n    }),\n    sx,\n  );\n  return <Box {...props} sx={allSx} rc={rc} />;\n}\n\nMenuItemCaption.displayName = 'MenuItem.Caption';\n","import { HeadingProps } from '../../types/text';\n\nexport function isHeading(\n  menuItemSize: MenuItemSize,\n  props: unknown,\n): props is HeadingProps<undefined> {\n  return menuItemSize === 'medium';\n}\n\nexport const DEFAULT_MENU_ITEM_SIZE = 'medium';\nexport const MENU_ITEM_SIZES = ['xSmall', 'small', 'medium'] as const;\nexport type MenuItemSize = (typeof MENU_ITEM_SIZES)[number];\n\nexport function isSizeAnArray(\n  size: unknown,\n): size is Array<MenuItemSize | null> {\n  return Array.isArray(size);\n}\n","import { Properties } from 'csstype';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport {\n  getBodyTextStyles,\n  getHeadingTextStyles,\n} from '../../utils/textStyleHelpers';\nimport { MenuItemSize } from './shared';\n\nexport const innerTextContainerSxProps = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  justifyContent: 'center',\n  flexGrow: 1,\n};\n\nexport const renderSizeBasedStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<MenuItemSize>;\n  theme: BiomeTheme;\n}) => {\n  switch (size) {\n    case 'xSmall':\n      return {\n        paddingTop: `${parseInt(theme.base.spacing.x2, 10) - 2}px`,\n        paddingBottom: `${parseInt(theme.base.spacing.x2, 10) - 2}px`,\n        paddingLeft: theme.base.spacing.x2,\n        minHeight: '50px',\n        borderRadius: 'base.borderRadius.x4',\n\n        '& .innerTextContainer': {\n          minHeight: '34px',\n        },\n      };\n\n    case 'small':\n      return {\n        paddingTop: `${parseInt(theme.base.spacing.x3, 10) - 2}px`,\n        paddingBottom: `${parseInt(theme.base.spacing.x3, 10) - 2}px`,\n        minHeight: '72px',\n        borderRadius: 'base.borderRadius.x6',\n\n        '& .innerTextContainer': {\n          minHeight: '48px',\n        },\n      };\n\n    case 'medium':\n    default:\n      return {\n        paddingTop: `${parseInt(theme.base.spacing.x6, 10) - 2}px`,\n        paddingBottom: `${parseInt(theme.base.spacing.x6, 10) - 2}px`,\n        minHeight: '96px',\n        borderRadius: 'base.borderRadius.x6',\n\n        '& .innerTextContainer': {\n          minHeight: '48px',\n        },\n      };\n  }\n};\n\nexport const baseStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingX: 'base.spacing.x3',\n  width: '100%',\n  gap: 'base.spacing.x4',\n  transitionProperty: 'border, background, box-shadow',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n  border: 'solid transparent',\n  borderWidth: 'base.border.size.200',\n\n  '&.emphasized': {\n    bgc: 'base.color.translucent.emphasis.100',\n  },\n\n  'div&': {\n    cursor: 'pointer',\n  },\n\n  '&:not(article).hover': {\n    bgc: 'base.color.translucent.emphasis.200',\n    boxShadow: 'base.shadow.200',\n  },\n\n  '&.selected': {\n    bgc: 'base.color.translucent.emphasis.200',\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n\n  '&.selected:not(article).hover': {\n    boxShadow: 'base.shadow.200',\n  },\n\n  '&:not(article):active': {\n    bgc: 'base.color.translucent.emphasis.100',\n    boxShadow: 'base.shadow.100',\n  },\n};\n\nexport const renderResponsiveStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<MenuItemSize>;\n  theme: BiomeTheme;\n}) => getResponsiveSx({ size, theme, renderSxAtSize: renderSizeBasedStyles });\n\nexport const baseFramedIconStyles = {\n  d: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  bg: 'base.color.translucent.standard.100',\n  flexShrink: 0,\n};\n\nexport const baseFramedImageStyles = {\n  width: 'base.spacing.x12',\n  height: 'base.spacing.x12',\n  flexShrink: 0,\n};\n\nexport function renderLabelStyles({\n  size,\n  theme,\n}: {\n  size: MenuItemSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'xSmall':\n      return getBodyTextStyles({\n        themeProps: theme,\n        mono: false,\n        size: 'small',\n        weight: 'regular',\n      });\n\n    case 'small':\n      return getBodyTextStyles({\n        themeProps: theme,\n        mono: false,\n        size: 'medium',\n        weight: 'regular',\n      });\n\n    case 'medium':\n    default:\n      return getHeadingTextStyles({\n        themeProps: theme,\n        size: 'xSmall',\n        weight: 'bold',\n      });\n  }\n}\n\nexport const renderResponsiveLabelStyles = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<MenuItemSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: renderLabelStyles,\n  });\n\nexport function renderCaptionSx({\n  size,\n  theme,\n}: {\n  size: MenuItemSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'xSmall':\n      return getBodyTextStyles({\n        themeProps: theme,\n        mono: false,\n        size: 'xxSmall',\n        weight: 'regular',\n      });\n\n    case 'small':\n    case 'medium':\n    default:\n      return getBodyTextStyles({\n        themeProps: theme,\n        mono: false,\n        size: 'xSmall',\n        weight: 'regular',\n      });\n  }\n}\n\nexport const renderResponsiveCaptionSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<MenuItemSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: renderCaptionSx,\n  });\n\nexport const baseShimmerOuterSx = {\n  position: 'relative',\n  w: '100%',\n};\n\nexport function renderShimmerOuterStyles({ size }: { size: MenuItemSize }) {\n  switch (size) {\n    case 'xSmall':\n      return { height: '50px', borderRadius: 'base.borderRadius.x4' };\n\n    case 'small':\n      return { height: '72px', borderRadius: 'base.borderRadius.x6' };\n\n    case 'medium':\n    default:\n      return { height: '96px', borderRadius: 'base.borderRadius.x6' };\n  }\n}\n\nexport const renderResponsiveOuterStyles = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<MenuItemSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: renderShimmerOuterStyles,\n  });\n\nexport const shimmerLeftMaskSx = {\n  display: 'block',\n  width: '60%',\n  height: '100%',\n  WebkitMaskPosition: 'left center',\n  WebkitMaskRepeat: 'no-repeat',\n  WebkitMaskSize: 'contain',\n};\n\nexport const shimmerRightMaskSx = {\n  position: 'absolute',\n  width: '40%',\n  height: '100%',\n  top: '0',\n  right: '0',\n  display: 'block',\n  WebkitMaskPosition: 'right center',\n  WebkitMaskRepeat: 'no-repeat',\n  WebkitMaskSize: 'contain',\n};\n\nexport function getFramedContainerSx({\n  size,\n  theme: { base },\n}: {\n  size: MenuItemSize;\n  theme: BiomeTheme;\n}): Properties {\n  switch (size) {\n    case 'xSmall':\n      return {\n        width: base.icon.size[400],\n        height: base.icon.size[400],\n      };\n\n    case 'small':\n    case 'medium':\n    default:\n      return {\n        width: base.icon.size[500],\n        height: base.icon.size[500],\n      };\n  }\n}\n\nexport const getResponsiveFramedContainerSx = (props: {\n  size: MakeResponsive<MenuItemSize>;\n  theme: BiomeTheme;\n}) => getResponsiveSx({ ...props, renderSxAtSize: getFramedContainerSx });\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MenuItemProps } from '../../types/clickable';\nimport { DualVariantIconProps } from '../../types/icon';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { BoxWithRCAndDomProps } from '../Box/Box';\nimport { FramedImageProps } from '../FramedImage';\nimport { Icon, IconProps } from '../Icon';\nimport { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';\nimport {\n  baseFramedIconStyles,\n  getFramedContainerSx,\n  getResponsiveFramedContainerSx,\n} from './styles';\n\nexport type MenuItemFramedIconProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> &\n  Pick<IconProps, 'icon'> &\n  Pick<DualVariantIconProps, 'variant'> &\n  Pick<FramedImageProps<RC>, 'circularFrame'> &\n  Pick<MenuItemProps, 'size'>;\n\nexport function MenuItemFramedIcon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  icon,\n  sx = {},\n  testId,\n  variant,\n  circularFrame,\n  size = DEFAULT_MENU_ITEM_SIZE,\n  rc = <span />,\n  ...props\n}: MenuItemFramedIconProps<RC>) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const allSx = merge(\n    baseFramedIconStyles,\n    getFramedContainerSx({ theme, size: startingSize }),\n    getResponsiveFramedContainerSx({ theme, size }),\n    {\n      borderRadius: circularFrame ? '50%' : 'base.borderRadius.x2',\n    },\n    sx,\n  );\n  return (\n    <Box {...props} rc={rc} testId={testId} sx={allSx}>\n      <Icon\n        icon={icon}\n        variant={variant}\n        sx={{\n          width: 'base.icon.size.300',\n          fill: 'base.color.text.primary',\n        }}\n      />\n    </Box>\n  );\n}\n\nMenuItemFramedIcon.displayName = 'MenuItem.FramedIcon';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MenuItemProps } from '../../types/clickable';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { FramedImage, FramedImageProps } from '../FramedImage';\nimport { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';\nimport {\n  baseFramedImageStyles,\n  getFramedContainerSx,\n  getResponsiveFramedContainerSx,\n} from './styles';\n\nexport type MenuItemFramedImageProps<\n  RC extends ReactElement | undefined = undefined,\n> = FramedImageProps<RC> & Pick<MenuItemProps, 'size'>;\n\nexport function MenuItemFramedImage<\n  RC extends ReactElement | undefined = undefined,\n>({\n  sx = {},\n  rc = <span />,\n  size = DEFAULT_MENU_ITEM_SIZE,\n  ...props\n}: MenuItemFramedImageProps<RC>) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const allStyles = merge(\n    baseFramedImageStyles,\n    getFramedContainerSx({ theme, size: startingSize }),\n    getResponsiveFramedContainerSx({ theme, size }),\n    sx,\n  );\n  return <FramedImage {...props} rc={rc} sx={allStyles} />;\n}\n\nMenuItemFramedImage.displayName = 'MenuItem.FramedImage';\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MenuItemProps } from '../../types/clickable';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box, BoxProps } from '../Box';\nimport { Logo, LogoProps } from '../Logo';\nimport { DEFAULT_MENU_ITEM_SIZE, MENU_ITEM_SIZES } from './shared';\nimport {\n  baseFramedIconStyles,\n  getFramedContainerSx,\n  getResponsiveFramedContainerSx,\n} from './styles';\n\nexport type MenuItemFramedLogoProps = BoxProps &\n  Pick<LogoProps, 'logo'> &\n  Pick<MenuItemProps, 'size'> & { circularFrame?: boolean };\n\nexport function MenuItemFramedLogo({\n  logo,\n  sx = {},\n  testId,\n  circularFrame = false,\n  size = DEFAULT_MENU_ITEM_SIZE,\n  rc = <span />,\n  ...props\n}: MenuItemFramedLogoProps) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const allSx = merge(\n    baseFramedIconStyles,\n    getFramedContainerSx({ theme, size: startingSize }),\n    getResponsiveFramedContainerSx({ theme, size }),\n    {\n      overflow: 'hidden',\n      borderRadius: circularFrame ? '50%' : 'base.borderRadius.x2',\n      flexShrink: 0,\n    },\n    sx,\n  );\n  return (\n    <Box {...props} testId={testId} sx={allSx} rc={rc}>\n      <Logo\n        logo={logo}\n        sx={merge(\n          {\n            width: 'base.icon.size.300',\n          },\n          sx,\n        )}\n      />\n    </Box>\n  );\n}\n\nMenuItemFramedLogo.displayName = 'MenuItem.FramedLogo';\n","import merge from 'ts-deepmerge';\n\nimport { Icon, IconProps } from '../Icon';\n\nexport type MenuItemIconProps = IconProps;\n\nexport function MenuItemIcon({ icon, sx = {}, ...props }: MenuItemIconProps) {\n  return (\n    <Icon\n      {...props}\n      icon={icon}\n      sx={merge(\n        {\n          width: 'base.icon.size.300',\n          fill: 'base.color.text.primary',\n          flexShrink: 0,\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nMenuItemIcon.displayName = 'MenuItem.Icon';\n","import merge from 'ts-deepmerge';\n\nimport { Icon, IconProps } from '../Icon';\n\nexport type MenuItemIntentIconProps = Partial<IconProps>;\n\nexport function MenuItemIntentIcon({\n  icon = 'ChevronForward',\n  sx = {},\n  ...props\n}: MenuItemIntentIconProps) {\n  return (\n    <Icon\n      {...props}\n      icon={icon}\n      sx={merge(\n        {\n          width: 'base.icon.size.200',\n          fill: 'base.color.text.secondary',\n          flexShrink: 0,\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nMenuItemIntentIcon.displayName = 'MenuItem.IntentIcon';\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Box, BoxProps } from '../Box';\nimport {\n  DEFAULT_MENU_ITEM_SIZE,\n  MENU_ITEM_SIZES,\n  MenuItemSize,\n} from './shared';\nimport { renderLabelStyles, renderResponsiveLabelStyles } from './styles';\n\nexport type MenuItemLabelProps = BoxProps & {\n  size?: MakeResponsive<MenuItemSize>;\n};\n\nexport function MenuItemLabel({\n  size = DEFAULT_MENU_ITEM_SIZE,\n  children,\n  testId = 'MenuItemLabel',\n  sx = {},\n  rc = <span />,\n  ...props\n}: MenuItemLabelProps) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const labelStyles = merge(\n    {\n      ...lineClamp(2),\n      textAlign: 'left',\n      color: 'base.color.text.primary',\n    },\n    renderLabelStyles({ theme: themeProps, size: startingSize }),\n    renderResponsiveLabelStyles({\n      theme: themeProps,\n      size,\n    }),\n    sx,\n  );\n  return (\n    <Box {...props} sx={labelStyles} rc={rc} testId={testId}>\n      {children}\n    </Box>\n  );\n}\n\nMenuItemLabel.displayName = 'MenuItem.Label';\n","import { DistributiveOmit } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { OverflowDrawerMenuProps } from '../OverflowMenus';\nimport { OverflowDrawerMenu } from '../OverflowMenus/OverflowDrawerMenu';\n\nexport type MenuItemOverflowDrawerMenuProps = DistributiveOmit<\n  OverflowDrawerMenuProps,\n  'icon' | 'iconVariant'\n>;\n\nexport function MenuItemOverflowDrawerMenu({\n  children,\n  sx = {},\n  ...props\n}: MenuItemOverflowDrawerMenuProps) {\n  return (\n    <OverflowDrawerMenu\n      {...props}\n      size=\"small\"\n      sx={merge({ flexShrink: 0 }, sx)}\n    >\n      {children}\n    </OverflowDrawerMenu>\n  );\n}\n\nMenuItemOverflowDrawerMenu.displayName = 'MenuItem.OverflowDrawerMenu';\n","import { Children, isValidElement, useState } from 'react';\n\nimport {\n  DEFAULT_DRAWER_POSITION,\n  DEFAULT_DRAWER_SIZE,\n  WithDrawerDisriminatedProps,\n} from '../../types/overlays';\nimport { ButtCon } from '../Clickable';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport { Drawer } from '../Drawer';\nimport { SmartClone } from '../SmartClone';\nimport { VerticalMenu } from '../VerticalMenu';\nimport { OverflowDrawerMenuProps } from './types';\n\nexport function OverflowDrawerMenu({\n  children,\n  domRef,\n  testId,\n  icon = 'MoreVertical',\n  size = DEFAULT_BUTTON_SIZE,\n  variant = 'tertiary',\n  onClick,\n  drawerSize = DEFAULT_DRAWER_SIZE,\n  showHeaderBar = true,\n  headerBarTitle,\n  showBgOverlay,\n  outsideClicksClose = true,\n  drawerPosition = DEFAULT_DRAWER_POSITION,\n  ...buttConProps\n}: OverflowDrawerMenuProps) {\n  const [visible, setVisible] = useState(false);\n  const typedProps = {\n    headerBarTitle,\n    showHeaderBar,\n  } as WithDrawerDisriminatedProps;\n  return (\n    <Drawer\n      {...typedProps}\n      visible={visible}\n      onCloseDrawer={() => setVisible(false)}\n      outsideClicksClose={outsideClicksClose}\n      size={drawerSize}\n      showBgOverlay={showBgOverlay}\n      domRef={domRef}\n      drawerPosition={drawerPosition}\n      testId={testId}\n    >\n      <Drawer.Target>\n        <ButtCon\n          {...buttConProps}\n          testId={testId}\n          icon={icon}\n          size={size}\n          variant={variant}\n          onClick={event => {\n            event.preventDefault();\n            event.stopPropagation();\n            setVisible(!visible);\n            onClick?.(event);\n          }}\n        />\n      </Drawer.Target>\n      <Drawer.Content\n        // @NOTE: weird emotion/react css issue here, padding-bottom is\n        // over-written by a `padding` definition inside of the\n        // DrawerOverlay component, despite the object order being correct\n        sx={{ padding: 'base.spacing.x4', paddingBottom: '0px' }}\n      >\n        <VerticalMenu\n          testId={`${testId}__overflowDrawerMenu`}\n          sx={{ maxHeight: '100%' }}\n        >\n          {Children.map(children, child => {\n            const shouldCloneWithOnClick =\n              isValidElement(child) && Boolean(child.props.onClick);\n            return shouldCloneWithOnClick ? (\n              <SmartClone\n                onClick={event => {\n                  event.preventDefault();\n                  event.stopPropagation();\n                  setVisible(false);\n                }}\n              >\n                {child}\n              </SmartClone>\n            ) : (\n              child\n            );\n          })}\n        </VerticalMenu>\n      </Drawer.Content>\n    </Drawer>\n  );\n}\n\nOverflowDrawerMenu.displayName = 'OverflowDrawerMenu';\n","import { cloneElement, useCallback, useEffect, useId, useMemo } from 'react';\n\nimport {\n  useBrowserEffect,\n  useBrowserLayoutEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n} from '../../hooks';\nimport {\n  CLOSE_DRAWER,\n  OPEN_DRAWER,\n  UPDATE_DRAWER_PROPS,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport {\n  DEFAULT_DRAWER_POSITION,\n  DEFAULT_DRAWER_SIZE,\n  DrawerComponentProps,\n} from '../../types/overlays';\nimport { SmartClone } from '../SmartClone';\nimport { DrawerContent } from './DrawerContent';\nimport { DrawerTarget } from './DrawerTarget';\n\nexport function Drawer({\n  visible,\n  id: idProp,\n  children,\n  size = DEFAULT_DRAWER_SIZE,\n  domRef = { current: null },\n  showHeaderBar = true,\n  onCloseDrawer,\n  showBgOverlay = true,\n  headerBarTitle,\n  outsideClicksClose = true,\n  drawerPosition = DEFAULT_DRAWER_POSITION,\n  testId = 'Drawer',\n}: DrawerComponentProps) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const target = useGetSubcomponentChild(children, DrawerTarget);\n  const content = useGetSubcomponentChild(children, DrawerContent);\n\n  const { state: drawerList, dispatchAction } = useOverlaysStore(\n    state => state.drawerList,\n  );\n\n  const isControlled = useMemo(() => typeof visible !== 'undefined', [visible]);\n\n  const drawerProps = useMemo(\n    () => ({\n      id,\n      content: content ? cloneElement(content, { id }) : null,\n      size,\n      targetRef: localDomRef,\n      headerBarTitle,\n      showHeaderBar,\n      showBgOverlay,\n      isControlled,\n      onCloseDrawer,\n      outsideClicksClose,\n      drawerPosition,\n      testId,\n    }),\n    [\n      content,\n      drawerPosition,\n      headerBarTitle,\n      id,\n      isControlled,\n      localDomRef,\n      onCloseDrawer,\n      outsideClicksClose,\n      showBgOverlay,\n      showHeaderBar,\n      size,\n      testId,\n    ],\n  );\n\n  // @NOTE: this useEffect allows Drawer props to stay up to date,\n  // as the application re-renders and things potentially change\n  useEffect(() => {\n    dispatchAction({\n      type: UPDATE_DRAWER_PROPS,\n      payload: drawerProps,\n    });\n  }, [dispatchAction, drawerProps]);\n\n  const closeDrawer = useCallback(() => {\n    dispatchAction({\n      type: CLOSE_DRAWER,\n      payload: { id },\n    });\n    onCloseDrawer?.();\n  }, [dispatchAction, onCloseDrawer, id]);\n\n  const showDrawer = useCallback(() => {\n    dispatchAction({\n      type: OPEN_DRAWER,\n      payload: drawerProps,\n    });\n  }, [dispatchAction, drawerProps]);\n\n  useBrowserLayoutEffect(() => {\n    if (visible) {\n      showDrawer();\n    } else if (drawerList.find(bottomSheet => bottomSheet.id === id)) {\n      closeDrawer();\n    }\n    // @NOTE: we want to trigger these changes ONLY when the visible prop changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  // @NOTE: when the Drawer is unmounted, call to remove it from the modalList\n  useBrowserEffect(() => {\n    return () => closeDrawer();\n  }, []);\n\n  const onClickProps = useMemo(() => {\n    return !isControlled\n      ? {\n          onClick: () => {\n            if (drawerList.find(bottomSheet => bottomSheet.id === id)) {\n              closeDrawer();\n            } else {\n              showDrawer();\n            }\n          },\n        }\n      : {};\n  }, [drawerList, isControlled, id, closeDrawer, showDrawer]);\n\n  return target ? (\n    <SmartClone {...onClickProps} id={id} domRef={localDomRef}>\n      {target}\n    </SmartClone>\n  ) : null;\n}\n\nDrawer.displayName = 'Drawer';\nDrawer.Content = DrawerContent;\nDrawer.Target = DrawerTarget;\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { ModalContent, ModalContentProps } from '../Modal/ModalContent';\n\nexport type DrawerContentProps<\n  RC extends ReactElement | undefined = undefined,\n> = ModalContentProps<RC> & {};\n\nexport function DrawerContent<RC extends ReactElement | undefined = undefined>({\n  className,\n  sx = {},\n  ...props\n}: DrawerContentProps<RC>) {\n  return (\n    <ModalContent\n      className={`${className ?? ''} DrawerContent`}\n      sx={merge({ minh: 'unset' }, sx)}\n      {...props}\n    />\n  );\n}\n\nDrawerContent.displayName = 'Drawer.Content';\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement, ReactNode, useCallback } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  CLOSE_MODAL,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type ModalContentProps<RC extends ReactElement | undefined = undefined> =\n  DistributiveOmit<BoxWithRCAndDomProps<RC>, 'children'> & {\n    children: ((props: { closeModal: () => void }) => ReactNode) | ReactNode;\n    id?: string;\n  };\n\nexport function ModalContent<RC extends ReactElement | undefined = undefined>({\n  children,\n  id = '',\n  sx = {},\n  className,\n  ...props\n}: ModalContentProps<RC>) {\n  const { dispatchAction } = useOverlaysStore(state => state.modalList);\n\n  const closeModal = useCallback(\n    () =>\n      dispatchAction({\n        type: CLOSE_MODAL,\n        payload: { id },\n      }),\n    [dispatchAction, id],\n  );\n\n  const renderedChildren =\n    typeof children === 'function'\n      ? children({\n          closeModal,\n        })\n      : children;\n\n  return (\n    <Box\n      {...props}\n      sx={merge(\n        {\n          maxw: '100svw',\n          maxh: '100svh',\n          minh: '100%',\n          overflow: 'auto',\n        },\n        sx,\n      )}\n      className={`${className ?? ''} ModalContent`}\n    >\n      {renderedChildren}\n    </Box>\n  );\n}\n\nModalContent.displayName = 'Modal.Content';\n","import { ReactNode } from 'react';\n\nimport { StandardComponentWithProps } from '../../types/shared';\nimport { SmartClone } from '../SmartClone';\n\nexport type ModalTargetProps = StandardComponentWithProps<\n  HTMLButtonElement,\n  {\n    children: ReactNode;\n    id?: string;\n  }\n>;\n\nexport function ModalTarget({ children, ...props }: ModalTargetProps) {\n  return <SmartClone {...props}>{children}</SmartClone>;\n}\n\nModalTarget.displayName = 'Modal.Target';\n","import { ModalTarget, ModalTargetProps } from '../Modal/ModalTarget';\n\nexport type DrawerTargetProps = ModalTargetProps & {};\n\nexport function DrawerTarget({ ...props }: DrawerTargetProps) {\n  return <ModalTarget {...props} />;\n}\n\nDrawerTarget.displayName = 'Drawer.Target';\n","import { DistributiveOmit } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { OverflowPopoverMenuProps } from '../OverflowMenus';\nimport { OverflowPopoverMenu } from '../OverflowMenus/OverflowPopoverMenu';\n\nexport type MenuItemOverflowPopoverMenuProps = DistributiveOmit<\n  OverflowPopoverMenuProps,\n  'icon' | 'iconVariant'\n>;\n\nexport function MenuItemOverflowPopoverMenu({\n  children,\n  sx = {},\n  ...props\n}: MenuItemOverflowPopoverMenuProps) {\n  return (\n    <OverflowPopoverMenu\n      {...props}\n      size=\"small\"\n      sx={merge({ flexShrink: 0 }, sx)}\n    >\n      {children}\n    </OverflowPopoverMenu>\n  );\n}\n\nMenuItemOverflowPopoverMenu.displayName = 'MenuItem.OverflowPopoverMenu';\n","import merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { useWindowSizeStore } from '../../providers/BiomeWindowSize';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { getBodyTextStyles } from '../../utils/textStyleHelpers';\nimport { Body, Heading, PriceDisplay, PriceDisplayProps } from '../Text';\nimport {\n  DEFAULT_MENU_ITEM_SIZE,\n  isHeading,\n  isSizeAnArray,\n  MENU_ITEM_SIZES,\n  MenuItemSize,\n} from './shared';\n\nexport type MenuItemPriceDisplayProps = Omit<\n  PriceDisplayProps<undefined, undefined>,\n  'size'\n> & {\n  size?: MakeResponsive<MenuItemSize>;\n};\n\ntype PickedResponsiveOptionProps = Omit<\n  PriceDisplayProps<undefined, undefined>,\n  'size' | 'use' | 'weight' | 'as'\n> & {\n  size: MenuItemSize;\n};\n\nfunction PickedResponsiveOption({\n  price,\n  size,\n  sx = {},\n  ...props\n}: PickedResponsiveOptionProps) {\n  const themeProps = useTheme();\n  const typedProps = { ...props };\n  const isMedium = isHeading(size, typedProps);\n  return isMedium ? (\n    <PriceDisplay\n      {...typedProps}\n      use={<Heading size=\"xSmall\" weight=\"bold\" />}\n      rc={<span />}\n      price={price}\n      sx={sx}\n    />\n  ) : (\n    <PriceDisplay\n      {...typedProps}\n      use={\n        <Body size={size === 'small' ? 'medium' : 'small'} weight=\"regular\" />\n      }\n      rc={<span />}\n      price={price}\n      sx={merge(\n        {\n          ...(size === 'xSmall'\n            ? {\n                '.fiatPrice': {\n                  ...getBodyTextStyles({\n                    themeProps,\n                    size: 'xxSmall',\n                    weight: 'regular',\n                    mono: false,\n                  }),\n                },\n              }\n            : {}),\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nexport function MenuItemPriceDisplay({\n  sx = {},\n  size = DEFAULT_MENU_ITEM_SIZE,\n  price,\n  ...props\n}: MenuItemPriceDisplayProps) {\n  const { state: width } = useWindowSizeStore(state => state.width);\n  const {\n    base: { breakpointAsArray },\n  } = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n  const mergedSx = merge({ whiteSpace: 'nowrap' }, sx);\n  const defaultSize = (\n    <PickedResponsiveOption\n      {...props}\n      size={startingSize}\n      price={price}\n      sx={mergedSx}\n    />\n  );\n\n  if (width === null) return defaultSize;\n\n  if (isSizeAnArray(size)) {\n    const actualResponsiveSizes = [...size];\n    actualResponsiveSizes.shift();\n    return actualResponsiveSizes.reduce((accum, curr, index) => {\n      let newAccum = accum;\n      if (curr !== null && width >= breakpointAsArray[index]) {\n        newAccum = (\n          <PickedResponsiveOption\n            {...props}\n            size={curr}\n            price={price}\n            sx={mergedSx}\n          />\n        );\n      }\n      return newAccum;\n    }, defaultSize);\n  }\n\n  return size === 'medium' || size === 'small' || size === 'xSmall' ? (\n    <PickedResponsiveOption\n      {...props}\n      price={price}\n      size={size}\n      sx={mergedSx}\n    />\n  ) : (\n    defaultSize\n  );\n}\n\nMenuItemPriceDisplay.displayName = 'MenuItem.PriceDisplay';\n","import { useTheme } from '@emotion/react';\nimport { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useWindowSizeStore } from '../../providers';\nimport { MenuItemShimmerProps } from '../../types/clickable';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { ShimmerBox } from '../Shimmer';\nimport {\n  DEFAULT_MENU_ITEM_SIZE,\n  isSizeAnArray,\n  MENU_ITEM_SIZES,\n  MenuItemSize,\n} from './shared';\nimport {\n  baseShimmerOuterSx,\n  baseStyles,\n  renderResponsiveOuterStyles,\n  renderShimmerOuterStyles,\n  shimmerLeftMaskSx,\n  shimmerRightMaskSx,\n} from './styles';\n\nexport const svgMasks = {\n  xSmall: {\n    left: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 196 50\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M24 41C32.8366 41 40 33.8366 40 25C40 16.1634 32.8366 9 24 9C15.1634 9 8 16.1634 8 25C8 33.8366 15.1634 41 24 41ZM58 19C56.8954 19 56 19.8954 56 21V29C56 30.1046 56.8954 31 58 31H174C175.105 31 176 30.1046 176 29V21C176 19.8954 175.105 19 174 19H58Z\" /></svg>')`,\n    right: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 50 50\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M38 25C38 31.6274 32.6274 37 26 37C19.3726 37 14 31.6274 14 25C14 18.3726 19.3726 13 26 13C32.6274 13 38 18.3726 38 25Z\" /></svg>')`,\n  },\n  small: {\n    left: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 196 72\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M36 60C49.2548 60 60 49.2548 60 36C60 22.7452 49.2548 12 36 12C22.7452 12 12 22.7452 12 36C12 49.2548 22.7452 60 36 60ZM76 24C76 21.7909 77.7909 20 80 20H192C194.209 20 196 21.7909 196 24V32C196 34.2091 194.209 36 192 36H80C77.7909 36 76 34.2091 76 32V24ZM75 45C75 42.7909 76.7909 41 79 41H135C137.209 41 139 42.7909 139 45V49C139 51.2091 137.209 53 135 53H79C76.7909 53 75 51.2091 75 49V45Z\" /></svg>')`,\n    right: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 126 72\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M98 52C106.837 52 114 44.8366 114 36C114 27.1634 106.837 20 98 20C89.1634 20 82 27.1634 82 36C82 44.8366 89.1634 52 98 52ZM30 30C27.7909 30 26 31.7909 26 34V38C26 40.2091 27.7909 42 30 42H70C72.2091 42 74 40.2091 74 38V34C74 31.7909 72.2091 30 70 30H30Z\" /></svg>')`,\n  },\n  medium: {\n    left: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 196 96\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M36 72C49.2548 72 60 61.2548 60 48C60 34.7452 49.2548 24 36 24C22.7452 24 12 34.7452 12 48C12 61.2548 22.7452 72 36 72ZM76 36C76 33.7909 77.7909 32 80 32H192C194.209 32 196 33.7909 196 36V44C196 46.2091 194.209 48 192 48H80C77.7909 48 76 46.2091 76 44V36ZM76 58C76 55.7909 77.7909 54 80 54H136C138.209 54 140 55.7909 140 58V62C140 64.2091 138.209 66 136 66H80C77.7909 66 76 64.2091 76 62V58Z\" /></svg>')`,\n    right: `url('data:image/svg+xml;utf8, <svg viewBox=\"0 0 126 96\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><path d=\"M98 64C106.837 64 114 56.8366 114 48C114 39.1634 106.837 32 98 32C89.1634 32 82 39.1634 82 48C82 56.8366 89.1634 64 98 64ZM30 42C27.7909 42 26 43.7909 26 46V50C26 52.2091 27.7909 54 30 54H70C72.2091 54 74 52.2091 74 50V46C74 43.7909 72.2091 42 70 42H30Z\" /></svg>')`,\n  },\n};\n\nexport function MenuItemShimmer<\n  RC extends ReactElement | undefined = undefined,\n>({\n  size = DEFAULT_MENU_ITEM_SIZE,\n  emphasized,\n  sx = {},\n  testId,\n  ...props\n}: MenuItemShimmerProps<RC>) {\n  const { state: width } = useWindowSizeStore(state => state.width);\n  const theme = useTheme();\n  const { breakpointAsArray } = theme.base;\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_MENU_ITEM_SIZE,\n    MENU_ITEM_SIZES,\n  );\n\n  const outerStyles = merge(\n    baseShimmerOuterSx,\n    renderShimmerOuterStyles({ size: startingSize }),\n    renderResponsiveOuterStyles({ size, theme }),\n    {\n      bgc: emphasized ? baseStyles['&.emphasized'].bgc : 'transparent',\n    },\n    sx,\n  );\n\n  const { left: leftMask, right: rightMask } = useMemo(() => {\n    const defaultMasks = svgMasks.medium;\n    if (width === null) return defaultMasks;\n\n    if (isSizeAnArray(size)) {\n      const actualResponsiveSizes = [...size];\n      actualResponsiveSizes.shift();\n      return actualResponsiveSizes.reduce((accum, curr, index) => {\n        let newAccum = accum;\n        if (curr !== null && width >= breakpointAsArray[index]) {\n          newAccum = svgMasks[curr satisfies MenuItemSize];\n        }\n        return newAccum;\n      }, defaultMasks);\n    }\n    if (size === 'medium' || size === 'small' || size === 'xSmall') {\n      return svgMasks[size];\n    }\n\n    return defaultMasks;\n  }, [breakpointAsArray, size, width]);\n\n  return (\n    <Box {...props} testId={testId} sx={outerStyles}>\n      <Box\n        rc={<span />}\n        testId={`${testId}__leftMask`}\n        sx={{ ...shimmerLeftMaskSx, WebkitMaskImage: leftMask }}\n      >\n        <ShimmerBox rc={<span />} testId={`${testId}__leftMask__shimmer`} />\n      </Box>\n      <Box\n        rc={<span />}\n        testId={`${testId}__rightMask`}\n        sx={{\n          ...shimmerRightMaskSx,\n          WebkitMaskImage: rightMask,\n        }}\n      >\n        <ShimmerBox rc={<span />} testId={`${testId}__rightMask__shimmer`} />\n      </Box>\n    </Box>\n  );\n}\n\nMenuItemShimmer.displayName = 'MenuItemShimmer';\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { StatefulButtCon, StatefulButtConProps } from '../Clickable';\n\ntype MenuItemStatefulButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<StatefulButtConProps<RC>, 'size'>;\n\nexport function MenuItemStatefulButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({ sx = {}, ...props }: MenuItemStatefulButtConProps<RC>) {\n  const { onClick } = 'onClick' in props ? props : { onClick: null };\n  return (\n    <StatefulButtCon\n      {...props}\n      sx={merge({ flexShrink: 0 }, sx)}\n      onClick={ev => {\n        ev.stopPropagation();\n        if (typeof onClick === 'function') {\n          onClick(ev);\n        }\n      }}\n      size=\"small\"\n    />\n  );\n}\n\nMenuItemStatefulButtCon.displayName = 'MenuItem.StatefulButtCon';\n","import { BiomeTheme, MakeResponsive } from '../../types';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport { MenuItemSize } from '../MenuItem/shared';\nimport { baseStyles as menuItemBaseStyles } from '../MenuItem/styles';\n\nexport const containerSx = {\n  transitionProperty: menuItemBaseStyles.transitionProperty,\n  transitionDuration: menuItemBaseStyles.transitionDuration,\n  transitionTimingFunction: menuItemBaseStyles.transitionTimingFunction,\n  width: '100%',\n  cursor: 'pointer',\n\n  // @NOTE: apply incremental amounts of left\n  // indentation to indicate nested heriarchy\n  '& .VerticalMenu .MenuItem': {\n    paddingLeft: 'base.spacing.x9', // x3 + x6\n  },\n\n  '& .VerticalMenu .ExpandableMenuItem .VerticalMenu .MenuItem': {\n    paddingLeft: 'base.spacing.x15', // x3 + x6 + x6\n  },\n\n  '& .VerticalMenu .ExpandableMenuItem .VerticalMenu .ExpandableMenuItem .VerticalMenu .MenuItem':\n    {\n      paddingLeft: 'base.spacing.x21', // x3 + x6 + x6 + x6\n    },\n\n  '& .VerticalMenu .ExpandableMenuItem .VerticalMenu .ExpandableMenuItem .VerticalMenu .ExpandableMenuItem .VerticalMenu .MenuItem':\n    {\n      paddingLeft: 'base.spacing.x27', // x3 + x6 + x6 + x6 + x6\n    },\n};\n\nexport const rightChevronSx = {\n  position: 'absolute',\n  right: 'base.spacing.x3',\n  w: '18px',\n  stroke: 'base.color.text.secondary',\n  strokeWidth: 2.3,\n  fill: 'transparent',\n};\n\nexport const nestedVerticalMenuSx = {\n  overflow: 'visible',\n  p: '0',\n  bg: 'transparent',\n  maxh: 'unset',\n  boxShadow: 'unset',\n  brad: 'unset',\n};\n\nexport const renderSizeBasedContainerStyles = ({\n  size,\n}: {\n  size: MakeResponsive<MenuItemSize>;\n  theme: BiomeTheme;\n}) => {\n  switch (size) {\n    case 'xSmall':\n      return {\n        borderRadius: 'base.borderRadius.x4',\n      };\n\n    case 'small':\n    case 'medium':\n    default:\n      return {\n        borderRadius: 'base.borderRadius.x6',\n      };\n  }\n};\n\nexport const renderContainerResponsiveStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<MenuItemSize>;\n  theme: BiomeTheme;\n}) =>\n  getResponsiveSx({\n    size,\n    theme,\n    renderSxAtSize: renderSizeBasedContainerStyles,\n  });\n","import { ClassNames } from '@emotion/react';\nimport {\n  Children,\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  Ref,\n  useId,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useForwardLocalDomRef, useResizeObserver } from '../../hooks';\nimport {\n  InputTextAlign,\n  StandardInputComponentWithProps,\n} from '../../types/input';\nimport { MakeResponsive } from '../../types/shared';\nimport { isChildSubcomponent } from '../../utils';\nimport { Box } from '../Box';\nimport { Checkbox } from '../Checkbox';\nimport { MenuItem } from '../MenuItem';\nimport { MenuItemCaption } from '../MenuItem/MenuItemCaption';\nimport { MenuItemFramedIcon } from '../MenuItem/MenuItemFramedIcon';\nimport { MenuItemFramedImage } from '../MenuItem/MenuItemFramedImage';\nimport { MenuItemFramedLogo } from '../MenuItem/MenuItemFramedLogo';\nimport { MenuItemIcon } from '../MenuItem/MenuItemIcon';\nimport { MenuItemLabel } from '../MenuItem/MenuItemLabel';\nimport { MenuItemSize } from '../MenuItem/shared';\nimport { baseStyles as baseMenuItemStyles } from '../MenuItem/styles';\nimport { Radio } from '../Radio/Radio';\nimport { Toggle } from '../Toggle';\n\nexport type InputBarProps = Omit<\n  StandardInputComponentWithProps<\n    'input',\n    {\n      inputRef?: Ref<HTMLInputElement>;\n      emphasized?: boolean;\n      children: ReactNode;\n      inputType?: 'checkbox' | 'radio' | 'toggle';\n      textAlign?: InputTextAlign;\n    }\n  >,\n  'size' | 'type'\n> & { size?: MakeResponsive<MenuItemSize> };\n\nexport function InputBar<RC extends ReactElement | undefined = undefined>({\n  children,\n  checked,\n  size,\n  emphasized,\n  disabled,\n  id: idProp,\n  inputType = 'toggle',\n  domRef = { current: null },\n  inputRef = { current: null },\n  onChange,\n  testId,\n  defaultChecked,\n  sx = {},\n  textAlign,\n  rc,\n  ...inputProps\n}: RC extends undefined ? InputBarProps : InputBarProps & { rc: RC }) {\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const localRef = useForwardLocalDomRef(domRef);\n  const localInputRef = useForwardLocalDomRef(inputRef);\n  const { width, height } = useResizeObserver(localRef);\n\n  const inputStyles = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n\n    '& .actualInput': {\n      width: `${width}px`,\n      height: `${height}px`,\n      zIndex: 1,\n    },\n\n    '& .toggleContainer, & .checkContainer, & .radioContainer': {\n      position: 'absolute',\n      right: 'base.spacing.x4',\n      top: '50%',\n      translate: '0 -50%',\n    },\n  };\n\n  const allInputProps = {\n    ...inputProps,\n    id,\n    testId: `${testId}__biomeInput`,\n    onChange,\n    defaultChecked,\n    checked,\n    disabled,\n    sx: inputStyles,\n    inputRef: localInputRef,\n  };\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <Box\n          rc={rc}\n          sx={merge(\n            {\n              position: 'relative',\n              d: 'flex',\n              width: '100%',\n\n              '&:has(.actualInput:checked) .menuItem': {\n                ...baseMenuItemStyles['&.selected'],\n              },\n\n              '&:not(.disabled):has(.actualInput:checked):hover .menuItem': {\n                ...baseMenuItemStyles['&.selected:not(article).hover'],\n              },\n\n              '&:not(.disabled):hover .menuItem': {\n                ...baseMenuItemStyles['&:not(article).hover'],\n              },\n            },\n            sx,\n          )}\n          testId={testId}\n          className={cx({ disabled })}\n          domRef={localRef}\n        >\n          {inputType === 'toggle' && <Toggle {...allInputProps} />}\n          {inputType === 'checkbox' && <Checkbox {...allInputProps} />}\n          {inputType === 'radio' && <Radio {...allInputProps} />}\n\n          <MenuItem\n            className=\"menuItem\"\n            size={size}\n            emphasized={emphasized}\n            textAlign={textAlign}\n            testId={`${testId}__menuItem`}\n            sx={{\n              pr:\n                inputType === 'toggle'\n                  ? 'base.spacing.x15'\n                  : inputType === 'checkbox'\n                  ? 'base.spacing.x9'\n                  : 'base.spacing.x9',\n            }}\n          >\n            {Children.map(children, child => {\n              if (isChildSubcomponent(child, MenuItemLabel)) {\n                return cloneElement(child, {\n                  htmlFor: id,\n                  rc: <label />,\n                });\n              }\n              return child;\n            })}\n          </MenuItem>\n        </Box>\n      )}\n    </ClassNames>\n  );\n}\n\nInputBar.displayName = 'InputBar';\n\nInputBar.Icon = MenuItemIcon;\nInputBar.FramedIcon = MenuItemFramedIcon;\nInputBar.FramedImage = MenuItemFramedImage;\nInputBar.FramedLogo = MenuItemFramedLogo;\nInputBar.Label = MenuItemLabel;\nInputBar.Caption = MenuItemCaption;\n","import { ReactElement, Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useForwardLocalDomRef, useTheme } from '../../hooks';\nimport { useHover } from '../../hooks/useHover';\nimport {\n  InputTextAlign,\n  InputValidationStatus,\n  StandardInputComponentWithProps,\n} from '../../types/input';\nimport { inputResetStyles } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport {\n  checkContainerSx,\n  containerStyles,\n  inputCssStyles,\n  tickSx,\n} from './styles';\n\nexport type CheckboxProps = StandardInputComponentWithProps<\n  'input',\n  {\n    validationStatus?: InputValidationStatus;\n    textAlign?: InputTextAlign;\n    inputRef?: Ref<HTMLInputElement>;\n  }\n>;\n\nexport function Checkbox<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  testId = 'Checkbox',\n  name,\n  id = name,\n  children,\n  domRef = { current: null },\n  className,\n  onChange,\n  checked,\n  value,\n  disabled,\n  validationStatus,\n  inputRef,\n  rc,\n  textAlign,\n  ...inputHtmlAttrs\n}: RC extends undefined ? CheckboxProps : CheckboxProps & { rc: RC }) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const isHovering = useHover(localDomRef);\n  const resetStyles = inputResetStyles(disabled);\n  const theme = useTheme();\n\n  return (\n    <Box\n      rc={rc}\n      domRef={localDomRef}\n      testId={testId}\n      className={className}\n      sx={merge(containerStyles, sx)}\n    >\n      <input\n        {...inputHtmlAttrs}\n        type=\"checkbox\"\n        data-testid={`${testId}__input`}\n        ref={inputRef}\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        css={merge(resetStyles, inputCssStyles(theme))}\n        className=\"actualInput\"\n      />\n      <Box\n        className=\"checkContainer\"\n        sx={checkContainerSx}\n        testId={`${testId}__checkboxContainer`}\n      >\n        <Icon\n          icon=\"Tick\"\n          className=\"checkIcon\"\n          variant={isHovering && !disabled ? 'regular' : 'bold'}\n          sx={tickSx}\n          testId={`${testId}__checkIcon`}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nCheckbox.displayName = 'Checkbox';\n","import { BiomeTheme } from '../../types/theme';\n\nexport const containerStyles = {\n  width: 'base.spacing.x5',\n  height: 'base.spacing.x5',\n  position: 'relative',\n};\n\nexport const inputCssStyles = (theme: BiomeTheme) => ({\n  '&:disabled + .checkContainer': {\n    boxShadow: 'none',\n  },\n\n  '&:checked + .checkContainer': {\n    borderWidth: theme.base.border.size[200],\n    borderColor: theme.base.color.text.primary,\n  },\n\n  '&:hover:not(:disabled) + .checkContainer': {\n    borderWidth: theme.base.border.size[200],\n  },\n\n  '&:checked:hover:not(:disabled) + .checkContainer': {\n    borderColor: theme.base.color.text.secondary,\n    borderWidth: theme.base.border.size[100],\n  },\n\n  '&:checked + .checkContainer > .checkIcon': {\n    opacity: '1',\n  },\n});\n\nexport const checkContainerSx = {\n  borderStyle: 'solid',\n  borderWidth: 'base.border.size[100]',\n  borderColor: 'base.color.text.secondary',\n  borderRadius: 'base.borderRadius.x4',\n  boxShadow: 'base.shadow[100]',\n  width: 'base.spacing.x5',\n  height: 'base.spacing.x5',\n  d: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nexport const tickSx = {\n  fill: 'base.color.text.primary',\n  pointerEvents: 'none',\n  opacity: '0',\n};\n","import { ReactElement, Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useForwardLocalDomRef, useTheme } from '../../hooks';\nimport {\n  InputTextAlign,\n  InputValidationStatus,\n  StandardInputComponentWithProps,\n} from '../../types/input';\nimport { inputResetStyles } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport {\n  checkSx,\n  containerSx,\n  inputCssStyles,\n  radioContainerSx,\n} from './styles';\n\nexport type RadioProps = StandardInputComponentWithProps<\n  'input',\n  {\n    validationStatus?: InputValidationStatus;\n    textAlign?: InputTextAlign;\n    inputRef?: Ref<HTMLInputElement>;\n  }\n>;\n\nexport function Radio<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  testId = 'Radio',\n  name,\n  id = name,\n  children,\n  domRef = { current: null },\n  className,\n  onChange,\n  checked,\n  value,\n  disabled,\n  validationStatus,\n  textAlign,\n  inputRef,\n  rc,\n  ...inputHtmlAttrs\n}: RC extends undefined ? RadioProps : RadioProps & { rc: RC }) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const resetStyles = inputResetStyles(disabled);\n  const theme = useTheme();\n\n  return (\n    <Box\n      rc={rc}\n      domRef={localDomRef}\n      testId={testId}\n      className={className}\n      sx={merge(containerSx, sx)}\n    >\n      <input\n        {...inputHtmlAttrs}\n        type=\"radio\"\n        data-testid={`${testId}__input`}\n        id={id}\n        name={name}\n        ref={inputRef}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        css={merge(resetStyles, inputCssStyles(theme))}\n        className=\"actualInput\"\n      />\n      <Box\n        className=\"radioContainer\"\n        sx={radioContainerSx}\n        testId={`${testId}__radioContainer`}\n      >\n        <Box\n          rc={<span />}\n          className=\"checkCircle\"\n          sx={checkSx}\n          testId={`${testId}__checkCircle`}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nRadio.displayName = 'Radio';\n","import { BiomeTheme } from '../../types/theme';\n\nexport const containerSx = {\n  width: 'base.spacing.x5',\n  height: 'base.spacing.x5',\n  d: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n};\n\nexport const inputCssStyles = (theme: BiomeTheme) => ({\n  '&:disabled + .radioContainer': {\n    boxShadow: 'none',\n  },\n\n  '&:checked + .radioContainer': {\n    borderWidth: theme.base.border.size[200],\n    borderColor: theme.base.color.text.primary,\n  },\n\n  '&:checked + .radioContainer > .checkCircle': {\n    opacity: '1',\n  },\n\n  '&:hover:not(:disabled) + .radioContainer': {\n    borderWidth: theme.base.border.size[200],\n  },\n\n  '&:checked:hover:not(:disabled) + .radioContainer': {\n    borderColor: theme.base.color.text.secondary,\n    borderWidth: theme.base.border.size[100],\n  },\n\n  ':checked:not(:disabled):hover + .radioContainer > .checkCircle': {\n    width: '6px',\n    height: '6px',\n  },\n});\n\nexport const radioContainerSx = {\n  borderStyle: 'solid',\n  borderWidth: 'base.border.size[100]',\n  borderColor: 'base.color.text.secondary',\n  borderRadius: 'base.borderRadius.x6',\n  boxShadow: 'base.shadow[100]',\n  width: 'base.spacing.x5',\n  height: 'base.spacing.x5',\n  d: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nexport const checkSx = {\n  position: 'relative',\n  pointerEvents: 'none',\n  width: '10px',\n  height: '10px',\n  borderRadius: '50%',\n  backgroundColor: 'base.color.text.primary',\n  opacity: '0',\n};\n","import { ReactElement, Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useForwardLocalDomRef } from '../../hooks';\nimport { useHover } from '../../hooks/useHover';\nimport {\n  InputTextAlign,\n  InputValidationStatus,\n  StandardInputComponentWithProps,\n} from '../../types/input';\nimport { inputResetStyles } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport {\n  containerSx,\n  handleSx,\n  inputCss,\n  tickSx,\n  toggleContainerSx,\n} from './styles';\n\nexport type ToggleProps = StandardInputComponentWithProps<\n  'input',\n  {\n    validationStatus?: InputValidationStatus;\n    textAlign?: InputTextAlign;\n    inputRef?: Ref<HTMLInputElement>;\n  }\n>;\n\nexport function Toggle<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  testId = 'Toggle',\n  name,\n  id = name,\n  children,\n  domRef = { current: null },\n  className,\n  onChange,\n  checked,\n  value,\n  disabled,\n  textAlign,\n  validationStatus,\n  inputRef,\n  rc,\n  ...inputHtmlAttrs\n}: RC extends undefined ? ToggleProps : ToggleProps & { rc: RC }) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const isHovering = useHover(localDomRef);\n  const resetStyles = inputResetStyles(disabled);\n\n  return (\n    <Box\n      rc={rc}\n      domRef={localDomRef}\n      testId={testId}\n      className={className}\n      sx={merge(containerSx, sx)}\n    >\n      <input\n        {...inputHtmlAttrs}\n        type=\"checkbox\"\n        data-testid={`${testId}__input`}\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        ref={inputRef}\n        css={merge(resetStyles, inputCss)}\n        className=\"actualInput\"\n      />\n\n      <Box\n        className=\"toggleContainer\"\n        sx={toggleContainerSx}\n        testId={`${testId}__toggleContainer`}\n      >\n        <Box className=\"toggleHandle\" rc={<span />} sx={handleSx}>\n          <Icon\n            icon=\"Tick\"\n            variant={isHovering && !disabled ? 'regular' : 'bold'}\n            testId={`${testId}__checkIcon`}\n            sx={tickSx}\n            className=\"toggleHandle__tickIcon\"\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nToggle.displayName = 'Toggle';\n","import { Properties } from 'csstype';\n\nexport const containerSx = {\n  width: 'base.spacing.x12',\n  height: 'base.spacing.x7',\n  position: 'relative',\n  d: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flexStart',\n\n  '&:disabled + .toggleContainer': {\n    boxShadow: 'none',\n  },\n\n  'input:hover:not(:disabled) + .toggleContainer': {\n    boxShadow: 'base.shadow.300',\n    backgroundColor: 'base.color.translucent.emphasis.200',\n  },\n\n  'input:hover:not(:disabled) + .toggleContainer:before': {\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n\n  'input:hover:not(:disabled):not(checked) + .toggleContainer > .toggleHandle':\n    {\n      transform: 'translateX(6px)',\n      boxShadow: 'base.shadow.300',\n    },\n\n  // Checked state styles:\n  'input:checked + .toggleContainer': {\n    background: 'base.color.status.success.bright',\n    boxShadow: 'none',\n  },\n\n  'input:checked + .toggleContainer::before': {\n    borderColor: 'base.color.translucent.standard.1000',\n    borderWidth: 'base.border.size.200',\n  },\n\n  'input:checked:hover:not(:disabled) + .toggleContainer': {\n    background: 'base.color.status.success.bright',\n    boxShadow: 'base.shadow[200]',\n  },\n\n  'input:checked:not(:disabled):hover + .toggleContainer::before': {\n    borderColor: 'base.color.translucent.standard.1000',\n    borderWidth: 'base.border.size.100',\n  },\n\n  'input:checked + .toggleContainer > .toggleHandle': {\n    transform: 'translateX(22px)',\n  },\n\n  'input:checked + .toggleContainer > .toggleHandle > .toggleHandle__tickIcon':\n    {\n      opacity: '1',\n    },\n\n  'input:hover:checked:not(:disabled) + .toggleContainer > .toggleHandle': {\n    transform: 'translateX(20px)',\n  },\n};\n\nexport const toggleContainerSx = {\n  position: 'relative',\n  pointerEvents: 'none',\n  width: 'base.spacing.x12',\n  height: 'base.spacing.x7',\n  borderRadius: 'base.borderRadius.x12',\n  backgroundColor: 'base.color.translucent.emphasis.100',\n  d: 'flex',\n  alignItems: 'center',\n\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%',\n    borderRadius: 'base.borderRadius.x12',\n    borderWidth: 'base.border.size.100',\n    borderStyle: 'solid',\n    borderColor: 'base.color.translucent.standard.500',\n  },\n};\n\nexport const inputCss = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  width: '100%',\n  height: '100%',\n} satisfies Properties;\n\nexport const handleSx = {\n  w: '22px',\n  h: '22px',\n  d: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  borderRadius: '50%',\n  backgroundColor: 'base.color.translucent.standard.1000',\n  boxShadow: 'base.shadow.100',\n  transition: '200ms ease-in-out',\n  transitionProperty: 'transform, box-shadow',\n  pointerEvents: 'none',\n  transform: 'translateX(3px)',\n};\n\nexport const tickSx = {\n  fill: 'base.color.text.inverse.primary',\n  opacity: '0',\n};\n","import { useCallback } from 'react';\n\nimport { MenuItem } from '../MenuItem';\nimport { MenuItemCaption } from '../MenuItem/MenuItemCaption';\nimport { MenuItemFramedImage } from '../MenuItem/MenuItemFramedImage';\nimport { MenuItemIcon } from '../MenuItem/MenuItemIcon';\nimport { MenuItemLabel } from '../MenuItem/MenuItemLabel';\nimport { OptionProps } from './types';\n\nexport function Option({\n  size = 'xSmall',\n  onOptionClick,\n  children,\n  optionKey,\n  selected,\n  sx,\n  testId,\n  ...props\n}: OptionProps) {\n  const handleOptionClick = useCallback(\n    () => onOptionClick?.(children, optionKey),\n    [children, onOptionClick, optionKey],\n  );\n  return (\n    <MenuItem\n      {...props}\n      rc={<button />}\n      size={size}\n      onClick={handleOptionClick}\n      selected={selected}\n      sx={sx}\n      testId={testId}\n    >\n      {children}\n    </MenuItem>\n  );\n}\n\nOption.displayName = 'Option';\nOption.Label = MenuItemLabel;\nOption.Caption = MenuItemCaption;\nOption.Icon = MenuItemIcon;\nOption.FramedImage = MenuItemFramedImage;\n// @TODO: add support for the below subcomponents:\n// Option.FramedIcon = MenuItemFramedIcon;\n// Option.IntentIcon = MenuItemIntentIcon;\n// Option.Badge = MenuItemBadge;\n","import { base } from '@biom3/design-tokens';\nimport { motion } from 'framer-motion';\nimport {\n  Children,\n  JSXElementConstructor,\n  ReactElement,\n  ReactNode,\n  useId,\n  useMemo,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useBrowserEffect,\n  useBrowserLayoutEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n  useGetSubcomponentChildren,\n  useResizeObserver,\n  useTheme,\n} from '../../hooks';\nimport { useWindowSizeStore } from '../../providers';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { getSubcomponentChild } from '../../utils/subcomponentHelpers';\nimport { BaseClickable } from '../Clickable';\nimport { Popover } from '../Popover';\nimport { SmartClone } from '../SmartClone';\nimport { SvgIcon } from '../SvgIcon';\nimport {\n  DEFAULT_TEXT_INPUT_ALIGN,\n  DEFAULT_TEXT_INPUT_SIZE,\n  TEXT_INPUT_SIZES,\n} from '../TextInput/shared';\nimport {\n  baseInputSx,\n  inputContainerBaseSx,\n  inputIconBaseSx,\n  renderContainerStyles,\n  renderInputSx,\n  renderResponsiveContainerStyles,\n  renderResponsiveInputSx,\n} from '../TextInput/styles';\nimport { VerticalMenu } from '../VerticalMenu';\nimport { Option } from './Option';\nimport { SelectDefaultFramedImage } from './SelectDefaultFramedImage';\nimport { SelectDefaultIcon } from './SelectDefaultIcon';\nimport { chevronSx, selectCustomSx } from './styles';\nimport {\n  DEFAULT_SELECT_SIZE,\n  OnOptionClick,\n  OptionKey,\n  OptionProps,\n  SelectProps,\n} from './types';\n\nfunction pickAnOption(selectedOption?: OptionKey, options?: ReactNode) {\n  return typeof selectedOption !== 'undefined' && Array.isArray(options)\n    ? (options.find(\n        option => option.props.optionKey === selectedOption,\n      ) as ReactElement<\n        OptionProps,\n        string | JSXElementConstructor<OptionProps>\n      >)\n    : null;\n}\n\nexport const noOptionFoundErrorText = (selectedOption: OptionKey | undefined) =>\n  `No <Option> found for selectedOption: ${selectedOption}`;\n\nexport function Select({\n  children,\n  validationStatus,\n  defaultLabel = 'Select an option',\n  sx = {},\n  popoverContainerSx = {},\n  onSelectChange,\n  domRef = { current: null },\n  testId = 'Select',\n  id: idProp,\n  size = DEFAULT_SELECT_SIZE,\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  targetClickOveride,\n  disabled,\n  ...props\n}: SelectProps) {\n  const { selectedOption, defaultOption, ...otherProps } =\n    'selectedOption' in props\n      ? { ...props, defaultOption: undefined }\n      : {\n          ...props,\n          selectedOption: undefined,\n        };\n\n  const theme = useTheme();\n  const [selectedOptionChildren, setSelectedOptionChildren] =\n    useState<ReactNode | null>(null);\n  const localRef = useForwardLocalDomRef(domRef);\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  const options = useGetSubcomponentChildren(children, Option);\n  const defaultIcon = useGetSubcomponentChild(children, SelectDefaultIcon);\n  const defaultFramedImage = useGetSubcomponentChild(\n    children,\n    SelectDefaultFramedImage,\n  );\n  const targetSize = useResizeObserver(localRef, 30);\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const {\n    state: { width: windowWidth },\n  } = useWindowSizeStore(store => store);\n\n  // @NOTE: collect up specific children, depending on the current\n  // state of the Select component\n  const { selectedOptionFramedImage, selectedOptionIcon, selectedOptionText } =\n    useMemo(\n      () => ({\n        selectedOptionFramedImage: getSubcomponentChild(\n          selectedOptionChildren,\n          Option.FramedImage,\n        ),\n        selectedOptionIcon: getSubcomponentChild(\n          selectedOptionChildren,\n          Option.Icon,\n        ),\n        selectedOptionText: getSubcomponentChild(\n          selectedOptionChildren,\n          Option.Label,\n        ),\n      }),\n      [selectedOptionChildren],\n    );\n\n  // @NOTE: setup controlled API selection children\n  const controlledSelectionFramedImage = useMemo(() => {\n    if (selectedOption === null) return null;\n    const pickedOption = pickAnOption(selectedOption, options);\n    if (pickedOption && pickedOption?.props.children) {\n      return getSubcomponentChild(\n        pickedOption.props.children,\n        Option.FramedImage,\n      );\n    }\n    if (selectedOption !== undefined) {\n      throw new Error(noOptionFoundErrorText(selectedOption));\n    }\n    return false;\n  }, [options, selectedOption]);\n  const controlledSelectionIcon = useMemo(() => {\n    if (selectedOption === null) return null;\n    const pickedOption = pickAnOption(selectedOption, options);\n    if (pickedOption && pickedOption?.props.children) {\n      return getSubcomponentChild(pickedOption.props.children, Option.Icon);\n    }\n    if (selectedOption !== undefined) {\n      throw new Error(noOptionFoundErrorText(selectedOption));\n    }\n    return false;\n  }, [options, selectedOption]);\n  const controlledSelectionText = useMemo(() => {\n    if (selectedOption === null) return null;\n    const pickedOption = pickAnOption(selectedOption, options);\n    if (pickedOption && pickedOption?.props.children) {\n      return getSubcomponentChild(pickedOption.props.children, Option.Label);\n    }\n    if (selectedOption !== undefined) {\n      throw new Error(noOptionFoundErrorText(selectedOption));\n    }\n    return false;\n  }, [options, selectedOption]);\n\n  const startingSize = useMemo(\n    () => getStartingSize(size, DEFAULT_TEXT_INPUT_SIZE, TEXT_INPUT_SIZES),\n    [size],\n  );\n  const leftSideContent = useMemo(\n    () =>\n      defaultIcon ||\n      defaultFramedImage ||\n      controlledSelectionIcon ||\n      controlledSelectionFramedImage ||\n      selectedOptionIcon ||\n      selectedOptionFramedImage,\n    [\n      controlledSelectionFramedImage,\n      controlledSelectionIcon,\n      defaultFramedImage,\n      defaultIcon,\n      selectedOptionFramedImage,\n      selectedOptionIcon,\n    ],\n  );\n  const allButtonSx = useMemo(\n    () =>\n      merge(\n        inputContainerBaseSx,\n        baseInputSx,\n        renderContainerStyles({ size: startingSize, theme }),\n        renderResponsiveContainerStyles({\n          size,\n          theme,\n        }),\n        renderInputSx({\n          validationStatus,\n          leftHandButtonsWidth: leftSideContent ? 24 : 0,\n          rightHandButtonsWidth: 0,\n          textAlign,\n          theme,\n          hasValue: Boolean(selectedOptionText || controlledSelectionText),\n        }),\n        renderResponsiveInputSx({\n          theme,\n          size,\n          validationStatus,\n          leftHandButtonsWidth: leftSideContent ? 24 : 0,\n          rightHandButtonsWidth: 0,\n          textAlign,\n          hasValue: Boolean(selectedOptionText || controlledSelectionText),\n        }),\n        selectCustomSx({ textAlign, disabled }),\n        sx,\n      ),\n    [\n      leftSideContent,\n      size,\n      startingSize,\n      sx,\n      textAlign,\n      theme,\n      validationStatus,\n      disabled,\n      selectedOptionText,\n      controlledSelectionText,\n    ],\n  );\n\n  const leftContentStyles = useMemo(\n    () => merge(inputIconBaseSx, { mr: '0' }),\n    [],\n  );\n  const rightChevronSx = useMemo(() => merge(chevronSx), []);\n\n  // @NOTE: life cycle stuff below here:\n  // ------------------------------------------------------------------\n\n  useBrowserLayoutEffect(() => {\n    // @NOTE: if the popover is visible, and the window width changes,\n    // close it, so it doesnt look out of place ...\n    setPopoverVisible(false);\n  }, [windowWidth, setPopoverVisible]);\n\n  // @NOTE: When selectedOption is null, we need to clear out any\n  // selected option children, BUT ONLY when we're in controlled mode\n  useBrowserEffect(() => {\n    if (selectedOption === null && selectedOptionChildren) {\n      setSelectedOptionChildren(null);\n    }\n  }, [selectedOption, selectedOptionChildren]);\n\n  useBrowserEffect(() => {\n    if (defaultOption !== undefined) {\n      const pickedOption = pickAnOption(defaultOption, options);\n      setSelectedOptionChildren(pickedOption?.props.children);\n    }\n  }, [defaultOption]);\n\n  return (\n    <Popover\n      domRef={localRef}\n      position={{ x: textAlign, y: 'below' }}\n      visible={popoverVisible}\n      id={id}\n      onOutsideClick={() => setPopoverVisible(false)}\n    >\n      <Popover.Target>\n        <BaseClickable\n          {...otherProps}\n          disabled={disabled}\n          testId={`${testId}__target`}\n          sx={allButtonSx}\n          onClick={event => {\n            if (targetClickOveride) {\n              targetClickOveride?.(event);\n            } else {\n              setPopoverVisible(!popoverVisible);\n            }\n          }}\n        >\n          {typeof selectedOption !== 'undefined' && selectedOption !== null ? (\n            <>\n              {controlledSelectionFramedImage ? (\n                <SmartClone\n                  testId={`${testId}__target__controlledFramedImage`}\n                  sx={leftContentStyles}\n                >\n                  {controlledSelectionFramedImage}\n                </SmartClone>\n              ) : controlledSelectionIcon ? (\n                <SmartClone\n                  testId={`${testId}__target__controlledIcon`}\n                  sx={leftContentStyles}\n                >\n                  {controlledSelectionIcon}\n                </SmartClone>\n              ) : (\n                defaultFramedImage || defaultIcon || null\n              )}\n\n              <SmartClone\n                testId={`${testId}__target__controlledLabel`}\n                size=\"small\"\n              >\n                {controlledSelectionText}\n              </SmartClone>\n            </>\n          ) : selectedOptionChildren ? (\n            <>\n              {selectedOptionFramedImage ? (\n                <SmartClone\n                  testId={`${testId}__target__selectedFramedImage`}\n                  sx={leftContentStyles}\n                >\n                  {selectedOptionFramedImage}\n                </SmartClone>\n              ) : selectedOptionIcon ? (\n                <SmartClone\n                  testId={`${testId}__target__selectedIcon`}\n                  sx={leftContentStyles}\n                >\n                  {selectedOptionIcon}\n                </SmartClone>\n              ) : (\n                defaultFramedImage || defaultIcon || null\n              )}\n\n              <SmartClone\n                testId={`${testId}__target__selectedLabel`}\n                size=\"small\"\n              >\n                {selectedOptionText}\n              </SmartClone>\n            </>\n          ) : (\n            <>\n              {defaultFramedImage ? (\n                <SmartClone testId={`${testId}__target__defaultFramedImage`}>\n                  {defaultFramedImage}\n                </SmartClone>\n              ) : defaultIcon ? (\n                <SmartClone testId={`${testId}__target__defaultIcon`}>\n                  {defaultIcon}\n                </SmartClone>\n              ) : null}\n\n              <SmartClone\n                testId={`${testId}__target__defaultLabel`}\n                size=\"small\"\n              >\n                {defaultLabel}\n              </SmartClone>\n            </>\n          )}\n\n          <SvgIcon className=\"chevron\" sx={rightChevronSx} rc={<motion.svg />}>\n            <motion.path\n              initial=\"down\"\n              variants={{\n                down: {\n                  d: 'M5 9L12 16L19 9',\n                },\n                up: {\n                  d: 'M5 16L12 9L19 16',\n                },\n              }}\n              animate={popoverVisible ? 'up' : 'down'}\n              transition={{\n                ease: base.motion.normal.fast.jsEase,\n                duration: base.motion.normal.fast.jsDuration,\n              }}\n            />\n          </SvgIcon>\n        </BaseClickable>\n      </Popover.Target>\n\n      <Popover.Content\n        testId={`${testId}__content`}\n        sx={merge(\n          {\n            w: `${targetSize.width}px`,\n            boxShadow: 'base.shadow.500',\n            bradbl: 'base.borderRadius.x6',\n            bradbr: 'base.borderRadius.x6',\n          },\n          popoverContainerSx,\n        )}\n      >\n        <VerticalMenu\n          textAlign={textAlign}\n          sx={{ minw: 'unset' }}\n          testId={`${testId}__content__verticalMenu`}\n        >\n          {Children.map(options, child => (\n            <SmartClone\n              onOptionClick={\n                ((childrenEls, optionKey) => {\n                  setPopoverVisible(false);\n                  setSelectedOptionChildren(childrenEls);\n                  onSelectChange?.(optionKey);\n                }) as OnOptionClick\n              }\n            >\n              {child}\n            </SmartClone>\n          ))}\n        </VerticalMenu>\n      </Popover.Content>\n    </Popover>\n  );\n}\n\nSelect.displayName = 'Select';\nSelect.DefaultFramedImage = SelectDefaultFramedImage;\nSelect.DefaultIcon = SelectDefaultIcon;\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { FramedImage, FramedImageProps } from '../FramedImage';\nimport { framedImageSx } from '../TextInput/styles';\n\nexport type SelectDefaultFramedImageProps<\n  RC extends ReactElement | undefined = undefined,\n> = FramedImageProps<RC>;\n\nexport function SelectDefaultFramedImage<\n  RC extends ReactElement | undefined = undefined,\n>({ sx = {}, ...props }: SelectDefaultFramedImageProps<RC>) {\n  const allStyles = merge(framedImageSx, sx);\n  return <FramedImage {...props} sx={allStyles} />;\n}\n\nSelectDefaultFramedImage.displayName = 'Select.DefaultFramedImage';\n","import merge from 'ts-deepmerge';\n\nimport { IconVariant } from '../../types';\nimport { Icon, IconProps } from '../Icon';\nimport { inputIconBaseSx } from '../TextInput/styles';\n\nexport type SelectDefaultIconProps = IconProps & {\n  iconVariant?: IconVariant;\n};\nexport function SelectDefaultIcon({\n  sx = {},\n  iconVariant,\n  ...props\n}: SelectDefaultIconProps) {\n  const allStyles = merge(inputIconBaseSx, sx);\n  return <Icon {...props} variant={iconVariant} sx={allStyles} />;\n}\n\nSelectDefaultIcon.displayName = 'Select.DefaultIcon';\n","import { InputTextAlign } from '../../types/input';\n\nexport const chevronSx = {\n  w: 'base.icon.size.250',\n  stroke: 'base.color.brand.1',\n  strokeWidth: 2.75,\n  fill: 'transparent',\n  right: 'base.spacing.x3',\n};\n\nexport const selectCustomSx = ({\n  textAlign,\n  disabled,\n}: {\n  textAlign: InputTextAlign;\n  disabled?: boolean;\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  width: 'auto',\n  justifyContent: textAlign === 'left' ? 'flex-start' : 'flex-end',\n  paddingRight: textAlign === 'right' ? 'base.spacing.x10' : '0',\n  pointerEvents: disabled ? 'none' : 'auto',\n});\n","import { MouseEvent, ReactNode } from 'react';\n\nimport { MenuItemProps } from '../../types/clickable';\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport { MakeResponsive, StandardComponentWithProps } from '../../types/shared';\nimport { SxComponentProps } from '../../types/sxProps';\nimport { DEFAULT_TEXT_INPUT_SIZE, TEXT_INPUT_SIZES } from '../TextInput';\n\nexport const DEFAULT_SELECT_SIZE = DEFAULT_TEXT_INPUT_SIZE;\nexport const selectSizes = TEXT_INPUT_SIZES;\nexport type SelectSize = (typeof selectSizes)[number];\n\nexport type OptionKey = string | number | null;\nexport type OnOptionClick = (children: ReactNode, optionKey: OptionKey) => void;\nexport type OptionProps = Omit<MenuItemProps<undefined, Function>, 'rc'> & {\n  onOptionClick?: OnOptionClick;\n  optionKey: number | string;\n};\n\ntype SelectDescriminatedUnion =\n  | {\n      defaultOption?: never;\n      selectedOption: OptionKey;\n      onSelectChange: (value: OptionKey) => void;\n    }\n  | {\n      selectedOption?: never;\n      defaultOption?: OptionKey;\n      onSelectChange?: (value: OptionKey) => void;\n    };\n\nexport type SelectProps = Omit<\n  StandardComponentWithProps<\n    HTMLButtonElement,\n    SelectDescriminatedUnion & {\n      defaultLabel?: string;\n      validationStatus?: InputValidationStatus;\n      children?: ReactNode;\n      id?: string;\n      popoverContainerSx?: SxComponentProps['sx'];\n      size?: MakeResponsive<SelectSize>;\n      textAlign?: InputTextAlign;\n      targetClickOveride?: (event: MouseEvent<HTMLButtonElement>) => void;\n      disabled?: boolean;\n    }\n  >,\n  'rc'\n>;\n","import { DeeplyNestedSx } from '../../types/sxProps';\n\nexport const verticalMenuSxProps: DeeplyNestedSx = {\n  minWidth: '280px',\n  maxHeight: '300px',\n  bgc: 'base.color.neutral.600',\n  position: 'relative',\n  p: 'base.spacing.x1',\n  overflowY: 'auto',\n  brad: 'base.borderRadius.x6',\n  gap: 'base.spacing.x1',\n};\n","import { Children, ReactElement } from 'react';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { isChildSubcomponent } from '../../utils/subcomponentHelpers';\nimport { ButtCon, Button, Link } from '../Clickable';\nimport { ExpandableMenuItem } from '../ExpandableMenuItem';\nimport { InputBar } from '../InputBar';\nimport { MenuItem } from '../MenuItem';\nimport { SmartClone } from '../SmartClone';\nimport { Stack, StackProps } from '../Stack';\nimport { AppHeaderBarSize, DEFAULT_APP_HEADER_BAR_SIZE } from './shared';\n\ntype AppHeaderBarSlotProps<RC extends ReactElement | undefined = undefined> =\n  StackProps<RC> & {\n    size?: MakeResponsive<AppHeaderBarSize>;\n  };\n\nfunction AppHeaderBarSlot<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_APP_HEADER_BAR_SIZE,\n  children,\n  sx = {},\n  direction = 'row',\n  gap = 'base.spacing.x2',\n  alignItems = 'center',\n  ...props\n}: AppHeaderBarSlotProps<RC>) {\n  return (\n    <Stack\n      {...props}\n      direction={direction}\n      gap={gap}\n      alignItems={alignItems}\n      sx={sx}\n    >\n      {Children.map(children, child => {\n        if (\n          isChildSubcomponent(child, Button) ||\n          isChildSubcomponent(child, ButtCon)\n        ) {\n          // @NOTE: render Button & ButtCon children,\n          // with some special extra props\n          return (\n            <SmartClone\n              variant={child.props.variant ?? 'tertiary'}\n              size={child.props.size ?? size}\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n\n        // @NOTE: render MenuItem, ExpandableMenuItem & InputBar children,\n        // with some special extra props\n        if (\n          isChildSubcomponent(child, MenuItem) ||\n          isChildSubcomponent(child, ExpandableMenuItem) ||\n          isChildSubcomponent(child, InputBar)\n        ) {\n          return (\n            <SmartClone\n              size={child.props.size ?? 'xSmall'}\n              emphasized={child.props.emphasized ?? true}\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n\n        // @NOTE: render Link children, with some special extra props\n        if (isChildSubcomponent(child, Link)) {\n          return (\n            <SmartClone variant={child.props.variant ?? 'secondary'}>\n              {child}\n            </SmartClone>\n          );\n        }\n\n        // @NOTE: Otherwise just render whatever the user has\n        // passed in, with no extra props\n        return child;\n      })}\n    </Stack>\n  );\n}\n\nexport function AppHeaderBarLeftSlot<\n  RC extends ReactElement | undefined = undefined,\n>(props: AppHeaderBarSlotProps<RC>) {\n  return <AppHeaderBarSlot {...props} />;\n}\n\nexport function AppHeaderBarRightSlot<\n  RC extends ReactElement | undefined = undefined,\n>(props: AppHeaderBarSlotProps<RC>) {\n  return <AppHeaderBarSlot {...props} />;\n}\n\nAppHeaderBarLeftSlot.displayName = 'AppHeaderBar.LeftSlot';\nAppHeaderBarRightSlot.displayName = 'AppHeaderBar.RightSlot';\n","export const APP_HEADER_BAR_SIZES = ['small', 'medium'] as const;\nexport const DEFAULT_APP_HEADER_BAR_SIZE: AppHeaderBarSize = 'medium';\nexport type AppHeaderBarSize = (typeof APP_HEADER_BAR_SIZES)[number];\nexport type AppHeaderBarVariant = 'dim' | 'transparent' | 'bright';\n\n// @TODO: maybe also support right align eventually?\nexport type AppHeaderBarContentAlign = 'left' | 'center';\n","import { useTheme } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  GetHybridClickableRCandDomProps,\n  isBaseClickable,\n  isBox,\n} from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Box } from '../Box';\nimport { BaseClickable } from '../Clickable';\nimport {\n  APP_HEADER_BAR_SIZES,\n  AppHeaderBarContentAlign,\n  AppHeaderBarSize,\n  DEFAULT_APP_HEADER_BAR_SIZE,\n} from './shared';\nimport { renderResponsiveTitleStyles, renderTitleStyles } from './styles';\n\nexport type AppHeaderBarTitleProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n> = GetHybridClickableRCandDomProps<RC, OnClick> & {\n  size?: MakeResponsive<AppHeaderBarSize>;\n  contentAlign?: AppHeaderBarContentAlign;\n};\n\nexport function AppHeaderBarTitle<\n  RC extends ReactElement | undefined = undefined,\n  OnClick extends Function | undefined = undefined,\n>({\n  size = DEFAULT_APP_HEADER_BAR_SIZE,\n  sx = {},\n  contentAlign,\n  rc,\n  ...otherProps\n}: AppHeaderBarTitleProps<RC, OnClick>) {\n  const { onClick } = 'onClick' in otherProps ? otherProps : { onClick: null };\n  const baseClickableProps = { onClick, rc, ...otherProps };\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_APP_HEADER_BAR_SIZE,\n    APP_HEADER_BAR_SIZES,\n  );\n  const mergedSx = merge(\n    { color: 'base.color.text.primary' },\n    lineClamp(1),\n    contentAlign === 'left'\n      ? {\n          flex: 1,\n        }\n      : {\n          position: 'absolute',\n          left: 0,\n          w: '100%',\n          px: 'base.spacing.x5',\n          textAlign: 'center',\n        },\n    renderTitleStyles({ theme: themeProps, size: startingSize }),\n    renderResponsiveTitleStyles({\n      theme: themeProps,\n      size,\n    }),\n    sx,\n  );\n\n  return isBaseClickable(onClick, rc, false, baseClickableProps) ? (\n    <BaseClickable {...baseClickableProps} sx={mergedSx} />\n  ) : isBox(onClick, rc, false, otherProps) ? (\n    <Box {...otherProps} rc={rc || <h1 />} sx={mergedSx} />\n  ) : null;\n}\n\nAppHeaderBarTitle.displayName = 'AppHeaderBar.Title';\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getHeadingTextStyles, isError } from '../../utils/textStyleHelpers';\nimport { AppHeaderBarSize } from './shared';\n\nexport const outerContainerStaticStyles = {\n  width: '100%',\n  padding: 'base.spacing.x2',\n};\n\nexport const baseInnerContainerStyles = {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  borderRadius: 'base.borderRadius.x10',\n  position: 'relative',\n  gap: 'base.spacing.x6',\n};\n\nexport function getOuterContainerStyles({ size }: { size: AppHeaderBarSize }) {\n  switch (size) {\n    case 'small':\n      return {\n        height: '80px',\n      };\n\n    case 'medium':\n    default:\n      return {\n        height: '96px',\n      };\n  }\n}\n\nexport function responsiveOuterContainerStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<AppHeaderBarSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getOuterContainerStyles({\n            size: responsiveSize,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n\nexport function innerContainerStyles({\n  size,\n  themeProps,\n}: {\n  size: AppHeaderBarSize;\n  themeProps: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        padding: themeProps.base.spacing.x2,\n        minHeight: '64px',\n      };\n\n    case 'medium':\n    default:\n      return {\n        paddingX: themeProps.base.spacing.x6,\n        paddingY: themeProps.base.spacing.x4,\n        minHeight: '80px',\n      };\n  }\n}\n\nexport function responsiveInnerContainerStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<AppHeaderBarSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: innerContainerStyles({\n            themeProps,\n            size: responsiveSize,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n\nexport function renderTitleStyles({\n  size,\n  theme,\n}: {\n  size: AppHeaderBarSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return getHeadingTextStyles({\n        themeProps: theme,\n        size: 'xSmall',\n        weight: 'bold',\n      });\n\n    case 'medium':\n    default:\n      return getHeadingTextStyles({\n        themeProps: theme,\n        size: 'medium',\n        weight: 'bold',\n      });\n  }\n}\n\nexport function renderResponsiveTitleStyles({\n  theme,\n  size,\n}: {\n  theme: BiomeTheme;\n  size: MakeResponsive<AppHeaderBarSize>;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: renderTitleStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n\nexport function renderTitleLogoStyles({\n  size,\n  theme,\n}: {\n  size: AppHeaderBarSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return { height: theme.base.spacing.x8 };\n\n    case 'medium':\n    default:\n      return { height: theme.base.spacing.x12 };\n  }\n}\n\nexport function renderResponsiveTitleLogoStyles({\n  theme,\n  size,\n}: {\n  theme: BiomeTheme;\n  size: MakeResponsive<AppHeaderBarSize>;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: renderTitleLogoStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n}\n","import { ReactElement, Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport {\n  GetHybridClickableRCandDomProps,\n  isBaseClickable,\n} from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { BaseClickable } from '../Clickable';\nimport { Logo, LogoProps } from '../Logo';\nimport { SmartClone } from '../SmartClone';\nimport {\n  APP_HEADER_BAR_SIZES,\n  AppHeaderBarContentAlign,\n  AppHeaderBarSize,\n  DEFAULT_APP_HEADER_BAR_SIZE,\n} from './shared';\nimport {\n  renderResponsiveTitleLogoStyles,\n  renderTitleLogoStyles,\n} from './styles';\n\nexport type AppHeaderBarTitleLogoProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n> = GetHybridClickableRCandDomProps<RC, OnClick, 'svg'> &\n  Omit<LogoProps, 'domRef'> & {\n    size?: MakeResponsive<AppHeaderBarSize>;\n    contentAlign?: AppHeaderBarContentAlign;\n  };\n\nexport function AppHeaderBarTitleLogo<\n  RC extends ReactElement | undefined = undefined,\n  OnClick extends Function | undefined = undefined,\n>({\n  size = DEFAULT_APP_HEADER_BAR_SIZE,\n  logo,\n  sx = {},\n  contentAlign,\n  rc,\n  testId,\n  domRef,\n  ...props\n}: AppHeaderBarTitleLogoProps<RC, OnClick>) {\n  const { onClick, ...otherLogoProps } =\n    'onClick' in props ? props : { onClick: null };\n  const baseClickableProps = { onClick, rc, domRef, ...otherLogoProps };\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_APP_HEADER_BAR_SIZE,\n    APP_HEADER_BAR_SIZES,\n  );\n  const responsiveTitleLogoStyles = renderResponsiveTitleLogoStyles({\n    theme: themeProps,\n    size,\n  });\n  const titleLogoStyles = merge(\n    contentAlign === 'left'\n      ? {\n          pl: 'base.spacing.x1',\n          width: 'auto',\n          marginRight: 'auto',\n        }\n      : {\n          position: 'absolute',\n          left: 0,\n          width: '100%',\n          textAlign: 'center',\n        },\n    renderTitleLogoStyles({ theme: themeProps, size: startingSize }),\n    responsiveTitleLogoStyles,\n    sx,\n  );\n  const logoChildren = (\n    <Logo {...otherLogoProps} logo={logo} sx={titleLogoStyles} />\n  );\n  return isBaseClickable(onClick, rc, false, baseClickableProps) ? (\n    <BaseClickable {...baseClickableProps} sx={titleLogoStyles} testId={testId}>\n      {logoChildren}\n    </BaseClickable>\n  ) : (\n    <SmartClone\n      sx={titleLogoStyles}\n      testId={testId}\n      domRef={domRef as Ref<HTMLElement>}\n    >\n      {logoChildren}\n    </SmartClone>\n  );\n}\n\nAppHeaderBarTitleLogo.displayName = 'AppHeaderBar.TitleLogo';\n","import { base } from '@biom3/design-tokens';\nimport { DistributiveOmit } from '@emotion/react';\nimport { motion } from 'framer-motion';\nimport {\n  ChangeEvent,\n  ComponentPropsWithoutRef,\n  KeyboardEvent,\n  MouseEvent,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useBrowserEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n  useOnClickOutside,\n  useResizeObserver,\n} from '../../hooks';\nimport { useWindowSizeStore } from '../../providers';\nimport { TextInputProps } from '../../types/input';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { MenuItem } from '../MenuItem';\nimport { Popover } from '../Popover';\nimport { chevronSx } from '../Select/styles';\nimport { SvgIcon } from '../SvgIcon';\nimport { DEFAULT_TEXT_INPUT_SIZE, TextInput } from '../TextInput';\nimport { TextInputIcon } from '../TextInput/TextInputIcon';\nimport { VerticalMenu } from '../VerticalMenu';\n\nexport type AutocompleteProps<RC extends ReactElement | undefined = undefined> =\n  DistributiveOmit<BoxWithRCAndDomProps<RC>, 'onChange'> &\n    Omit<\n      TextInputProps,\n      | 'onChange'\n      | 'hideClearValueButton'\n      | 'inputMode'\n      | 'onFocus'\n      | 'onBlur'\n      | 'value'\n    > & {\n      options: string[];\n      onChange?: (selectedValue: string | null) => void;\n      onInputChange?: ComponentPropsWithoutRef<'input'>['onChange'];\n      inputValue?: string;\n      value?: string | null;\n    };\n\nexport function Autocomplete<RC extends ReactElement | undefined = undefined>({\n  children,\n  options,\n  onClearValue,\n  name,\n  sizeVariant = DEFAULT_TEXT_INPUT_SIZE,\n  textAlign,\n  domRef = { current: null },\n  inputRef = { current: null },\n  defaultValue = '',\n  value,\n  inputValue,\n  onChange,\n  onInputChange,\n  placeholder,\n  validationStatus,\n  testId = 'Autocomplete',\n  ...props\n}: AutocompleteProps<RC>) {\n  const { state: windowSize } = useWindowSizeStore(store => store);\n  const menuItemRefs = useRef<HTMLElement[]>([]);\n  const localContainerRef = useForwardLocalDomRef(domRef);\n  const size = useResizeObserver(localContainerRef);\n  const localInputRef = useForwardLocalDomRef(inputRef);\n  const leftIcon = useGetSubcomponentChild(children, TextInputIcon);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [visibleOptions, setVisibleOptions] = useState<string[]>(options);\n  const [activeHoverIndex, setActiveHoverIndex] = useState<number | null>(null);\n  const closePopoverAndBlur = useCallback(() => {\n    setPopoverOpen(false);\n    localInputRef.current?.blur();\n  }, [localInputRef]);\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    typeof inputValue === 'string' ? inputValue : defaultValue,\n  );\n\n  const handleDownArrow = useCallback(() => {\n    let newActiveHoverIndex = activeHoverIndex;\n    if (\n      activeHoverIndex === null ||\n      activeHoverIndex === visibleOptions.length - 1\n    ) {\n      newActiveHoverIndex = 0;\n    } else {\n      newActiveHoverIndex = activeHoverIndex + 1;\n    }\n    setActiveHoverIndex(newActiveHoverIndex);\n    menuItemRefs.current[newActiveHoverIndex]?.scrollIntoView({\n      block: 'end',\n      inline: 'nearest',\n      behavior: 'auto',\n    });\n  }, [activeHoverIndex, visibleOptions.length]);\n\n  const handleUpArrow = useCallback(() => {\n    let newActiveHoverIndex = activeHoverIndex;\n    if (activeHoverIndex === null) {\n      newActiveHoverIndex = 0;\n    } else if (activeHoverIndex === 0) {\n      newActiveHoverIndex = visibleOptions.length - 1;\n    } else {\n      newActiveHoverIndex = activeHoverIndex - 1;\n    }\n\n    setActiveHoverIndex(newActiveHoverIndex);\n    menuItemRefs.current[newActiveHoverIndex]?.scrollIntoView({\n      block: 'end',\n      inline: 'nearest',\n      behavior: 'auto',\n    });\n  }, [activeHoverIndex, visibleOptions.length]);\n\n  const handleEnter = useCallback(() => {\n    if (activeHoverIndex !== null) {\n      const option = visibleOptions[activeHoverIndex];\n      onChange?.(option);\n      setUncontrolledValue(option);\n      closePopoverAndBlur();\n    } else {\n      const option = visibleOptions[0];\n      onChange?.(option);\n      setUncontrolledValue(option);\n      closePopoverAndBlur();\n    }\n  }, [activeHoverIndex, closePopoverAndBlur, onChange, visibleOptions]);\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case 'Escape':\n          closePopoverAndBlur();\n          break;\n\n        case 'Enter':\n          handleEnter();\n          break;\n\n        case 'ArrowUp':\n          event.preventDefault();\n          handleUpArrow();\n          break;\n\n        case 'ArrowDown':\n          event.preventDefault();\n          handleDownArrow();\n          break;\n\n        default:\n          break;\n      }\n    },\n    [closePopoverAndBlur, handleDownArrow, handleEnter, handleUpArrow],\n  );\n\n  const valueToUse =\n    typeof value === 'string'\n      ? value\n      : typeof inputValue === 'string'\n      ? inputValue\n      : uncontrolledValue;\n\n  useBrowserEffect(() => {\n    if (valueToUse !== '') {\n      setVisibleOptions(\n        options.filter(option =>\n          option.toLowerCase().includes(valueToUse.toLowerCase()),\n        ),\n      );\n    } else {\n      setVisibleOptions(options);\n    }\n  }, [valueToUse, options]);\n  useBrowserEffect(() => setPopoverOpen(false), [windowSize]);\n  useOnClickOutside([localContainerRef], () => setPopoverOpen(false));\n  const handleInputClick = useCallback(\n    (ev: MouseEvent) => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      setPopoverOpen(!popoverOpen);\n    },\n    [popoverOpen],\n  );\n  const handleInputChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      setActiveHoverIndex(null);\n      onChange?.(null);\n      onInputChange?.(ev);\n      setUncontrolledValue(ev.target.value);\n    },\n    [onChange, onInputChange],\n  );\n  const handleInputClear = useCallback(() => {\n    // @NOTE: if its a CONTROLLED input, simply call the\n    // onClearValue prop, and then early exit\n    if (value !== undefined) {\n      onChange?.(null);\n      return onClearValue?.();\n    }\n\n    return setUncontrolledValue('');\n  }, [onChange, onClearValue, value]);\n\n  const rightChevronSx = useMemo(\n    () =>\n      merge(chevronSx, {\n        position: 'absolute',\n        right: '14px',\n        top: '50%',\n        translate: '0 -50%',\n      }),\n    [],\n  );\n\n  return (\n    <Box {...props} domRef={localContainerRef} testId={testId}>\n      <Popover visible={popoverOpen} position={{ y: 'below', x: 'left' }}>\n        <Popover.Target>\n          <TextInput\n            name={name}\n            value={valueToUse}\n            inputMode=\"text\"\n            textAlign={textAlign}\n            testId={`${testId}__textInput`}\n            validationStatus={validationStatus}\n            sizeVariant={sizeVariant}\n            inputRef={localInputRef}\n            placeholder={placeholder}\n            onKeyDown={handleKeyDown}\n            onClick={handleInputClick}\n            onChange={handleInputChange}\n            onClearValue={handleInputClear}\n            autoComplete=\"off\"\n          >\n            {leftIcon}\n\n            {/* @TODO: DUMMY ELEMENT, here simply to allow correct spacing on \n            the righthand side of the TextInput, would probably be better to use some \n            sx on the TextInput to alter the paddingRight instead */}\n            <TextInput.StatefulButtCon\n              icon=\"Add\"\n              sx={{ opacity: '0', pointerEvents: 'none', userSelect: 'none' }}\n            />\n\n            <SvgIcon\n              className=\"chevron\"\n              sx={rightChevronSx}\n              rc={<motion.svg />}\n            >\n              <motion.path\n                initial=\"down\"\n                variants={{\n                  down: {\n                    d: 'M5 9L12 16L19 9',\n                  },\n                  up: {\n                    d: 'M5 16L12 9L19 16',\n                  },\n                }}\n                animate={popoverOpen ? 'up' : 'down'}\n                transition={{\n                  ease: base.motion.normal.fast.jsEase,\n                  duration: base.motion.normal.fast.jsDuration,\n                }}\n              />\n            </SvgIcon>\n          </TextInput>\n        </Popover.Target>\n        <Popover.Content\n          sx={{ w: `${size.width}px`, boxShadow: 'base.shadow.500' }}\n        >\n          <VerticalMenu\n            testId={`${testId}__verticalMenu`}\n            textAlign={textAlign}\n          >\n            {visibleOptions.length === 0 ? (\n              <MenuItem>\n                <MenuItem.Label>No results found</MenuItem.Label>\n              </MenuItem>\n            ) : (\n              visibleOptions.map((option, index) => (\n                <MenuItem\n                  domRef={element => {\n                    if (element) {\n                      menuItemRefs.current[index] = element;\n                    }\n                  }}\n                  key={option}\n                  onClick={() => {\n                    onChange?.(option);\n                    setUncontrolledValue(option);\n                  }}\n                  controlledHover={activeHoverIndex === index}\n                  onMouseEnter={() => setActiveHoverIndex(index)}\n                >\n                  <MenuItem.Label>{option}</MenuItem.Label>\n                </MenuItem>\n              ))\n            )}\n          </VerticalMenu>\n        </Popover.Content>\n      </Popover>\n    </Box>\n  );\n}\n\nAutocomplete.displayName = 'Autocomplete';\nAutocomplete.Icon = TextInputIcon;\n","import merge from 'ts-deepmerge';\n\nimport { useGetCurrentSizeClass, useTheme } from '../../hooks';\nimport {\n  useGetRelativeImageSizeInLayout,\n  useGetResponsiveImageSizes,\n} from '../../hooks/responsiveImageSizeHooks';\nimport {\n  DEFAULT_IMAGE_SIZE_VARIANT,\n  IMAGE_SIZE_VARIANTS,\n  ImageSizeVariant,\n} from '../../types/image';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { hFlex } from '../../utils';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { CloudImageProps } from '../CloudImage/CloudImage';\nimport { FramedImage } from '../FramedImage';\nimport {\n  getContainerSx,\n  getResponsiveContainerSx,\n  getResponsiveTextSx,\n  getTextSx,\n} from './styles';\n\nexport type AvatarProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    size?: MakeResponsive<ImageSizeVariant>;\n    initials?: string;\n  } & Omit<CloudImageProps, 'responsiveSizes' | 'relativeImageSizeInLayout'>\n>;\n\nexport function Avatar<RC extends string | undefined>({\n  initials,\n  imageUrl,\n  size = DEFAULT_IMAGE_SIZE_VARIANT,\n  imageResizeServiceUrl,\n  defaultImageClassName,\n  defaultImageUrl,\n  loading,\n  testId = 'Avatar',\n  className,\n  sx = {},\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & AvatarProps\n  : AvatarProps & { rc: RC }) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const currentSizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const containerSx = merge(\n    {\n      ...hFlex,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      alignItems: 'center',\n      justifyContent: 'center',\n      pos: 'relative',\n      ...(initials\n        ? {\n            bg: 'base.color.accent.3',\n          }\n        : {}),\n    },\n    getContainerSx({ theme, size: startingSize }),\n    getResponsiveContainerSx({ theme, size }),\n    sx,\n  );\n\n  const textSx = merge(\n    getTextSx({ theme, size: startingSize }),\n    getResponsiveTextSx({ theme, size }),\n  );\n\n  const responsiveSizes = useGetResponsiveImageSizes(size, 'Avatar');\n  const relativeImageSizeInLayout = useGetRelativeImageSizeInLayout(\n    size,\n    'Avatar',\n  );\n\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      className={`${className ?? ''} Avatar Avatar--${currentSizeClass}`}\n      sx={containerSx}\n    >\n      {imageUrl ? (\n        <FramedImage\n          testId={`${testId}__framedImage`}\n          circularFrame\n          imageUrl={imageUrl}\n          className=\"Avatar__image\"\n          relativeImageSizeInLayout={relativeImageSizeInLayout}\n          imageResizeServiceUrl={imageResizeServiceUrl}\n          responsiveSizes={responsiveSizes}\n          defaultImageClassName={defaultImageClassName}\n          defaultImageUrl={defaultImageUrl}\n          loading={loading}\n        />\n      ) : initials ? (\n        <Box\n          sx={textSx}\n          testId={`${testId}__text`}\n          rc={<span />}\n          className=\"Avatar__initials\"\n        >\n          {initials}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nAvatar.displayName = 'Avatar';\n","import { Properties } from 'csstype';\n\nimport { ImageSizeVariant } from '../../types/image';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getImageSizeMapping } from '../../utils';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport { getBodyTextStyles } from '../../utils/textStyleHelpers';\n\nexport function getContainerSx({\n  size,\n  theme: { base },\n}: {\n  size: ImageSizeVariant;\n  theme: BiomeTheme;\n}): Properties {\n  const sizeMapping = getImageSizeMapping('Avatar', { base });\n  return {\n    width: sizeMapping[size],\n    height: sizeMapping[size],\n  };\n}\n\nexport const getResponsiveContainerSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ImageSizeVariant>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx,\n  });\n\nexport function getTextSx({\n  size,\n  theme,\n}: {\n  size: ImageSizeVariant;\n  theme: BiomeTheme;\n}): Properties {\n  switch (size) {\n    case 'small':\n      return getBodyTextStyles({\n        size: 'xxSmall',\n        weight: 'bold',\n        themeProps: theme,\n      });\n\n    case 'large':\n      return getBodyTextStyles({\n        size: 'medium',\n        weight: 'bold',\n        themeProps: theme,\n      });\n\n    case 'xLarge':\n      return getBodyTextStyles({\n        size: 'medium',\n        weight: 'bold',\n        themeProps: theme,\n      });\n\n    case 'medium':\n    default:\n      return getBodyTextStyles({\n        size: 'xSmall',\n        weight: 'bold',\n        themeProps: theme,\n      });\n  }\n}\n\nexport const getResponsiveTextSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ImageSizeVariant>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getTextSx,\n  });\n","import { Children, ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n  useResizeObserver,\n  useSplitApartChildrenAndSubComponents,\n} from '../../hooks';\nimport { DomPropsWithDomRef } from '../../types';\nimport { isChildSubcomponent } from '../../utils';\nimport { Box } from '../Box';\nimport { SmartClone } from '../SmartClone';\nimport { BannerCaption } from './BannerCaption';\nimport { BannerIcon } from './BannerIcon';\nimport { BannerRightButtCon } from './BannerRightButtCon';\nimport { BannerRightButton } from './BannerRightButton';\nimport { BannerTitle } from './BannerTitle';\nimport {\n  bannerSx,\n  getBannerColoring,\n  rightHandButtonsContainerSx,\n} from './styles';\nimport { BannerProps, DEFAULT_BANNER_VARIANT } from './types';\n\nexport function Banner<RC extends ReactElement | undefined = undefined>({\n  children,\n  variant = DEFAULT_BANNER_VARIANT,\n  sx = {},\n  testId = 'banner',\n  forceMultilineText,\n  domRef = { current: null },\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & BannerProps\n  : BannerProps & { rc: RC }) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const iconSubcomponent = useGetSubcomponentChild(children, BannerIcon);\n  const title = useGetSubcomponentChild(children, BannerTitle);\n  const caption = useGetSubcomponentChild(children, BannerCaption);\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    BannerIcon,\n    BannerTitle,\n    BannerCaption,\n  ]);\n  const icon = useMemo(() => {\n    switch (variant) {\n      case 'fatal':\n        return <BannerIcon icon=\"CloseWithCircle\" iconVariant=\"bold\" />;\n\n      case 'attention':\n      case 'destructive':\n        return <BannerIcon icon=\"Alert\" iconVariant=\"bold\" />;\n\n      case 'guidance':\n        return <BannerIcon icon=\"InformationCircle\" iconVariant=\"bold\" />;\n\n      case 'success':\n        return <BannerIcon icon=\"TickWithCircle\" iconVariant=\"bold\" />;\n\n      case 'standard':\n      default:\n        return (\n          iconSubcomponent || (\n            <BannerIcon icon=\"InformationCircle\" iconVariant=\"bold\" />\n          )\n        );\n    }\n  }, [iconSubcomponent, variant]);\n\n  const mergedSx = merge(bannerSx, getBannerColoring(variant), sx);\n  const { height } = useResizeObserver(localDomRef);\n  const iconTopMargin = { top: height > 64 ? '16px' : '19px' };\n\n  return (\n    <Box {...props} sx={mergedSx} testId={testId} domRef={localDomRef}>\n      <SmartClone\n        variant={variant}\n        testId={icon.props.testId ? icon.props.testId : `${testId}__icon`}\n        sx={icon.props.sx ? merge(iconTopMargin, icon.props.sx) : iconTopMargin}\n      >\n        {icon}\n      </SmartClone>\n      <Box\n        sx={{\n          d: 'flex',\n          ...(forceMultilineText\n            ? { flexDirection: 'column' }\n            : { flexWrap: 'wrap', columnGap: 'base.spacing.x2' }),\n        }}\n        className=\"innerTextContainer\"\n      >\n        <SmartClone variant={variant} testId={`${testId}__title`}>\n          {title}\n        </SmartClone>\n        <SmartClone variant={variant} testId={`${testId}__caption`}>\n          {caption}\n        </SmartClone>\n      </Box>\n      <Box\n        className=\"rightButtonsContainer\"\n        testId={`${testId}__rightHandButtons`}\n        sx={rightHandButtonsContainerSx}\n      >\n        {Children.map(otherChildren, child => {\n          const isButtConSubcomponent = isChildSubcomponent(\n            child,\n            BannerRightButtCon,\n          );\n          return isChildSubcomponent(child, BannerRightButton) ||\n            isButtConSubcomponent ? (\n            <SmartClone\n              bannerVariant={variant}\n              testId={\n                isButtConSubcomponent\n                  ? `${testId}__rightButtCon`\n                  : `${testId}__rightButton`\n              }\n            >\n              {child}\n            </SmartClone>\n          ) : (\n            child\n          );\n        })}\n      </Box>\n    </Box>\n  );\n}\nBanner.displayName = 'Banner';\nBanner.Icon = BannerIcon;\nBanner.Title = BannerTitle;\nBanner.Caption = BannerCaption;\nBanner.RightButton = BannerRightButton;\nBanner.RightButtCon = BannerRightButtCon;\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { Body } from '../Text/Body';\nimport { shouldInvertColoring } from './styles';\nimport { BannerTextProps, DEFAULT_BANNER_VARIANT } from './types';\n\nexport function BannerCaption<RC extends ReactElement | undefined = undefined>({\n  children,\n  size = 'medium',\n  weight,\n  variant = DEFAULT_BANNER_VARIANT,\n  sx = {},\n  ...props\n}: BannerTextProps<RC>) {\n  const theme = useTheme();\n  const invertColoring = shouldInvertColoring(variant, theme);\n  const mergedSx = merge(\n    {\n      color: invertColoring\n        ? 'base.color.text.inverse.primary'\n        : 'base.color.text.primary',\n    },\n    sx,\n  );\n  return (\n    <Body {...props} size={size} weight={weight} sx={mergedSx}>\n      {children}\n    </Body>\n  );\n}\n\nBannerCaption.displayName = 'Banner.Caption';\n","import { BiomeTheme } from '../../types/theme';\nimport { BannerVariant } from './types';\n\nexport const bannerSx = {\n  d: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  width: '100%',\n  minHeight: 'base.spacing.x16',\n  p: 'base.spacing.x4',\n  columnGap: 'base.spacing.x2',\n  rowGap: 'base.spacing.x4',\n  paddingLeft: 'base.spacing.x14',\n  position: 'relative',\n  boxShadow: 'base.shadow.300',\n  brad: 'base.borderRadius.x6',\n};\n\nexport const rightHandButtonsContainerSx = {\n  display: 'flex',\n  gap: 'base.spacing.x2',\n  ml: 'auto',\n};\n\nexport const getBannerColoring = (variant: BannerVariant) => {\n  switch (variant) {\n    case 'success':\n    case 'fatal':\n    case 'guidance':\n    case 'attention':\n    case 'destructive':\n      return { bg: `base.color.status.${variant}.dim` };\n\n    case 'standard':\n    default:\n      return { bg: 'base.color.neutral.500' };\n  }\n};\n\nexport const shouldInvertColoring = (\n  variant: BannerVariant,\n  { base }: BiomeTheme,\n) => {\n  const isDarkMode = base.colorMode === 'lightOnDark';\n  const isStandardVariant = variant === 'standard';\n  const invertButtonColoring = isDarkMode && !isStandardVariant;\n  return invertButtonColoring;\n};\n","import { Colors } from '@biom3/design-tokens';\nimport { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\n\nimport {\n  ButtConProps,\n  ButtonProps,\n  ButtonVariant,\n} from '../../types/clickable';\nimport { BodyProps } from '../../types/text';\nimport { BoxProps } from '../Box';\n\nexport const DEFAULT_BANNER_VARIANT = 'standard';\nexport type BannerVariant =\n  | keyof Colors['status']\n  | typeof DEFAULT_BANNER_VARIANT;\nexport type BannerProps = BoxProps & {\n  variant?: BannerVariant;\n  forceMultilineText?: boolean;\n};\nexport type BannerTextProps<RC extends ReactElement | undefined = undefined> =\n  BodyProps<RC> & { variant?: BannerVariant };\n\ntype StrippedDownVariants = Exclude<\n  ButtonVariant,\n  | 'secondary'\n  | 'secondary/destructive'\n  | 'tertiary/inverse'\n  | 'primary/inverse'\n  | 'primary/destructive'\n>;\n\nexport type BannerRightButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtConProps<RC>, 'variant' | 'size'> & {\n  bannerVariant?: BannerVariant;\n  variant?: StrippedDownVariants;\n};\n\nexport type BannerRightButtonProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtonProps<RC>, 'variant' | 'size'> & {\n  bannerVariant?: BannerVariant;\n  variant?: StrippedDownVariants;\n};\n","import { DistributiveOmit, useTheme } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { IconVariant } from '../../types';\nimport { Icon, IconProps } from '../Icon';\nimport { shouldInvertColoring } from './styles';\nimport { BannerVariant, DEFAULT_BANNER_VARIANT } from './types';\n\nexport type BannerIconProps = DistributiveOmit<IconProps, 'variant'> & {\n  variant?: BannerVariant;\n  iconVariant?: IconVariant;\n};\n\nexport function BannerIcon({\n  sx = {},\n  variant = DEFAULT_BANNER_VARIANT,\n  iconVariant,\n  ...props\n}: BannerIconProps) {\n  const theme = useTheme();\n  const invertColoring = shouldInvertColoring(variant, theme);\n  return (\n    <Icon\n      {...props}\n      variant={iconVariant}\n      sx={merge(\n        {\n          position: 'absolute',\n          top: 'base.spacing.x4',\n          left: 'base.spacing.x4',\n          width: 'base.icon.size.300',\n          fill: invertColoring\n            ? 'base.color.text.inverse.primary'\n            : 'base.color.text.primary',\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nBannerIcon.displayName = 'Banner.Icon';\n","import { ReactElement } from 'react';\n\nimport { useTheme } from '../../hooks';\nimport { ButtCon } from '../Clickable';\nimport { shouldInvertColoring } from './styles';\nimport { BannerRightButtConProps, DEFAULT_BANNER_VARIANT } from './types';\n\nexport function BannerRightButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  variant = 'tertiary',\n  bannerVariant = DEFAULT_BANNER_VARIANT,\n  ...props\n}: BannerRightButtConProps<RC>) {\n  const theme = useTheme();\n  const invertButtonColoring = shouldInvertColoring(bannerVariant, theme);\n  return (\n    <ButtCon\n      {...props}\n      size=\"small\"\n      variant={invertButtonColoring ? `${variant}/inverse` : variant}\n    />\n  );\n}\n\nBannerRightButtCon.displayName = 'Banner.RightButtCon';\n","import { ReactElement } from 'react';\n\nimport { useTheme } from '../../hooks';\nimport { Button } from '../Clickable';\nimport { shouldInvertColoring } from './styles';\nimport { BannerRightButtonProps, DEFAULT_BANNER_VARIANT } from './types';\n\nexport function BannerRightButton<\n  RC extends ReactElement | undefined = undefined,\n>({\n  variant = 'tertiary',\n  bannerVariant = DEFAULT_BANNER_VARIANT,\n  ...props\n}: BannerRightButtonProps<RC>) {\n  const theme = useTheme();\n  const invertButtonColoring = shouldInvertColoring(bannerVariant, theme);\n  return (\n    <Button\n      {...props}\n      size=\"small\"\n      variant={invertButtonColoring ? `${variant}/inverse` : variant}\n    />\n  );\n}\n\nBannerRightButton.displayName = 'Banner.RightButton';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { Body } from '../Text';\nimport { shouldInvertColoring } from './styles';\nimport { BannerTextProps, DEFAULT_BANNER_VARIANT } from './types';\n\nexport function BannerTitle<RC extends ReactElement | undefined = undefined>({\n  children,\n  size = 'medium',\n  weight = 'bold',\n  variant = DEFAULT_BANNER_VARIANT,\n  sx = {},\n  ...props\n}: BannerTextProps<RC>) {\n  const theme = useTheme();\n  const invertColoring = shouldInvertColoring(variant, theme);\n  const mergedSx = merge(\n    {\n      color: invertColoring\n        ? 'base.color.text.inverse.primary'\n        : 'base.color.text.primary',\n    },\n    sx,\n  );\n  return (\n    <Body {...props} size={size} weight={weight} sx={mergedSx}>\n      {children}\n    </Body>\n  );\n}\n","import { ClassNames } from '@emotion/react';\nimport { ReactElement, Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useGetSubcomponentChildren,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport {\n  GetHybridClickableRCandDomProps,\n  isBaseClickable,\n  isBox,\n} from '../../types/clickable';\nimport { hFlex, vFlex } from '../../utils/sxChunks';\nimport { Box } from '../Box';\nimport { BaseClickable } from '../Clickable';\nimport { CardAssetImage } from './CardAssetImage';\nimport { CardButtCon } from './CardButtCon';\nimport { CardButton } from './CardButton';\nimport { CardCaption } from './CardCaption';\nimport { CardDescription } from './CardDescription';\nimport { CardFramedImage } from './CardFramedImage';\nimport { CardFramedLogo } from './CardFramedLogo';\nimport { CardMenuItem } from './CardMenuItem';\nimport { CardTitle } from './CardTitle';\nimport { baseContainerStyles } from './styles';\n\nexport type CardProps<\n  RC extends ReactElement | undefined,\n  OnClick extends Function | undefined,\n> = GetHybridClickableRCandDomProps<RC, OnClick> & {\n  elevation?: 1 | 2 | 3 | 4 | 5;\n  selected?: boolean;\n};\n\nexport function Card<\n  RC extends ReactElement | undefined = undefined,\n  OnClick extends Function | undefined = undefined,\n>({\n  className,\n  testId,\n  domRef,\n  rc,\n  sx = {},\n  children,\n  elevation = 1,\n  selected,\n  ...otherProps\n}: CardProps<RC, OnClick>) {\n  const theme = useTheme();\n  const { onClick } =\n    'onClick' in otherProps ? otherProps : { ...otherProps, onClick: null };\n  const baseClickableProps = {\n    onClick,\n    domRef,\n    ...(rc ? { rc } : {}),\n    ...otherProps,\n  };\n  const menuItem = useGetSubcomponentChild(children, CardMenuItem);\n  const assetImage = useGetSubcomponentChild(children, CardAssetImage);\n  const title = useGetSubcomponentChild(children, CardTitle);\n  const description = useGetSubcomponentChild(children, CardDescription);\n  const caption = useGetSubcomponentChild(children, CardCaption);\n  const framedLogo = useGetSubcomponentChild(children, CardFramedLogo);\n  const framedImage = useGetSubcomponentChild(children, CardFramedImage);\n  const buttons = useGetSubcomponentChildren(children, CardButton);\n  const buttCons = useGetSubcomponentChildren(children, CardButtCon);\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    CardAssetImage,\n    CardTitle,\n    CardCaption,\n    CardFramedLogo,\n    CardFramedImage,\n    CardMenuItem,\n    CardDescription,\n    CardButtCon,\n    CardButton,\n  ]);\n  const hasButtons = Boolean(buttons?.length || buttCons?.length);\n  const containsClickables = hasButtons || Boolean(menuItem);\n\n  const innerContents = (\n    <>\n      {menuItem && menuItem}\n      {assetImage && assetImage}\n\n      <Box\n        sx={{\n          ...vFlex,\n          px: 'base.spacing.x6',\n          position: 'relative',\n        }}\n        rc={<span />}\n        className=\"textContainer\"\n        testId={`${testId}__textContainer`}\n      >\n        {framedImage || framedLogo || null}\n\n        {title || caption || description ? (\n          <Box\n            sx={{\n              ...vFlex,\n              py: 'base.spacing.x6',\n              pb: 'base.spacing.x8',\n              gap: 'base.spacing.x4',\n            }}\n            className=\"innerTextContainer\"\n          >\n            {caption}\n            <Box\n              sx={{\n                ...vFlex,\n                justifyContent: 'center',\n                gap: 'base.spacing.x1',\n              }}\n            >\n              {title}\n              {description}\n            </Box>\n          </Box>\n        ) : null}\n\n        {hasButtons && (\n          <Box\n            sx={{\n              ...hFlex,\n              gap: 'base.spacing.x2',\n              pb: 'base.spacing.x8',\n              alignItems: 'center',\n            }}\n            className=\"buttonsContainer\"\n            testId={`${testId}__buttonsRow`}\n          >\n            {buttCons}\n            {buttons}\n          </Box>\n        )}\n        {otherChildren}\n      </Box>\n    </>\n  );\n\n  const mergedContainerSx = merge(\n    baseContainerStyles,\n    theme.components?.Card?.sxOverride ?? {},\n    sx,\n  );\n\n  return (\n    <ClassNames>\n      {({ cx }) =>\n        isBaseClickable(onClick, rc, containsClickables, baseClickableProps) ? (\n          <BaseClickable\n            {...baseClickableProps}\n            testId={testId}\n            sx={mergedContainerSx}\n            className={cx(\n              className,\n              'Card',\n              'Card--baseClickable',\n              `Card--elevation${elevation}`,\n              { 'Card--selected': selected },\n            )}\n          >\n            {innerContents}\n          </BaseClickable>\n        ) : isBox(onClick, rc, containsClickables, otherProps) ? (\n          <Box\n            {...otherProps}\n            domRef={domRef as Ref<HTMLDivElement>}\n            rc={onClick ? <div /> : <article />}\n            testId={testId}\n            sx={mergedContainerSx}\n            className={cx(\n              className,\n              'Card',\n              'Card--box',\n              `Card--elevation${elevation}`,\n              { 'Card--selected': selected },\n            )}\n          >\n            {innerContents}\n          </Box>\n        ) : null\n      }\n    </ClassNames>\n  );\n}\n\nCard.displayName = 'Card';\nCard.Title = CardTitle;\nCard.Caption = CardCaption;\nCard.Description = CardDescription;\nCard.FramedLogo = CardFramedLogo;\nCard.FramedImage = CardFramedImage;\nCard.AssetImage = CardAssetImage;\nCard.MenuItem = CardMenuItem;\nCard.Button = CardButton;\nCard.ButtCon = CardButtCon;\n","import merge from 'ts-deepmerge';\n\nimport { AspectRatioImage, AspectRatioImageProps } from '../AspectRatioImage';\n\nexport type CardAssetImageProps = AspectRatioImageProps<undefined>;\n\nexport function CardAssetImage({\n  responsiveSizes = [128, 256, 450, 512, 720, 860, 1024],\n  sx = {},\n  className,\n  ...props\n}: CardAssetImageProps) {\n  return (\n    <AspectRatioImage\n      {...props}\n      rc={<span />}\n      className={`${className ?? ''} CardAssetImage`}\n      responsiveSizes={responsiveSizes}\n      sx={merge(\n        {\n          bg: 'base.color.neutral.900',\n          objectFit: 'cover',\n          objectPosition: 'center',\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nCardAssetImage.displayName = 'Card.AssetImage';\n","import { ReactElement } from 'react';\n\nimport { ButtConProps } from '../../types/clickable';\nimport { ButtCon } from '../Clickable';\n\nexport type CardButtConProps<RC extends ReactElement | undefined = undefined> =\n  ButtConProps<RC>;\n\nexport function CardButtCon<RC extends ReactElement | undefined = undefined>({\n  variant = 'tertiary',\n  size = 'small',\n  className,\n  ...props\n}: CardButtConProps<RC>) {\n  const { onClick } = 'onClick' in props ? props : { onClick: null };\n  return (\n    <ButtCon\n      {...props}\n      size={size}\n      variant={variant}\n      className={`${className ?? ''} CardButtCon`}\n      onClick={ev => {\n        ev.stopPropagation();\n        if (typeof onClick === 'function') {\n          onClick(ev);\n        }\n      }}\n    />\n  );\n}\n\nCardButtCon.displayName = 'Card.ButtCon';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { ButtonProps } from '../../types/clickable';\nimport { Button } from '../Clickable';\n\nexport type CardButtonProps<RC extends ReactElement | undefined = undefined> =\n  ButtonProps<RC>;\n\nexport function CardButton<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  variant = 'tertiary',\n  className = 'CardButton',\n  ...props\n}: CardButtonProps<RC>) {\n  const { onClick } = 'onClick' in props ? props : { onClick: null };\n  return (\n    <Button\n      {...props}\n      variant={variant}\n      sx={merge({ flexGrow: 1 }, sx)}\n      className={className}\n      onClick={ev => {\n        ev.stopPropagation();\n        if (typeof onClick === 'function') {\n          onClick(ev);\n        }\n      }}\n    />\n  );\n}\n\nCardButton.displayName = 'Card.Button';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { DomPropsWithDomRef } from '../../types';\nimport { CaptionProps } from '../../types/text';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Caption } from '../Text';\n\nexport type CardCaptionProps<RC extends ReactElement | undefined = undefined> =\n  CaptionProps<RC> & DomPropsWithDomRef<'span'>;\n\nexport function CardCaption<RC extends ReactElement | undefined = undefined>({\n  size = 'small',\n  weight = 'bold',\n  sx = {},\n  rc = <span />,\n  className,\n  ...props\n}: CardCaptionProps<RC>) {\n  return (\n    <Caption\n      {...props}\n      sx={merge(\n        {\n          textAlign: 'left',\n          ...lineClamp(1),\n        },\n        sx,\n      )}\n      className={`${className ?? ''} CardCaption`}\n      size={size}\n      weight={weight}\n      rc={rc}\n    />\n  );\n}\n\nCardCaption.displayName = 'Card.Caption';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { DomPropsWithDomRef } from '../../types';\nimport { BodyProps } from '../../types/text';\nimport { Body } from '../Text/Body/Body';\n\nexport type CardDescriptionProps<\n  RC extends ReactElement | undefined = undefined,\n> = BodyProps<RC> & DomPropsWithDomRef<'span'>;\n\nexport function CardDescription<\n  RC extends ReactElement | undefined = undefined,\n>({\n  size = 'medium',\n  weight = 'regular',\n  sx = {},\n  rc = <span />,\n  className,\n  ...props\n}: CardDescriptionProps<RC>) {\n  return (\n    <Body\n      {...props}\n      className={`${className ?? ''} CardDescription`}\n      sx={merge(\n        {\n          color: 'base.color.text.secondary',\n          textAlign: 'left',\n        },\n        sx,\n      )}\n      size={size}\n      weight={weight}\n      rc={rc}\n    />\n  );\n}\n\nCardDescription.displayName = 'Card.Description';\n","import merge from 'ts-deepmerge';\n\nimport { CloudImage, CloudImageProps } from '../CloudImage';\nimport { baseFramedStyles } from './styles';\n\nexport type CardFramedLogoProps = CloudImageProps;\n\nexport function CardFramedImage({\n  sx = {},\n  testId,\n  responsiveSizes = [32, 64, 128, 256],\n  className,\n  ...props\n}: CardFramedLogoProps) {\n  const framedLogoSx = merge(baseFramedStyles, sx);\n  return (\n    <CloudImage\n      {...props}\n      responsiveSizes={responsiveSizes}\n      testId={testId}\n      sx={framedLogoSx}\n      className={`${className ?? ''} CardFramedImage`}\n    />\n  );\n}\n\nCardFramedImage.displayName = 'Card.FramedImage';\n","export const baseContainerStyles = {\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  width: '100%',\n  brad: 'base.borderRadius.x4',\n  overflow: 'hidden',\n  position: 'relative',\n  boxShadow: 'base.shadow.100',\n  transitionProperty: 'box-shadow, translate',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n  '&.Card--selected': {\n    border: '2px solid',\n    borderColor: 'base.color.translucent.standard.1000',\n\n    '&::after': {\n      content: '\"\"',\n      pos: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      brad: 'base.borderRadius.x3',\n      border: '2px solid transparent',\n      pointerEvents: 'none',\n      userSelect: 'none',\n    },\n  },\n\n  '& .CardAssetImage': {\n    overflow: 'hidden',\n  },\n\n  '& .AspectRatioImage__inner__image': {\n    scale: '1.0',\n    transitionProperty: 'scale',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n  },\n\n  '&:hover:not(article)': {\n    boxShadow: 'base.shadow.300',\n    translate: '0 -8px',\n\n    '& .AspectRatioImage__inner__image': {\n      scale: '1.05',\n    },\n  },\n\n  '&:not(article):active': {\n    boxShadow: 'base.shadow.200',\n    translate: '0 -4px',\n  },\n\n  '&.Card--elevation1': {\n    bgc: 'base.color.neutral.900',\n\n    '&:hover:not(article)': {\n      bgc: 'base.color.neutral.700',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.700',\n      },\n    },\n\n    '&:not(article):active': {\n      bgc: 'base.color.neutral.800',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.800',\n      },\n    },\n\n    '&.Card--selected&::after': {\n      borderColor: 'base.color.neutral.900',\n    },\n  },\n\n  '&.Card--elevation2': {\n    bgc: 'base.color.neutral.800',\n\n    '&:hover:not(article)': {\n      bgc: 'base.color.neutral.600',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.600',\n      },\n    },\n\n    '&:not(article):active': {\n      bgc: 'base.color.neutral.700',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.700',\n      },\n    },\n\n    '&.Card--selected&::after': {\n      borderColor: 'base.color.neutral.800',\n    },\n  },\n\n  '&.Card--elevation3': {\n    bgc: 'base.color.neutral.700',\n\n    '&:hover:not(article)': {\n      bgc: 'base.color.neutral.500',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.500',\n      },\n    },\n\n    '&:not(article):active': {\n      bgc: 'base.color.neutral.600',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.600',\n      },\n    },\n\n    '&.Card--selected&::after': {\n      borderColor: 'base.color.neutral.700',\n    },\n  },\n\n  '&.Card--elevation4': {\n    bgc: 'base.color.neutral.600',\n\n    '&:hover:not(article)': {\n      bgc: 'base.color.neutral.500',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.500',\n      },\n    },\n\n    '&:not(article):active': {\n      bgc: 'base.color.neutral.500',\n\n      '&.Card--selected&::after': {\n        borderColor: 'base.color.neutral.500',\n      },\n    },\n\n    '&.Card--selected&::after': {\n      borderColor: 'base.color.neutral.600',\n    },\n  },\n\n  '&.Card--elevation5': {\n    bgc: 'base.color.neutral.500',\n\n    '&.Card--selected&::after': {\n      borderColor: 'base.color.neutral.500',\n    },\n  },\n};\n\nexport const baseFramedStyles = {\n  d: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  top: '-32px',\n  left: 'base.spacing.x6',\n  bg: 'base.color.neutral.900',\n  overflow: 'hidden',\n  width: 'base.icon.size[500]',\n  height: 'base.icon.size[500]',\n  borderRadius: 'base.borderRadius.x4',\n};\n","import merge from 'ts-deepmerge';\n\nimport { Box, BoxProps } from '../Box';\nimport { Logo, LogoProps } from '../Logo';\nimport { baseFramedStyles } from './styles';\n\nexport type CardFramedLogoProps = BoxProps & Pick<LogoProps, 'logo'>;\n\nexport function CardFramedLogo({\n  logo,\n  sx = {},\n  testId,\n  className,\n  ...props\n}: CardFramedLogoProps) {\n  const framedLogoSx = merge(baseFramedStyles, sx);\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      sx={framedLogoSx}\n      rc={<span />}\n      className={`${className ?? ''} CardFramedLogo`}\n    >\n      <Logo\n        logo={logo}\n        sx={merge(\n          {\n            width: '80%',\n          },\n          sx,\n        )}\n      />\n    </Box>\n  );\n}\nCardFramedLogo.displayName = 'Card.FramedLogo';\n","import { Ref } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { MenuItemProps } from '../../types';\nimport { MenuItem } from '../MenuItem';\n\nexport type CardMenuItemProps = MenuItemProps<undefined, undefined>;\n\nexport function CardMenuItem({\n  sx = {},\n  children,\n  size,\n  domRef,\n  className,\n  ...props\n}: CardMenuItemProps) {\n  return (\n    <MenuItem\n      {...props}\n      size={size}\n      domRef={domRef as Ref<HTMLButtonElement>}\n      sx={merge({ px: 'base.spacing.x5', bradbl: '0px', bradbr: '0px' }, sx)}\n      className={`${className ?? ''} CardMenuItem`}\n    >\n      {children}\n    </MenuItem>\n  );\n}\n\nCardMenuItem.displayName = 'Card.MenuItem';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { getHeadingTextStyles } from '../../utils/textStyleHelpers';\nimport { Box, BoxProps } from '../Box';\n\ntype BaseCardTitleProps = BoxProps;\n\nexport type CardTitleProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'span'> & BaseCardTitleProps\n    : BaseCardTitleProps & { rc: RC };\n\nexport function CardTitle<RC extends ReactElement | undefined = undefined>({\n  children,\n  sx = {},\n  rc = <span />,\n  className,\n  ...props\n}: CardTitleProps<RC>) {\n  const theme = useTheme();\n  const titleStyles = merge(\n    {\n      textAlign: 'left',\n      color: 'base.color.text.primary',\n      flexShrink: 0,\n      ...lineClamp(2),\n    },\n    getHeadingTextStyles({\n      themeProps: theme,\n      size: 'xSmall',\n      weight: 'bold',\n    }),\n    sx,\n  );\n  return (\n    <Box\n      {...props}\n      sx={titleStyles}\n      rc={rc}\n      className={`${className ?? ''} CardTitle`}\n    >\n      {children}\n    </Box>\n  );\n}\n\nCardTitle.displayName = 'Card.Title';\n","import merge from 'ts-deepmerge';\n\nimport { ModalComponentProps } from '../../types/overlays';\nimport { Modal } from '../Modal';\nimport { ModalTarget } from '../Modal/ModalTarget';\nimport { ConfirmationDialogContent } from './ConfirmationDialogContent';\n\nexport type ConfirmationDialogProps = ModalComponentProps & {};\n\nexport function ConfirmationDialog({\n  bgOverlaySx = {},\n  testId = 'ConfirmationDialog',\n  ...props\n}: ConfirmationDialogProps) {\n  return (\n    <Modal\n      {...props}\n      testId={testId}\n      ContentSubcomponent={ConfirmationDialogContent}\n      bgOverlaySx={merge(\n        { bg: 'base.color.translucent.standard.600' },\n        bgOverlaySx,\n      )}\n    />\n  );\n}\n\nConfirmationDialog.displayName = 'ConfirmationDialog';\nConfirmationDialog.Target = ModalTarget;\nConfirmationDialog.Content = ConfirmationDialogContent;\n","import {\n  cloneElement,\n  ComponentType,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n} from 'react';\n\nimport {\n  useBrowserEffect,\n  useBrowserLayoutEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n} from '../../hooks';\nimport {\n  CLOSE_MODAL,\n  OPEN_MODAL,\n  UPDATE_MODAL_PROPS,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { ModalComponentProps } from '../../types/overlays';\nimport { SmartClone } from '../SmartClone';\nimport { ModalContent, ModalContentProps } from './ModalContent';\nimport { ModalTarget } from './ModalTarget';\n\nexport function Modal({\n  visible,\n  id: idProp,\n  children,\n  domRef = { current: null },\n  onCloseModal,\n  showBgOverlay = true,\n  bgOverlaySx = {},\n  fullScreenUntilBreakpoint,\n  outsideClicksClose = true,\n  position = { x: 'center', y: 'center' },\n  testId = 'modal',\n  ContentSubcomponent = ModalContent,\n}: ModalComponentProps) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const target = useGetSubcomponentChild(children, ModalTarget);\n  const content = useGetSubcomponentChild(\n    children,\n    ContentSubcomponent as ComponentType<ModalContentProps<undefined>>,\n  );\n\n  const { state: modalList, dispatchAction } = useOverlaysStore(\n    state => state.modalList,\n  );\n  const isControlled = useMemo(() => typeof visible !== 'undefined', [visible]);\n\n  const modalProps = useMemo(\n    () => ({\n      id,\n      content: content ? cloneElement(content, { id }) : null,\n      targetRef: localDomRef,\n      showBgOverlay,\n      isControlled,\n      onCloseModal,\n      outsideClicksClose,\n      bgOverlaySx,\n      fullScreenUntilBreakpoint,\n      position,\n      testId,\n    }),\n    [\n      bgOverlaySx,\n      content,\n      fullScreenUntilBreakpoint,\n      id,\n      isControlled,\n      localDomRef,\n      onCloseModal,\n      outsideClicksClose,\n      position,\n      showBgOverlay,\n      testId,\n    ],\n  );\n\n  // @NOTE: this useEffect allows the Modal props to stay up to date,\n  // as the application re-renders and things potentially change\n  useEffect(() => {\n    dispatchAction({\n      type: UPDATE_MODAL_PROPS,\n      payload: modalProps,\n    });\n  }, [dispatchAction, modalProps]);\n\n  const closeModal = useCallback(() => {\n    dispatchAction({\n      type: CLOSE_MODAL,\n      payload: { id },\n    });\n    onCloseModal?.();\n  }, [dispatchAction, onCloseModal, id]);\n\n  const showModal = useCallback(() => {\n    dispatchAction({\n      type: OPEN_MODAL,\n      payload: modalProps,\n    });\n  }, [dispatchAction, modalProps]);\n\n  useBrowserLayoutEffect(() => {\n    if (visible) {\n      showModal();\n    } else if (modalList.find(modal => modal.id === id)) {\n      closeModal();\n    }\n    // @NOTE: we want to trigger these changes ONLY when the visible prop changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  // @NOTE: when the Modal is unmounted, call to remove it from the modalList\n  useBrowserEffect(() => {\n    return () => closeModal();\n  }, []);\n\n  const onClickProps = useMemo(() => {\n    return !isControlled\n      ? {\n          onClick: () => {\n            if (modalList.find(modal => modal.id === id)) {\n              closeModal();\n            } else {\n              showModal();\n            }\n          },\n        }\n      : {};\n  }, [modalList, isControlled, id, closeModal, showModal]);\n\n  return target ? (\n    <SmartClone {...onClickProps} id={id} domRef={localDomRef} testId={testId}>\n      {target}\n    </SmartClone>\n  ) : null;\n}\n\nModal.displayName = 'Modal';\nModal.Content = ModalContent;\nModal.Target = ModalTarget;\n","import { Children, ReactElement, ReactNode } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useGetSubcomponentChildren,\n  useSplitApartChildrenAndSubComponents,\n} from '../../hooks';\nimport { setDefaultMinWidthSx } from '../../utils/styleHelpers';\nimport { vFlex } from '../../utils/sxChunks';\nimport { AspectRatioImage } from '../AspectRatioImage';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { Button } from '../Clickable';\nimport { DuoCon } from '../DuoCon';\nimport { ModalContent } from '../Modal/ModalContent';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport { Body, Heading } from '../Text';\nimport { ConfirmationDialogContentRiveBox } from './ConfirmationDialogContentRiveBox';\n\nexport type ConfirmationDialogTextAlign = 'left' | 'center';\nexport type ConfirmationDialogContentProps<\n  RC extends ReactElement | undefined,\n> = BoxWithRCAndDomProps<RC> & {\n  children?: ReactNode;\n  textAlign?: ConfirmationDialogTextAlign;\n  id?: string;\n};\n\nexport function ConfirmationDialogContent<\n  RC extends ReactElement | undefined = undefined,\n>({\n  children,\n  sx = {},\n  testId,\n  textAlign = 'center',\n  ...props\n}: ConfirmationDialogContentProps<RC>) {\n  const aspectRatioImage = useGetSubcomponentChild(children, AspectRatioImage);\n  const riveBox = useGetSubcomponentChild(\n    children,\n    ConfirmationDialogContentRiveBox,\n  );\n  const duoCon = useGetSubcomponentChild(children, DuoCon);\n  const buttons = useGetSubcomponentChildren(children, Button);\n  const title = useGetSubcomponentChild(children, Heading);\n  const captions = useGetSubcomponentChildren(children, Body);\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    DuoCon,\n    Button,\n    Heading,\n    Body,\n    AspectRatioImage,\n    ConfirmationDialogContentRiveBox,\n  ]);\n\n  console.log('@@@@@2', otherChildren);\n  return (\n    <ModalContent\n      {...props}\n      sx={merge(\n        setDefaultMinWidthSx(sx, '320px'),\n        {\n          ...vFlex,\n          justifyContent: 'center',\n          bg: 'base.color.neutral.500',\n          boxShadow: 'base.shadow.500',\n          brad: 'base.borderRadius.x8',\n          p: '0px',\n        },\n        sx,\n      )}\n      testId={testId}\n    >\n      {aspectRatioImage ? (\n        <SmartClone testId={`${testId}__aspectRaioImage`}>\n          {aspectRatioImage}\n        </SmartClone>\n      ) : riveBox ? (\n        <SmartClone testId={riveBox.props.testId ?? `${testId}__riveBox`}>\n          {riveBox}\n        </SmartClone>\n      ) : duoCon ? (\n        <Stack\n          alignItems=\"center\"\n          justifyContent={textAlign === 'center' ? 'center' : 'flex-start'}\n          gap=\"0px\"\n          sx={{\n            pt: 'base.spacing.x10',\n            ml: textAlign === 'center' ? 'unset' : 'base.spacing.x6',\n          }}\n          testId={`${testId}__duoConContainer`}\n        >\n          <SmartClone\n            sx={{ w: '72px' }}\n            testId={`${testId}__duoConContainer__duoCon`}\n          >\n            {duoCon}\n          </SmartClone>\n        </Stack>\n      ) : null}\n\n      <Stack\n        gap=\"0px\"\n        sx={{\n          px: 'base.spacing.x6',\n          pt: 'base.spacing.x8',\n          pb: 'base.spacing.x10',\n          textAlign,\n        }}\n      >\n        {title && (\n          <SmartClone\n            size=\"small\"\n            sx={{ textAlign }}\n            testId={`${testId}__title`}\n          >\n            {title}\n          </SmartClone>\n        )}\n\n        {captions && (\n          <Box\n            sx={{\n              ...vFlex,\n              gap: 'base.spacing.x3',\n              pt: 'base.spacing.x2',\n              textAlign,\n            }}\n            testId={`${testId}__captions`}\n          >\n            {Children.map(captions, child => (\n              <SmartClone\n                size=\"small\"\n                sx={{ textAlign }}\n                testId={`${testId}__captions__caption`}\n              >\n                {child}\n              </SmartClone>\n            ))}\n          </Box>\n        )}\n\n        {buttons && (\n          <Box\n            testId={`${testId}__buttons`}\n            sx={{\n              ...vFlex,\n              gap: 'base.spacing.x2',\n              mt: 'base.spacing.x8',\n            }}\n          >\n            {Children.map(buttons, child => (\n              <SmartClone testId={`${testId}__buttons__button`}>\n                {child}\n              </SmartClone>\n            ))}\n          </Box>\n        )}\n\n        {otherChildren}\n      </Stack>\n    </ModalContent>\n  );\n}\n\nConfirmationDialogContent.displayName = 'ConfirmationDialog.Content';\nConfirmationDialogContent.RiveBox = ConfirmationDialogContentRiveBox;\nConfirmationDialogContent.AspectRatioImage = AspectRatioImage;\nConfirmationDialogContent.DuoCon = DuoCon;\nConfirmationDialogContent.Title = Heading;\nConfirmationDialogContent.Caption = Body;\nConfirmationDialogContent.Button = Button;\n","import { Colors } from '@biom3/design-tokens';\nimport { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { IconVariant } from '../../types/icon';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { AllIconKeys, Icon } from '../Icon';\nimport { SvgIcon } from '../SvgIcon';\nimport { getBgFillColoring, getFillColoring } from './styles';\n\nexport type DuoConColorVariant = keyof Colors['status'];\nexport type DuoConProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    outerShape?: 'circle' | 'octogon';\n    icon: AllIconKeys;\n    variant?: IconVariant;\n    colorVariant?: DuoConColorVariant;\n    iconVariant?: IconVariant;\n  };\n\nexport function DuoCon<RC extends ReactElement | undefined = undefined>({\n  icon,\n  variant = 'regular',\n  iconVariant = 'regular',\n  colorVariant = 'guidance',\n  outerShape = 'circle',\n  testId,\n  sx = {},\n  ...props\n}: DuoConProps<RC>) {\n  const theme = useTheme();\n  const bgFill = useMemo(\n    () =>\n      getBgFillColoring(\n        theme.base.colorMode === 'lightOnDark',\n        colorVariant,\n        variant,\n      ),\n    [theme, colorVariant, variant],\n  );\n  const fill = useMemo(\n    () =>\n      getFillColoring(\n        theme.base.colorMode === 'lightOnDark',\n        colorVariant,\n        variant,\n      ),\n    [theme, colorVariant, variant],\n  );\n  const outerMergedSx = useMemo(\n    () =>\n      merge(\n        {\n          w: 'base.icon.size.600',\n          d: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n\n          '&::before': {\n            content: '\"\"',\n            w: '100%',\n            pb: '100%',\n          },\n        },\n        sx,\n      ),\n    [sx],\n  );\n  const outerShapeSx = useMemo(\n    () => ({\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      w: '100%',\n      fill: bgFill,\n    }),\n    [bgFill],\n  );\n  const innerIconSx = useMemo(\n    () => ({\n      w: '58.33%',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      translate: '-50% -50%',\n      fill,\n    }),\n    [fill],\n  );\n  return (\n    <Box {...props} sx={outerMergedSx} testId={testId}>\n      <SvgIcon\n        sx={outerShapeSx}\n        data-outer-shape={outerShape}\n        testId={`${testId}__outerShape`}\n        viewBox=\"0 0 24 24\"\n      >\n        {outerShape === 'circle' ? (\n          <circle cx=\"12\" cy=\"12\" r=\"11\" />\n        ) : (\n          <path d=\"M7.65076 1.5L16.3492 1.5L22.5 7.65076V16.3492L16.3492 22.5H7.65076L1.5 16.3492L1.5 7.65076L7.65076 1.5Z\" />\n        )}\n      </SvgIcon>\n      <Icon\n        icon={icon}\n        sx={innerIconSx}\n        variant={iconVariant}\n        testId={`${testId}__icon`}\n      />\n    </Box>\n  );\n}\n","import { IconVariant } from '../../types';\nimport { DuoConColorVariant } from './DuoCon';\n\nexport function getBgFillColoring(\n  isDarkMode: boolean,\n  colorVariant: DuoConColorVariant,\n  variant: IconVariant,\n) {\n  return isDarkMode && variant === 'regular'\n    ? 'base.color.translucent.standard.400'\n    : isDarkMode && variant === 'bold'\n    ? `base.color.status.${colorVariant}.bright`\n    : variant === 'regular'\n    ? 'base.color.translucent.standard.800'\n    : `base.color.status.${colorVariant}.bright`;\n}\n\nexport function getFillColoring(\n  isDarkMode: boolean,\n  colorVariant: DuoConColorVariant,\n  variant: IconVariant,\n) {\n  return isDarkMode && variant === 'regular'\n    ? `base.color.status.${colorVariant}.bright`\n    : isDarkMode && variant === 'bold'\n    ? 'base.color.text.inverse.primary'\n    : variant === 'regular'\n    ? `base.color.status.${colorVariant}.bright`\n    : 'base.color.text.primary';\n}\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type ConfirmationDialogContentAnimationBoxProps<\n  RC extends ReactElement | undefined,\n> = BoxWithRCAndDomProps<RC> & {};\n\nexport function ConfirmationDialogContentRiveBox<\n  RC extends ReactElement | undefined,\n>({ sx = {}, rc, ...props }: ConfirmationDialogContentAnimationBoxProps<RC>) {\n  return (\n    <Box\n      {...props}\n      sx={merge({ w: '100%', height: '250px', flexShrink: 0 }, sx)}\n    >\n      {rc}\n    </Box>\n  );\n}\n\nConfirmationDialogContentRiveBox.displayName =\n  'ConfirmationDialog.Content.RiveBox';\n","import { ReactElement, useEffect, useMemo, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useBrowserEffect,\n  useGetCurrentSizeClass,\n  useInterval,\n  useTheme,\n} from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { warnUser } from '../../utils';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Stack, StackProps } from '../Stack';\nimport { CountdownTile } from './CountdownTile';\nimport {\n  COUNTDOWN_TIMER_SIZES,\n  CountdownTimerSize,\n  CountdownTimerVariant,\n  DEFAULT_COUNTDOWN_TIMER_SIZE,\n  DEFAULT_COUNTDOWN_TIMER_VARIANT,\n} from './shared';\nimport {\n  countDownContainerBaseSx,\n  getContainerSx,\n  getResponsiveContainerSx,\n} from './styles';\n\nexport type CountdownTimerProps<\n  RC extends ReactElement | undefined = undefined,\n> = StackProps<RC> & {\n  futureTarget: Date;\n  size?: MakeResponsive<CountdownTimerSize>;\n  variant?: CountdownTimerVariant;\n  onCountdownEnd?: () => void;\n};\n\nfunction getTimeLeft(futureTarget: Date) {\n  const diffTime = Math.abs(\n    new Date().valueOf() - new Date(futureTarget).valueOf(),\n  );\n  let days = diffTime / (24 * 60 * 60 * 1000);\n  let hours = (days % 1) * 24;\n  let minutes = (hours % 1) * 60;\n  let seconds = (minutes % 1) * 60;\n  [days, hours, minutes, seconds] = [\n    Math.floor(days),\n    Math.floor(hours),\n    Math.floor(minutes),\n    Math.floor(seconds),\n  ];\n  return { days, hours, minutes, seconds };\n}\n\nexport function CountdownTimer<\n  RC extends ReactElement | undefined = undefined,\n>({\n  futureTarget,\n  size = DEFAULT_COUNTDOWN_TIMER_SIZE,\n  variant = DEFAULT_COUNTDOWN_TIMER_VARIANT,\n  className,\n  testId,\n  onCountdownEnd,\n  direction = 'row',\n  justifyContent = 'space-between',\n  sx = {},\n  ...props\n}: CountdownTimerProps<RC>) {\n  const theme = useTheme();\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n  useBrowserEffect(() => {\n    setTimeLeft(getTimeLeft(futureTarget));\n  }, []);\n  const pollIntervalRef = useInterval(() => {\n    const newTimeLeft = getTimeLeft(futureTarget);\n    const now = new Date();\n    if (\n      now >= futureTarget ||\n      (newTimeLeft.days === 0 &&\n        newTimeLeft.hours === 0 &&\n        newTimeLeft.minutes === 0 &&\n        newTimeLeft.seconds === 0)\n    ) {\n      setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      clearInterval(pollIntervalRef.current);\n      return onCountdownEnd?.();\n    }\n    return setTimeLeft(newTimeLeft);\n  }, 1000);\n\n  useEffect(() => {\n    const now = new Date();\n    if (now >= futureTarget) {\n      warnUser(\n        `CountdownTimer has recieved ${futureTarget.toLocaleString()} as a futureTarget. This is invalid, as it is in the past.\n  Timer interval has been disabled`,\n      );\n      clearInterval(pollIntervalRef.current);\n      setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    }\n  }, [futureTarget, pollIntervalRef]);\n\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_COUNTDOWN_TIMER_SIZE,\n    COUNTDOWN_TIMER_SIZES,\n  );\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_COUNTDOWN_TIMER_SIZE,\n    COUNTDOWN_TIMER_SIZES,\n  );\n  const allSx = useMemo(\n    () =>\n      merge(\n        countDownContainerBaseSx,\n        getContainerSx({ theme, size: startingSize }),\n        getResponsiveContainerSx({ theme, size }),\n        sx,\n      ),\n    [sx, theme, size, startingSize],\n  );\n\n  return (\n    <Stack\n      {...props}\n      direction={direction}\n      justifyContent={justifyContent}\n      testId={testId}\n      sx={allSx}\n      className={`${\n        className ?? ''\n      } CountdownTimer CountdownTimer--${variant} CountdownTimer--${sizeClass}`}\n    >\n      <CountdownTile\n        label=\"days\"\n        digit={timeLeft.days}\n        size={size}\n        variant={variant}\n      />\n      <CountdownTile\n        label=\"hours\"\n        digit={timeLeft.hours}\n        size={size}\n        variant={variant}\n      />\n      <CountdownTile\n        label=\"minutes\"\n        digit={timeLeft.minutes}\n        size={size}\n        variant={variant}\n      />\n      <CountdownTile\n        label=\"seconds\"\n        digit={timeLeft.seconds}\n        size={size}\n        variant={variant}\n      />\n    </Stack>\n  );\n}\n\nCountdownTimer.displayName = 'CountdownTimer';\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { useWindowSizeStore } from '../../providers';\nimport { MakeResponsive, StandardComponentWithProps } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Stack } from '../Stack';\nimport { Body, Heading, RollingText } from '../Text';\nimport {\n  COUNTDOWN_TIMER_SIZES,\n  CountdownTimerSize,\n  CountdownTimerVariant,\n  DEFAULT_COUNTDOWN_TIMER_SIZE,\n  DEFAULT_COUNTDOWN_TIMER_VARIANT,\n} from './shared';\nimport {\n  baseTileSx,\n  getResponsiveTileSx,\n  getTileSx,\n  getTileVariantSx,\n} from './styles';\n\nexport type CountdownTileProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    digit: number;\n    label: string;\n    size?: MakeResponsive<CountdownTimerSize>;\n    variant?: CountdownTimerVariant;\n  }\n>;\n\nfunction pickLabelFontWeight(size: CountdownTimerSize) {\n  switch (size) {\n    case 'xLarge':\n      return 'bold';\n\n    case 'small':\n    case 'medium':\n    case 'large':\n    default:\n      return 'regular';\n  }\n}\n\nfunction pickLabelFontSize(size: CountdownTimerSize) {\n  switch (size) {\n    case 'large':\n      return 'xSmall';\n\n    case 'xLarge':\n      return 'small';\n\n    case 'small':\n    case 'medium':\n    default:\n      return 'xxSmall';\n  }\n}\n\nfunction pickDigitComponent(size: CountdownTimerSize) {\n  switch (size) {\n    case 'small':\n      return <Body size=\"xxSmall\" weight=\"bold\" />;\n    case 'large':\n      return <Body size=\"large\" weight=\"bold\" />;\n    case 'xLarge':\n      return <Heading size=\"medium\" weight=\"bold\" />;\n    case 'medium':\n    default:\n      return <Body size=\"small\" weight=\"bold\" />;\n  }\n}\n\nfunction usePickDigitComponent(\n  size: MakeResponsive<CountdownTimerSize>,\n): ReactElement | undefined {\n  const { state: width } = useWindowSizeStore(state => state.width);\n  const {\n    base: { breakpointAsArray },\n  } = useTheme();\n\n  const picked = useMemo(() => {\n    const defaultSize = pickDigitComponent('medium');\n    if (width === null) return defaultSize;\n    if (Array.isArray(size)) {\n      const actualResponsiveSizes = [...size];\n      actualResponsiveSizes.shift();\n      return actualResponsiveSizes.reduce((accum, curr, index) => {\n        let newAccum = accum;\n        if (curr !== null && width >= breakpointAsArray[index]) {\n          newAccum = pickDigitComponent(curr as CountdownTimerSize);\n        }\n        return newAccum;\n      }, defaultSize);\n    }\n\n    return /small|medium|large|xLarge/.test(size)\n      ? pickDigitComponent(size)\n      : undefined;\n  }, [breakpointAsArray, size, width]);\n\n  return picked;\n}\n\nexport function CountdownTile({\n  digit,\n  label,\n  size = DEFAULT_COUNTDOWN_TIMER_SIZE,\n  variant = DEFAULT_COUNTDOWN_TIMER_VARIANT,\n  sx = {},\n  ...props\n}: CountdownTileProps) {\n  const theme = useTheme();\n  const prettyDigit = useMemo(\n    () => (digit < 10 ? `0${digit}` : digit),\n    [digit],\n  );\n  const pickedDigitUseComponent = usePickDigitComponent(size);\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_COUNTDOWN_TIMER_SIZE,\n    COUNTDOWN_TIMER_SIZES,\n  );\n  const allSx = merge(\n    baseTileSx,\n    getTileVariantSx(variant),\n    getTileSx({ size: startingSize, theme }),\n    getResponsiveTileSx({ size, theme }),\n    sx,\n  );\n  const labelTextSize = useMemo(() => {\n    if (Array.isArray(size)) {\n      return size.map(s => {\n        return pickLabelFontSize(s as CountdownTimerSize);\n      });\n    }\n    return pickLabelFontSize(size);\n  }, [size]);\n  const labelFontWeight = useMemo(() => {\n    if (Array.isArray(size)) {\n      return size.map(s => {\n        return pickLabelFontWeight(s as CountdownTimerSize);\n      });\n    }\n    return pickLabelFontWeight(size);\n  }, [size]);\n\n  return (\n    <Stack\n      {...props}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap=\"0px\"\n      sx={allSx}\n      className=\"CountdownTile\"\n      testId={`CountdownTimer__Tile--${label}`}\n    >\n      <RollingText\n        text={prettyDigit.toString()}\n        use={pickedDigitUseComponent}\n        testId=\"CountdownTimer__tile__textRoller\"\n      />\n      <Body\n        size={labelTextSize as MakeResponsive<BodySize>}\n        weight={labelFontWeight as MakeResponsive<BodyWeight>}\n        testId=\"CountdownTimer__tile__label\"\n      >\n        {label}\n      </Body>\n    </Stack>\n  );\n}\n","export const COUNTDOWN_TIMER_SIZES = [\n  'small',\n  'medium',\n  'large',\n  'xLarge',\n] as const;\nexport const DEFAULT_COUNTDOWN_TIMER_SIZE = COUNTDOWN_TIMER_SIZES[1];\nexport type CountdownTimerSize = (typeof COUNTDOWN_TIMER_SIZES)[number];\n\nexport const COUNTDOWN_TIMER_VARIANTS = ['primary', 'inverse'] as const;\nexport const DEFAULT_COUNTDOWN_TIMER_VARIANT = COUNTDOWN_TIMER_VARIANTS[0];\nexport type CountdownTimerVariant = (typeof COUNTDOWN_TIMER_VARIANTS)[number];\n","import { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport { CountdownTimerSize, CountdownTimerVariant } from './shared';\n\nexport const countDownContainerBaseSx = {\n  flexShrink: 0,\n  flexGrow: 0,\n  position: 'relative',\n};\n\nexport const baseTileSx = {\n  backdropFilter: 'blur(28px)',\n};\n\nexport function getContainerSx({\n  size,\n}: {\n  size: CountdownTimerSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        width: '204px',\n      };\n\n    case 'large':\n      return {\n        width: '292px',\n      };\n\n    case 'xLarge':\n      return {\n        width: '356px',\n      };\n\n    case 'medium':\n    default:\n      return {\n        width: '216px',\n      };\n  }\n}\n\nexport const getResponsiveContainerSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<CountdownTimerSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx,\n  });\n\nexport function getTileSx({\n  size,\n  theme,\n}: {\n  size: CountdownTimerSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        width: theme.base.spacing.x12,\n        height: theme.base.spacing.x8,\n        borderRadius: theme.base.borderRadius.x2,\n      };\n\n    case 'large':\n      return {\n        width: theme.base.spacing.x16,\n        height: theme.base.spacing.x16,\n        borderRadius: theme.base.borderRadius.x6,\n      };\n\n    case 'xLarge':\n      return {\n        width: theme.base.spacing.x20,\n        height: theme.base.spacing.x20,\n        borderRadius: theme.base.borderRadius.x6,\n      };\n\n    case 'medium':\n    default:\n      return {\n        width: theme.base.spacing.x12,\n        height: theme.base.spacing.x12,\n        borderRadius: theme.base.borderRadius.x4,\n      };\n  }\n}\n\nexport const getResponsiveTileSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<CountdownTimerSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getTileSx,\n  });\n\nexport function getTileVariantSx(variant: CountdownTimerVariant) {\n  switch (variant) {\n    case 'inverse':\n      return {\n        bg: 'base.color.translucent.inverse.600',\n      };\n\n    case 'primary':\n    default:\n      return {\n        bg: 'base.color.translucent.standard.100',\n      };\n  }\n}\n","import { PropsOf } from '@emotion/react';\nimport {\n  Children,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useId,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChild } from '../../hooks';\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport { Autocomplete } from '../Autocomplete';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { Checkbox } from '../Checkbox';\nimport { NumberStepper } from '../NumberStepper';\nimport { Radio } from '../Radio';\nimport { Select } from '../Select';\nimport { SmartClone } from '../SmartClone';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput/shared';\nimport { Toggle } from '../Toggle';\nimport { FormControlCaption } from './FormControlCaption';\nimport { FormControlLabel } from './FormControlLabel';\nimport { FormControlValidation } from './FormControlValidation';\n\nexport type FormControlProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    children?: ReactNode;\n    id?: string;\n    validationStatus?: InputValidationStatus;\n    textAlign?: InputTextAlign;\n  };\n\nconst SUPPORTED_INPUT_COMPONENTS = [\n  TextArea,\n  TextInput,\n  Checkbox,\n  Toggle,\n  Radio,\n  Select,\n  Autocomplete,\n  NumberStepper,\n] as const;\n\nexport function FormControl<RC extends ReactElement | undefined = undefined>({\n  domRef,\n  sx = {},\n  id: idProp,\n  testId,\n  children,\n  validationStatus,\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  ...domAttributes\n}: FormControlProps<RC>) {\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const label = useGetSubcomponentChild(children, FormControlLabel);\n  const caption = useGetSubcomponentChild(children, FormControlCaption);\n  const validation = useGetSubcomponentChild(children, FormControlValidation);\n\n  // Typescript struggles to type 'find' and infer prop types, so we need to cast here.\n  const inputComponent = Children.toArray(children).find(child =>\n    SUPPORTED_INPUT_COMPONENTS.some(\n      inputEl => isValidElement(child) && child.type === inputEl,\n    ),\n  ) as ReactElement<PropsOf<(typeof SUPPORTED_INPUT_COMPONENTS)[number]>>;\n\n  const shouldUseColumnBasedLayout =\n    isValidElement(inputComponent) &&\n    (inputComponent.type === TextArea ||\n      inputComponent.type === TextInput ||\n      inputComponent.type === Select ||\n      inputComponent.type === Autocomplete ||\n      inputComponent.type === NumberStepper);\n\n  return (\n    <Box\n      {...domAttributes}\n      domRef={domRef}\n      testId={testId}\n      sx={merge(\n        {\n          display: 'flex',\n          flexDirection: shouldUseColumnBasedLayout ? 'column' : 'row',\n          gap: 'base.spacing.x1',\n        },\n        sx,\n      )}\n    >\n      {shouldUseColumnBasedLayout ? (\n        <>\n          {label && (\n            <SmartClone\n              textAlign={label.props.textAlign || textAlign}\n              htmlFor={id}\n            >\n              {label}\n            </SmartClone>\n          )}\n          {inputComponent && (\n            <SmartClone\n              textAlign={inputComponent.props.textAlign || textAlign}\n              id={id}\n              validationStatus={\n                inputComponent.props.validationStatus || validationStatus\n              }\n            >\n              {inputComponent}\n            </SmartClone>\n          )}\n          {caption && (\n            <SmartClone\n              textAlign={caption.props.textAlign || textAlign}\n              htmlFor={id}\n            >\n              {caption}\n            </SmartClone>\n          )}\n          {validation && (\n            <SmartClone\n              htmlFor={id}\n              textAlign={validation.props.textAlign || textAlign}\n              validationStatus={\n                validation.props.validationStatus || validationStatus\n              }\n            >\n              {validation}\n            </SmartClone>\n          )}\n        </>\n      ) : (\n        <>\n          <Box\n            sx={{\n              d: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            {label && (\n              <SmartClone\n                textAlign={label.props.textAlign || textAlign}\n                htmlFor={id}\n              >\n                {label}\n              </SmartClone>\n            )}\n            {caption && (\n              <SmartClone\n                htmlFor={id}\n                textAlign={caption.props.textAlign || textAlign}\n              >\n                {caption}\n              </SmartClone>\n            )}\n            {validation && (\n              <SmartClone\n                htmlFor={id}\n                textAlign={validation.props.textAlign || textAlign}\n                validationStatus={\n                  validation.props.validationStatus || validationStatus\n                }\n              >\n                {validation}\n              </SmartClone>\n            )}\n          </Box>\n\n          {inputComponent && (\n            <SmartClone\n              id={id}\n              validationStatus={\n                inputComponent.props.validationStatus || validationStatus\n              }\n              sx={merge(\n                {\n                  order: textAlign === 'left' ? '-1' : '1',\n                  ...(textAlign === 'left'\n                    ? { mr: 'base.spacing.x2' }\n                    : { ml: 'base.spacing.x2' }),\n                },\n                { ...inputComponent.props.sx },\n              )}\n            >\n              {inputComponent}\n            </SmartClone>\n          )}\n        </>\n      )}\n    </Box>\n  );\n}\n\nFormControl.displayName = 'FormControl';\nFormControl.Label = FormControlLabel;\nFormControl.Validation = FormControlValidation;\nFormControl.Caption = FormControlCaption;\n","import {\n  ChangeEventHandler,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { noop } from '../../utils';\nimport { ButtCon } from '../Clickable';\nimport { Stack } from '../Stack';\nimport { Body } from '../Text';\nimport { Tooltip } from '../Tooltip';\n\nexport const DEFAULT_NUMBER_STEPPER_SIZE = 'medium' as const;\nexport const NUMBER_STEPPER_SIZES = ['medium', 'large'] as const;\nexport type NumberStepperSize = (typeof NUMBER_STEPPER_SIZES)[number];\n\ntype NumericalString = `${number}`;\n\nexport type NumberStepperProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    id?: string;\n    name?: string;\n    defaultValue?: NumericalString;\n    value?: NumericalString;\n    onChange?: (newValue: NumericalString) => void;\n    step?: NumericalString;\n    size?: MakeResponsive<NumberStepperSize>;\n    min?: NumericalString;\n    max?: NumericalString;\n    minErrorText?: string;\n    maxErrorText?: string;\n    // @NOTE: these props are neccissary for FormControl to support this component\n    // ATM they have no affect on how NumberStepper is rendered though.\n    textAlign?: InputTextAlign;\n    validationStatus?: InputValidationStatus;\n  }\n>;\n\nexport function NumberStepper<RC extends ReactElement | undefined = undefined>({\n  value,\n  defaultValue = '0',\n  step = '1',\n  size,\n  onChange,\n  min,\n  max,\n  name,\n  id = name,\n  minErrorText = 'Minimum value reached',\n  maxErrorText = 'Maximum value reached',\n  testId = 'NumberStepper',\n  textAlign,\n  validationStatus,\n  className,\n  ...props\n}: RC extends undefined\n  ? Omit<DomPropsWithDomRef<'div'>, 'onChange'> & NumberStepperProps\n  : NumberStepperProps & { rc: RC }) {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isControlled = typeof value === 'string';\n  const [uncontrolledValue, setUncontrolledValue] = useState<string>(\n    isControlled ? value : defaultValue,\n  );\n  const valueToUse = value ?? uncontrolledValue;\n  const isAtMin = useMemo(() => valueToUse === min, [min, valueToUse]);\n  const isAtMax = useMemo(() => valueToUse === max, [max, valueToUse]);\n  const handleIncrement = useCallback(() => {\n    if (isControlled) {\n      inputRef.current?.stepUp();\n      onChange?.((inputRef.current?.value ?? '') as NumericalString);\n      // @NOTE: once the calc has been done, reset the input's value, so that it\n      // only changes when the prop `value` changes\n      if (inputRef.current) {\n        inputRef.current.value = value;\n      }\n    } else {\n      if (isAtMax) return;\n      inputRef.current?.stepUp();\n      setUncontrolledValue(inputRef.current?.value ?? '');\n      onChange?.((inputRef.current?.value ?? '') as NumericalString);\n    }\n  }, [isAtMax, isControlled, onChange, value]);\n  const handleDecrement = useCallback(() => {\n    if (isControlled) {\n      inputRef.current?.stepDown();\n      onChange?.((inputRef.current?.value ?? '') as NumericalString);\n      // @NOTE: once the calc has been done, reset the input's value, so that it\n      // only changes when the prop `value` changes\n      if (inputRef.current) {\n        inputRef.current.value = value;\n      }\n    } else {\n      if (isAtMin) return;\n      inputRef.current?.stepDown();\n      setUncontrolledValue(inputRef.current?.value ?? '');\n      onChange?.((inputRef.current?.value ?? '') as NumericalString);\n    }\n  }, [isAtMin, isControlled, onChange, value]);\n\n  const incrementButton = (\n    <ButtCon\n      size={size}\n      icon=\"Add\"\n      variant=\"tertiary\"\n      onClick={handleIncrement}\n      testId={`${testId}__incrementBtn`}\n    />\n  );\n  const decrementButton = (\n    <ButtCon\n      size={size}\n      icon=\"Minus\"\n      variant=\"tertiary\"\n      onClick={handleDecrement}\n      testId={`${testId}__decrementBtn`}\n    />\n  );\n\n  return (\n    <Stack\n      {...props}\n      direction=\"row\"\n      alignItems=\"center\"\n      className={`${className ?? ''} NumberStepper`}\n      testId={testId}\n    >\n      {isAtMin ? (\n        // @TODO: perhaps a styled up Popover would be better than a tooltip here,\n        // given that it should appear on click/tap, rather than hover?\n        <Tooltip size=\"small\">\n          <Tooltip.Target>{decrementButton}</Tooltip.Target>\n          <Tooltip.Content testId={`${testId}__tooltipContent`}>\n            {minErrorText}\n          </Tooltip.Content>\n        </Tooltip>\n      ) : (\n        decrementButton\n      )}\n      <Body testId={`${testId}__value`}>{valueToUse}</Body>\n      {/* \n        @NOTE: we use a simple number input here, because simple float arithmetic when using JS\n        causes issues, eg: 0.1 * 0.2 = 0.020000000000000004 :facepalm:\n      */}\n      <input\n        type=\"number\"\n        name={name}\n        id={id}\n        value={valueToUse.toString()}\n        ref={inputRef}\n        step={step}\n        css={{ display: 'none' }}\n        onChange={\n          (isControlled\n            ? onChange\n            : noop) as unknown as ChangeEventHandler<HTMLInputElement>\n        }\n        data-testid={`${testId}__input`}\n      />\n      {isAtMax ? (\n        // @TODO: perhaps a styled up Popover would be better than a tooltip here,\n        // given that it should appear on click/tap, rather than hover\n        <Tooltip size=\"small\">\n          <Tooltip.Target>{incrementButton}</Tooltip.Target>\n          <Tooltip.Content testId={`${testId}__tooltipContent`}>\n            {maxErrorText}\n          </Tooltip.Content>\n        </Tooltip>\n      ) : (\n        incrementButton\n      )}\n    </Stack>\n  );\n}\n\nNumberStepper.displayName = 'NumberStepper';\n","import { useCallback, useEffect, useId, useMemo, useState } from 'react';\n\nimport {\n  useBrowserEffect,\n  useForwardLocalDomRef,\n  useGetSubcomponentChild,\n} from '../../hooks';\nimport { useTooltipStore } from '../../providers';\nimport {\n  CLEAR_TOOLTIP,\n  STORE_TOOLTIP,\n  UPDATE_TOOLTIP_CONTENT,\n} from '../../providers/BiomeTooltipProvider/context';\nimport {\n  DEFAULT_TOOLTIP_SIZE,\n  TooltipComponentProps,\n} from '../../types/tooltip';\nimport { SmartClone } from '../SmartClone';\nimport {\n  recursivelyAddTooltipAttrsToChildNodes,\n  TooltipComponentContext,\n} from './shared';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipTarget } from './TooltipTarget';\n\nexport function Tooltip({\n  id: idProp,\n  children,\n  size = DEFAULT_TOOLTIP_SIZE,\n  domRef = { current: null },\n  ...props\n}: TooltipComponentProps) {\n  const localDomRef = useForwardLocalDomRef(domRef);\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const target = useGetSubcomponentChild(children, TooltipTarget);\n  const content = useGetSubcomponentChild(children, TooltipContent);\n  const { dispatchAction } = useTooltipStore(state => state);\n\n  const [currentTooltipId, setCurrentTooltipId] = useState('');\n\n  // @NOTE: this useEffect allows Modal content to stay up to date,\n  // as the application re-renders and children potentially change\n  useEffect(() => {\n    dispatchAction({\n      type: UPDATE_TOOLTIP_CONTENT,\n      payload: {\n        id,\n        content,\n      },\n    });\n  }, [content, id, dispatchAction]);\n\n  // @NOTE: we cannot have the uuid change, when this component re-renders,\n  // so, we need to set it once and only once at component onMount.\n  useBrowserEffect(() => {\n    setCurrentTooltipId(id);\n\n    return () =>\n      dispatchAction({\n        type: CLEAR_TOOLTIP,\n        payload: {\n          id,\n        },\n      });\n  }, []);\n\n  useEffect(() => {\n    if (currentTooltipId) {\n      recursivelyAddTooltipAttrsToChildNodes(\n        localDomRef.current,\n        currentTooltipId,\n        true,\n      );\n    }\n  }, [currentTooltipId, localDomRef, children]);\n\n  useEffect(() => {\n    const targetRect = localDomRef.current?.getBoundingClientRect();\n    dispatchAction({\n      type: STORE_TOOLTIP,\n      payload: {\n        id,\n        size,\n        content,\n        targetRect,\n      },\n    });\n  }, [id, size, content, localDomRef, dispatchAction]);\n\n  const triggerDomRecrawl = useCallback(() => {\n    recursivelyAddTooltipAttrsToChildNodes(\n      localDomRef.current,\n      currentTooltipId,\n      true,\n    );\n  }, [currentTooltipId, localDomRef]);\n  const contextValue = useMemo(\n    () => ({ triggerDomRecrawl }),\n    [triggerDomRecrawl],\n  );\n\n  return target ? (\n    <TooltipComponentContext.Provider value={contextValue}>\n      <SmartClone {...props} id={id} domRef={localDomRef}>\n        {target}\n      </SmartClone>\n    </TooltipComponentContext.Provider>\n  ) : null;\n}\n\nTooltip.displayName = 'Tooltip';\nTooltip.Target = TooltipTarget;\nTooltip.Content = TooltipContent;\n","import { ReactElement } from 'react';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type TooltipContentProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & { id?: string };\n\nexport function TooltipContent<\n  RC extends ReactElement | undefined = undefined,\n>({ children, ...props }: TooltipContentProps<RC>) {\n  return <Box {...props}>{children}</Box>;\n}\n\nTooltipContent.displayName = 'Tooltip.Content';\n","import { ReactNode } from 'react';\n\nimport { StandardComponentWithProps } from '../../types/shared';\nimport { SmartClone } from '../SmartClone';\n\nexport type TooltipTargetProps = StandardComponentWithProps<\n  HTMLButtonElement,\n  {\n    children: ReactNode;\n    id?: string;\n  }\n>;\n\nexport function TooltipTarget({ children, ...props }: TooltipTargetProps) {\n  return <SmartClone {...props}>{children}</SmartClone>;\n}\n\nTooltipTarget.displayName = 'Tooltip.Target';\n","export const DEFAULT_TEXT_AREA_SIZE = 'medium';\nexport const DEFAULT_TEXT_AREA_ALIGN = 'left';\nexport const TEXT_AREA_SIZES = ['medium', 'large'] as const;\nexport type TextAreaSize = (typeof TEXT_AREA_SIZES)[number];\n","import { ClassNames } from '@emotion/react';\nimport { AnimatePresence } from 'framer-motion';\nimport {\n  ChangeEvent,\n  ComponentPropsWithoutRef,\n  ReactElement,\n  useCallback,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useConvertSxToEmotionStyles,\n  useForwardLocalDomRef,\n  useTheme,\n} from '../../hooks';\nimport { TextAreaProps } from '../../types/input';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { ClearValueButton } from '../TextInput/ClearValueButton';\nimport {\n  DEFAULT_TEXT_AREA_ALIGN,\n  DEFAULT_TEXT_AREA_SIZE,\n  TEXT_AREA_SIZES,\n} from './shared';\nimport {\n  baseTextAreaSx,\n  clearValueButtonSx,\n  containerBaseSx,\n  getClearValueButtonSx,\n  getContainerSx,\n  getResponsiveClearValueButtonSx,\n  getResponsiveContainerSx,\n  getResponsiveTextAreaSx,\n  getTextAreaSx,\n} from './styles';\n\nexport function TextArea<RC extends ReactElement | undefined = undefined>({\n  onClick,\n  domRef,\n  textAreaRef = { current: null },\n  placeholder,\n  testId = 'TextArea',\n  name,\n  id = name,\n  children,\n  className,\n  validationStatus,\n  onChange,\n  onClearValue,\n  value,\n  // @NOTE: normally, the ClearValueButton would be a subcomponent, and engineers\n  // can choose whether they want it or not. This would mean however, that by default,\n  // we have no ClearValueButton. This is not ideal - as design wants inputs to\n  // feature this by default. Thus, for now, it is a simple flag instead, and is not\n  // a subcomponent.\n  hideClearValueButton,\n  rc,\n  // @NOTE: this would normally be undefined, but then we get react errors\n  // around a component switching between controlled and uncontrolled.\n  defaultValue = '',\n  disabled,\n  rows = 5,\n  // @NOTE: normally this prop would simply be called \"size\", but\n  // native text input tags already have a property called \"size\",\n  // (The size attribute defines the width of the <input> and the\n  // height of the <select> element).\n  // Thus we will need to call this property something else,\n  // eg \"sizeVariant\"\n  sizeVariant = DEFAULT_TEXT_AREA_SIZE,\n  textAlign = DEFAULT_TEXT_AREA_ALIGN,\n  sx = {},\n  ...inputDomAttributes\n}: RC extends undefined ? TextAreaProps : TextAreaProps & { rc: RC }) {\n  const localTextAreaRef = useForwardLocalDomRef(textAreaRef);\n  const [uncontrolledValue, setUncontrolledValue] = useState<\n    ComponentPropsWithoutRef<'textarea'>['value']\n  >(\n    typeof value === 'number'\n      ? value.toString()\n      : typeof value === 'string'\n      ? value\n      : defaultValue,\n  );\n\n  const onClearInputText = useCallback(() => {\n    // @NOTE: if its a CONTROLLED input, simply call the\n    // onClearValue prop, and then early exit\n    if (value !== undefined) {\n      return onClearValue?.();\n    }\n\n    // @NOTE: input is UNCONTROLLED, so we need to manually\n    // update it's value:\n    if (localTextAreaRef.current) {\n      localTextAreaRef.current.value = '';\n      localTextAreaRef.current.focus();\n    }\n    onChange?.({\n      type: 'change',\n      target: localTextAreaRef?.current,\n    } as ChangeEvent<HTMLTextAreaElement>);\n    setUncontrolledValue('');\n    onClearValue?.();\n    return false;\n  }, [localTextAreaRef, onChange, value, onClearValue, setUncontrolledValue]);\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLTextAreaElement>) => {\n      setUncontrolledValue(event.target.value);\n      onChange?.(event);\n    },\n    [setUncontrolledValue, onChange],\n  );\n\n  const valueToUse = value ?? uncontrolledValue;\n  const theme = useTheme();\n  const defaultSize = getStartingSize(\n    sizeVariant,\n    DEFAULT_TEXT_AREA_SIZE,\n    TEXT_AREA_SIZES,\n  );\n  const allContainerStyles = merge(\n    containerBaseSx,\n    getContainerSx({\n      validationStatus,\n      size: defaultSize,\n      theme,\n      hasValue: Boolean(valueToUse),\n    }),\n    getResponsiveContainerSx({\n      validationStatus,\n      size: sizeVariant,\n      theme,\n      hasValue: Boolean(valueToUse),\n    }),\n    sx,\n  );\n\n  const allInputSx = merge(\n    baseTextAreaSx,\n    getTextAreaSx({\n      textAlign,\n      theme,\n      size: defaultSize,\n    }),\n    getResponsiveTextAreaSx({\n      textAlign,\n      theme,\n      size: sizeVariant,\n    }),\n  );\n  const convertedInputStyles = useConvertSxToEmotionStyles(allInputSx);\n  const allClearButtonSx = merge(\n    clearValueButtonSx,\n    getClearValueButtonSx({ theme, size: defaultSize }),\n    getResponsiveClearValueButtonSx({ theme, size: sizeVariant }),\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <Box\n          rc={rc}\n          domRef={domRef}\n          className={cx(className, { disabled, focused })}\n          testId={testId}\n          sx={allContainerStyles}\n          data-validation-status={validationStatus}\n          onClick={ev => {\n            onClick?.(ev);\n            localTextAreaRef.current?.focus();\n          }}\n        >\n          <textarea\n            {...inputDomAttributes}\n            rows={rows}\n            disabled={disabled}\n            name={name}\n            ref={localTextAreaRef}\n            data-testid={`${testId}__textarea`}\n            onChange={handleInputChange}\n            value={valueToUse}\n            id={id}\n            placeholder={placeholder}\n            css={convertedInputStyles}\n            onFocus={ev => {\n              setFocused(true);\n              inputDomAttributes.onFocus?.(ev);\n            }}\n            onBlur={ev => {\n              setFocused(false);\n              inputDomAttributes.onBlur?.(ev);\n            }}\n          />\n\n          <AnimatePresence>\n            {valueToUse && !hideClearValueButton && (\n              <ClearValueButton\n                sx={allClearButtonSx}\n                disabled={disabled}\n                onClick={onClearInputText}\n                testId={`${testId}__clearValueButton`}\n              />\n            )}\n          </AnimatePresence>\n        </Box>\n      )}\n    </ClassNames>\n  );\n}\n\nTextArea.displayName = 'TextArea';\n","import { Properties } from 'csstype';\n\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx, RenderSxProps } from '../../utils/styleHelpers';\nimport { INPUT_MIN_WIDTH } from '../TextInput/shared';\nimport { TextAreaSize } from './shared';\n\nexport const containerBaseSx = {\n  position: 'relative',\n  minWidth: INPUT_MIN_WIDTH,\n  flexShrink: 0,\n  borderRadius: 'base.borderRadius.x4',\n  transitionProperty: 'box-shadow, background',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n  '&:not(.disabled):hover': {\n    boxShadow: 'base.shadow.200',\n  },\n};\n\nexport const baseTextAreaSx = {\n  appearance: 'none',\n  width: '100%',\n  minWidth: '100%',\n  maxWidth: '100%',\n  border: 'none',\n  borderRadius: 'base.borderRadius.x4',\n  fontFamily: 'base.font.family.body.primary',\n  fontSize: 'base.text.body.medium.regular.fontSize',\n  lineHeight: 'base.text.body.medium.regular.lineHeight',\n  fontWeight: 'base.text.body.medium.regular.fontWeight',\n  background: 'transparent',\n  padding: '0',\n  color: 'base.color.text.primary',\n\n  '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n    // @NOTE: this hides the up and down arrows on number inputs\n    display: 'none',\n  },\n\n  '&::placeholder': {\n    color: 'base.color.text.secondary',\n  },\n\n  '&:not(:disabled):focus': {\n    outline: 'none',\n  },\n};\n\nexport function getTextAreaSx({\n  textAlign,\n}: {\n  size: TextAreaSize;\n  theme: BiomeTheme;\n  textAlign: InputTextAlign;\n}) {\n  return {\n    textAlign,\n  };\n}\n\nexport const getResponsiveTextAreaSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<TextAreaSize>;\n  textAlign: InputTextAlign;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getTextAreaSx as (\n      props: RenderSxProps<TextAreaSize>,\n    ) => Properties,\n  });\n\nexport const clearValueButtonSx = {\n  padding: '0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'absolute',\n  right: 'base.spacing.x3',\n};\n\nexport function getContainerSx({\n  validationStatus,\n  theme,\n  hasValue,\n  size,\n}: {\n  validationStatus: InputValidationStatus | undefined;\n  theme: BiomeTheme;\n  size: TextAreaSize;\n  hasValue: boolean;\n}) {\n  const gutter = theme.base.spacing.x3;\n  const paddingY =\n    size === 'large' ? theme.base.spacing.x5 : theme.base.spacing.x3;\n  const paddingLeft = gutter;\n  const paddingRight = `calc(${gutter} + (${gutter} * 2))`;\n  const hoverShadow = theme.base.shadow[200];\n  const emptyShadow = '0 0 0 rgba(0,0,0,0)';\n\n  return {\n    paddingY,\n    paddingLeft,\n    paddingRight,\n\n    background: hasValue\n      ? theme.base.color.translucent.emphasis[300]\n      : theme.base.color.translucent.emphasis[100],\n\n    boxShadow:\n      validationStatus === 'error'\n        ? `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.status.fatal.bright}`\n        : hasValue\n        ? `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[500]}`\n        : `${emptyShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[300]}`,\n\n    '&:not(.disabled):hover': {\n      background: hasValue\n        ? theme.base.color.translucent.emphasis[300]\n        : theme.base.color.translucent.emphasis[200],\n      boxShadow:\n        validationStatus === 'error'\n          ? `${hoverShadow}, inset 0 0 0 1px ${theme.base.color.status.fatal.bright}`\n          : `${hoverShadow}, inset 0 0 0 1px ${theme.base.color.translucent.standard[600]}`,\n    },\n\n    '&:not(.disabled).focused': {\n      outline: 'none',\n      background: theme.base.color.translucent.emphasis[300],\n      boxShadow:\n        validationStatus === 'error'\n          ? `${hoverShadow}, inset 0 0 0 2px ${theme.base.color.status.fatal.bright}`\n          : `${hoverShadow}, inset 0 0 0 2px ${theme.base.color.brand[1]}`,\n    },\n  };\n}\n\nexport const getResponsiveContainerSx = (props: {\n  size: MakeResponsive<TextAreaSize>;\n  validationStatus: InputValidationStatus | undefined;\n  theme: BiomeTheme;\n  hasValue: boolean;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx as unknown as (\n      props: RenderSxProps<TextAreaSize>,\n    ) => Properties,\n  });\n\nexport function getClearValueButtonSx({\n  size,\n  theme,\n}: {\n  size: TextAreaSize;\n  theme: BiomeTheme;\n}) {\n  return {\n    top: size === 'large' ? theme.base.spacing.x6 : theme.base.spacing.x4,\n  };\n}\n\nexport const getResponsiveClearValueButtonSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<TextAreaSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getClearValueButtonSx,\n  });\n","import merge from 'ts-deepmerge';\n\nimport { InputTextAlign } from '../../types/input';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { BaseBodyProps } from '../../types/text';\nimport { Body } from '../Text/Body';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput/shared';\n\nexport type FormControlCaptionProps = Omit<\n  BaseBodyProps & DomPropsWithDomRef<'span'>,\n  'rc'\n> & { textAlign?: InputTextAlign };\n\nexport function FormControlCaption({\n  size = 'small',\n  children,\n  testId,\n  sx = {},\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  ...props\n}: FormControlCaptionProps) {\n  return (\n    <Body\n      {...props}\n      testId={testId}\n      rc={<span />}\n      size={size}\n      sx={merge(\n        {\n          marginBottom: 'base.spacing.x2',\n          color: 'base.color.text.secondary',\n          textAlign,\n        },\n        sx,\n      )}\n    >\n      {children}\n    </Body>\n  );\n}\n\nFormControlCaption.displayName = 'FormControlCaption';\n","import merge from 'ts-deepmerge';\n\nimport { InputTextAlign } from '../../types/input';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { BaseBodyProps } from '../../types/text';\nimport { Body } from '../Text';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput/shared';\n\nexport type FormControlLabelProps = Omit<\n  BaseBodyProps & DomPropsWithDomRef<'label'>,\n  'rc'\n> & { textAlign?: InputTextAlign };\n\nexport function FormControlLabel({\n  size = 'small',\n  children,\n  testId,\n  sx = {},\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  ...props\n}: FormControlLabelProps) {\n  return (\n    <Body\n      {...props}\n      testId={testId}\n      rc={<label />}\n      size={size}\n      sx={merge(\n        { color: 'base.color.text.primary', textAlign, cursor: 'pointer' },\n        sx,\n      )}\n    >\n      {children}\n    </Body>\n  );\n}\n\nFormControlLabel.displayName = 'FormControlLabel';\n","import merge from 'ts-deepmerge';\n\nimport { InputTextAlign, InputValidationStatus } from '../../types/input';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { BaseBodyProps } from '../../types/text';\nimport { Icon } from '../Icon/Icon';\nimport { Body } from '../Text';\nimport { DEFAULT_TEXT_INPUT_ALIGN } from '../TextInput';\n\nexport type FormControlValidationProps = Omit<\n  BaseBodyProps & DomPropsWithDomRef<'span'>,\n  'rc'\n> & { textAlign?: InputTextAlign; validationStatus?: InputValidationStatus };\n\nexport function FormControlValidation({\n  size = 'xSmall',\n  children,\n  validationStatus,\n  testId,\n  sx = {},\n  textAlign = DEFAULT_TEXT_INPUT_ALIGN,\n  ...props\n}: FormControlValidationProps) {\n  const iconSxProps = {\n    marginTop: '-1px',\n    order: textAlign === 'right' ? 1 : 0,\n    ...(textAlign === 'right'\n      ? { ml: 'base.spacing.x1' }\n      : { mr: 'base.spacing.x1' }),\n    width: 'base.icon.size.200',\n    fill:\n      validationStatus === 'error'\n        ? 'base.color.status.fatal.bright'\n        : validationStatus === 'success'\n        ? 'base.color.status.success.bright'\n        : 'base.color.status.guidance.bright',\n  };\n\n  return (\n    <Body\n      {...props}\n      rc={<span />}\n      size={size}\n      testId={testId}\n      sx={merge(\n        {\n          color: 'base.color.brand.4',\n          display: 'flex',\n          alignItems: 'center',\n          flexGrow: 1,\n          justifyContent: textAlign === 'right' ? 'flex-end' : 'flex-start',\n        },\n        sx,\n      )}\n    >\n      <Icon\n        icon={validationStatus === 'error' ? 'Alert' : 'InformationCircle'}\n        sx={merge(iconSxProps)}\n      />\n      {children}\n    </Body>\n  );\n}\n\nFormControlValidation.displayName = 'FormControlValidation';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetCurrentSizeClass,\n  useGetRelativeImageSizeInLayout,\n  useGetResponsiveImageSizes,\n  useTheme,\n} from '../../hooks';\nimport {\n  DEFAULT_IMAGE_SIZE_VARIANT,\n  IMAGE_SIZE_VARIANTS,\n  ImageSizeVariant,\n} from '../../types/image';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { FramedImage } from '../FramedImage';\nimport {\n  baseContainerSx,\n  baseMainImageSx,\n  baseOuterLayerSx,\n  getContainerSx,\n  getResponsiveContainerSx,\n} from './styles';\n\nexport type FramedStackProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    circularFrame?: boolean;\n    primaryImageUrl: string;\n    secondaryImageUrl?: string;\n    tertiaryImageUrl?: string;\n    direction?: 'spiral' | 'rightDiagonal' | 'leftDiagonal' | 'left' | 'right';\n    size?: MakeResponsive<ImageSizeVariant>;\n  }\n>;\n\nexport function FramedStack<RC extends ReactElement | undefined = undefined>({\n  primaryImageUrl,\n  secondaryImageUrl,\n  tertiaryImageUrl,\n  direction = 'spiral',\n  testId = 'FramedStack',\n  circularFrame,\n  className,\n  size = DEFAULT_IMAGE_SIZE_VARIANT,\n  sx = {},\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & FramedStackProps\n  : FramedStackProps & { rc: RC }) {\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const theme = useTheme();\n  const containerSx = merge(\n    baseContainerSx,\n    {\n      pos: 'relative',\n    },\n    getContainerSx({ theme, size: startingSize }),\n    getResponsiveContainerSx({ theme, size }),\n    sx,\n  );\n  const responsiveImageSizes = useGetResponsiveImageSizes(size, 'FramedStack');\n  const relativeImageSizeInLayout = useGetRelativeImageSizeInLayout(\n    size,\n    'FramedStack',\n  );\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      className={`${\n        className ?? ''\n      } FramedStack FramedStack--${sizeClass} FramedStack--${direction} FramedStack--${\n        circularFrame ? 'circle' : 'square'\n      }`}\n      sx={containerSx}\n    >\n      <Box className=\"FramedStack__outer\" sx={baseOuterLayerSx}>\n        <FramedImage\n          testId={`${testId}__framedImage--tertiary`}\n          imageUrl={tertiaryImageUrl || primaryImageUrl}\n          circularFrame={circularFrame}\n          className=\"FramedStack__outer__image FramedStack__outer__image--tertiary\"\n        />\n        <FramedImage\n          testId={`${testId}__framedImage--secondary`}\n          imageUrl={secondaryImageUrl || primaryImageUrl}\n          circularFrame={circularFrame}\n          className=\"FramedStack__outer__image FramedStack__outer__image--secondary\"\n        />\n      </Box>\n      <FramedImage\n        testId={`${testId}__framedImage--primary`}\n        circularFrame={circularFrame}\n        imageUrl={primaryImageUrl}\n        className=\"FramedStack__image FramedStack__image--primary\"\n        responsiveSizes={responsiveImageSizes}\n        relativeImageSizeInLayout={relativeImageSizeInLayout}\n        sx={baseMainImageSx}\n      />\n    </Box>\n  );\n}\n\nFramedStack.displayName = 'FramedStack';\n","import { ImageSizeVariant } from '../../types/image';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getImageSizeMapping } from '../../utils';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\n\nconst maskImagePrefix = `url('data:image/svg+xml;utf8,`;\nconst svgXmlns = `xmlns=\"http://www.w3.org/2000/svg\"`;\nexport const baseContainerSx = {\n  pos: 'relative',\n\n  '&.FramedStack--square.FramedStack--spiral': {\n    '& .FramedStack__outer': {\n      w: '137.5%',\n      h: '137.5%',\n      top: '50%',\n      left: '50%',\n      translate: '-50% -50%',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 88 88\" ${svgXmlns}><path d=\"M0,0v88h88V0H0z M77,74.1c0,1.6-1.3,2.9-2.9,2.9H13.9c-1.6,0-2.9-1.3-2.9-2.9V13.9c0-1.6,1.3-2.9,2.9-2.9h60.1c1.6,0,2.9,1.3,2.9,2.9V74.1z\"/></svg>')`,\n    },\n\n    '& .FramedStack__outer__image': {\n      transformOrigin: '50% 50%',\n      left: '50%',\n      top: '50%',\n      translate: '-50% -50%',\n    },\n\n    '& .FramedStack__outer__image--secondary': {\n      rotate: '-24deg',\n    },\n    '& .FramedStack__outer__image--tertiary': {\n      rotate: '-48deg',\n    },\n  },\n\n  '&.FramedStack--right': {\n    '& .FramedStack__outer': {\n      w: '118.75%',\n      h: '100%',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 64\" ${svgXmlns}><path d=\"M63,64h3h6c2.2,0,4-1.8,4-4V4c0-2.2-1.8-4-4-4h-6h-3c1.2,0.9,2,2.4,2,4v56C65,61.6,64.2,63.1,63,64z\"/></svg>')`,\n    },\n\n    '& .FramedStack__outer__image--secondary': {\n      position: 'relative',\n    },\n    '& .FramedStack__outer__image--tertiary': {\n      right: 0,\n    },\n  },\n\n  '&.FramedStack--left': {\n    '& .FramedStack__outer': {\n      right: 0,\n      w: '118.75%',\n      h: '100%',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 64\" ${svgXmlns}><path d=\"M12.9995 0C11.7853 0.912229 11 2.3644 11 4V60C11 61.6356 11.7853 63.0878 12.9995 64H0V0H12.9995Z\"/></svg>')`,\n    },\n\n    '& .FramedStack__outer__image--secondary': {\n      position: 'relative',\n    },\n    '& .FramedStack__outer__image--tertiary': {\n      left: 0,\n    },\n  },\n\n  '&.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      w: '118.75%',\n      h: '118.75%',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 76\" ${svgXmlns}><path d=\"M0 63.0005V76H76V0H63.0005C64.2147 0.912229 65 2.3644 65 4V60C65 62.7614 62.7614 65 60 65H4C2.3644 65 0.912229 64.2147 0 63.0005Z\"/></svg>')`,\n    },\n\n    '& .FramedStack__outer__image--secondary': {\n      position: 'relative',\n    },\n    '& .FramedStack__outer__image--tertiary': {\n      right: 0,\n      bottom: 0,\n    },\n  },\n\n  '&.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      right: 0,\n      w: '118.75%',\n      h: '118.75%',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 76\" ${svgXmlns}><path d=\"M12.9995 0C11.7853 0.912229 11 2.3644 11 4V60C11 62.7614 13.2386 65 16 65H72C73.6356 65 75.0878 64.2147 76 63.0005V76H0V0H12.9995Z\"/></svg>')`,\n    },\n\n    '& .FramedStack__outer__image--secondary': {\n      position: 'relative',\n    },\n\n    '& .FramedStack__outer__image--tertiary': {\n      bottom: 0,\n      left: 0,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--spiral': {\n    '& .FramedStack__outer': {\n      w: '137.5%',\n      h: '100%',\n      left: '50%',\n      translate: '-50% 0',\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 88 64\" ${svgXmlns}> <path d=\"M35.9056 0C21.5936 3.60895 11 16.5673 11 32C11 47.4327 21.5936 60.3911 35.9056 64H24H0V0H24H35.9056ZM52.0944 0C66.4064 3.60895 77 16.5673 77 32C77 47.4327 66.4064 60.3911 52.0944 64H64H88V0H64H52.0944Z\"/> </svg>')`,\n    },\n\n    '& .FramedStack__outer__image': {\n      top: 0,\n    },\n    '& .FramedStack__outer__image--secondary': {\n      right: 0,\n    },\n    '& .FramedStack__outer__image--tertiary': {\n      left: 0,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 76\" ${svgXmlns}><path d=\"M0 40.0944V76H76V0H40.0944C54.4064 3.60895 65 16.5673 65 32C65 50.2254 50.2254 65 32 65C16.5673 65 3.60895 54.4064 0 40.0944ZM23.9056 0H0V23.9056C2.95586 12.1835 12.1835 2.95586 23.9056 0Z\"/></svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      right: 0,\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 76\" ${svgXmlns}><path d=\"M35.9,0L0,0l0,76h76V40.1C72.4,54.4,59.4,65,44,65c-18.2,0-33-14.8-33-33C11,16.6,21.6,3.6,35.9,0z M76,23.9V0L52.1,0C63.8,3,73,12.2,76,23.9z\"/></svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--right': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 64\" ${svgXmlns}> <path d=\"M0 40.0944V64H23.9056C12.1835 61.0441 2.95586 51.8165 0 40.0944ZM40.0944 64H76V0H40.0944C54.4064 3.60895 65 16.5673 65 32C65 47.4327 54.4064 60.3911 40.0944 64ZM23.9056 0H0V23.9056C2.95586 12.1835 12.1835 2.95586 23.9056 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--left': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 76 64\" ${svgXmlns}> <path d=\"M35.9056 0C21.5936 3.60895 11 16.5673 11 32C11 47.4327 21.5936 60.3911 35.9056 64H0V0H35.9056ZM52.0944 0C63.8165 2.95586 73.0441 12.1835 76 23.9056V0H52.0944ZM76 40.0944C73.0441 51.8165 63.8165 61.0441 52.0944 64H76V40.0944Z\"/> </svg>')`,\n    },\n  },\n\n  //\n  //\n  // CLEANUP MEDIUM SIZING\n  //\n  '&.FramedStack--medium.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      w: '125%',\n      h: '125%',\n    },\n  },\n\n  '&.FramedStack--medium.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      w: '125%',\n      h: '125%',\n    },\n  },\n\n  '&.FramedStack--medium.FramedStack--right': {\n    '& .FramedStack__outer': {\n      w: '125%',\n    },\n  },\n\n  '&.FramedStack--medium.FramedStack--left': {\n    '& .FramedStack__outer': {\n      w: '125%',\n    },\n  },\n\n  //\n  //\n  // CLEANUP SMALL SIZING\n  //\n  '&.FramedStack--small.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      w: '133.5%',\n      h: '133.5%',\n    },\n  },\n\n  '&.FramedStack--small.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      w: '133.5%',\n      h: '133.5%',\n    },\n  },\n\n  '&.FramedStack--small.FramedStack--right': {\n    '& .FramedStack__outer': {\n      w: '133.5%',\n    },\n  },\n\n  '&.FramedStack--small.FramedStack--left': {\n    '& .FramedStack__outer': {\n      w: '133.5%',\n    },\n  },\n\n  //\n  //\n  // CLEANUP MEDIUM SQUARE MASKS\n  //\n  '&.FramedStack--square.FramedStack--medium.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 40\" ${svgXmlns}> <path d=\"M0 31.0004V40H40V0H31.0005C32.2147 0.91223 33 2.3644 33 3.99999V28C33 30.7614 30.7615 33 28 33H4.00004C2.36442 33 0.912227 32.2146 0 31.0004Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--medium.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 40\" ${svgXmlns}> <path d=\"M8.99947 0C7.78532 0.91223 6.99998 2.3644 6.99998 3.99999V28C6.99998 30.7614 9.23856 33 12 33H36C37.6356 33 39.0878 32.2146 40 31.0004V40H0V0H8.99947Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--medium.FramedStack--right': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 44 32\" ${svgXmlns}> <path d=\"M31.0004 32.0001H44V6.10352e-05H31.0006C32.2147 0.912294 33 2.36444 33 4V28C33 29.6356 32.2146 31.0878 31.0004 32.0001Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--medium.FramedStack--left': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 32\" ${svgXmlns}> <path d=\"M8.99951 0C7.78534 0.912229 7 2.3644 7 4V28C7 29.6356 7.78534 31.0878 8.99951 32H0V0H8.99951Z\"/> </svg>')`,\n    },\n  },\n\n  //\n  //\n  // CLEANUP MEDIUM SQUARE MASKS\n  //\n  '&.FramedStack--square.FramedStack--small.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}> <path d=\"M-3.05176e-05 23.0004V32H32V0H23.0005C24.2147 0.91223 25 2.36439 25 3.99998V20C25 22.7614 22.7614 25 20 25H4C2.36438 25 0.912196 24.2146 -3.05176e-05 23.0004Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--small.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}> <path d=\"M8.9995 0C7.78534 0.91223 7 2.3644 7 3.99999V20C7 22.7614 9.23858 25 12 25H28C29.6356 25 31.0878 24.2147 32 23.0005V32H-1.52588e-05V0H8.9995Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--small.FramedStack--right': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 24\" ${svgXmlns}> <path d=\"M4.57764e-05 23.0005V24H0.9996C0.621159 23.7157 0.284376 23.3789 4.57764e-05 23.0005ZM23.0004 24H28C30.2092 24 32 22.2091 32 20V4C32 1.79086 30.2092 0 28 0H23.0006C24.2147 0.912233 25 2.36438 25 3.99994V19.9999C25 21.6356 24.2146 23.0878 23.0004 24ZM0.999437 0H4.57764e-05V0.999399C0.284335 0.621022 0.621063 0.284292 0.999437 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--square.FramedStack--small.FramedStack--left': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 24\" ${svgXmlns}> <path d=\"M8.99951 0C7.78534 0.912229 7 2.3644 7 4V20C7 21.6356 7.78534 23.0878 8.99951 24H0V0H8.99951Z\"/> </svg>')`,\n    },\n  },\n\n  //\n  //\n  // CLEANUP MEDIUM CIRCULAR MASKS\n  //\n  '&.FramedStack--circle.FramedStack--medium.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 40\" ${svgXmlns}> <path d=\"M3.05176e-05 21.7583V40H40V0H21.7584C28.3132 2.35943 33 8.63236 33 16C33 25.3888 25.3888 33 16 33C8.63239 33 2.35946 28.3131 3.05176e-05 21.7583ZM10.2416 0H3.05176e-05V10.2416C1.71217 5.48505 5.48508 1.71214 10.2416 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--medium.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 40\" ${svgXmlns}> <path d=\"M18.2415 0C11.6868 2.35945 6.99998 8.63236 6.99998 15.9999C6.99998 25.3888 14.6111 32.9999 24 32.9999C31.3676 32.9999 37.6406 28.313 40 21.7581V40H0V0H18.2415ZM29.7584 0C34.515 1.71217 38.2879 5.48513 40 10.2417V0H29.7584Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--medium.FramedStack--right': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 32\" ${svgXmlns}> <path d=\"M0 21.7583V32H10.2417C5.48511 30.2879 1.71213 26.5149 0 21.7583ZM21.7583 32H40V0H21.7583C28.3131 2.3594 33 8.63236 33 16C33 23.3676 28.3131 29.6406 21.7583 32ZM10.2417 0H0V10.2417C1.71213 5.48511 5.48511 1.71213 10.2417 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--medium.FramedStack--left': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 40 32\" ${svgXmlns}> <path d=\"M18.2417 0C11.6869 2.3594 7 8.63236 7 16C7 23.3676 11.6869 29.6406 18.2417 32H0V0H18.2417ZM29.7583 0C34.5149 1.71213 38.2879 5.48511 40 10.2417V0H29.7583ZM40 21.7583C38.2879 26.5149 34.5149 30.2879 29.7583 32H40V21.7583Z\"/> </svg>')`,\n    },\n  },\n\n  //\n  //\n  // CLEANUP SMALL CIRCULAR MASKS\n  //\n  '&.FramedStack--circle.FramedStack--small.FramedStack--rightDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}> <path d=\"M4.57764e-05 17.0089V32H32V0H17.0089C21.7021 1.96126 25 6.59547 25 12C25 19.1797 19.1797 25 12 25C6.59552 25 1.96131 21.702 4.57764e-05 17.0089ZM6.99111 0H4.57764e-05V6.99106C1.31709 3.83946 3.8395 1.31704 6.99111 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--small.FramedStack--leftDiagonal': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}> <path d=\"M14.991 0C10.2979 1.96128 7 6.59547 7 11.9999C7 19.1796 12.8203 24.9999 20 24.9999C25.4045 24.9999 30.0387 21.702 32 17.0088V32H-1.52588e-05V0H14.991ZM25.009 0C28.1606 1.31706 30.683 3.83948 32 6.99109V0H25.009Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--small.FramedStack--right': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 24\" ${svgXmlns}> <path d=\"M0 17.0088V24H6.9912C3.83952 22.683 1.31705 20.1605 0 17.0088ZM17.0088 24H32V0H17.0088C21.702 1.96124 25 6.59548 25 12C25 17.4045 21.702 22.0388 17.0088 24ZM6.9912 0H0V6.9912C1.31705 3.83952 3.83952 1.31705 6.9912 0Z\"/> </svg>')`,\n    },\n  },\n\n  '&.FramedStack--circle.FramedStack--small.FramedStack--left': {\n    '& .FramedStack__outer': {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 24\" ${svgXmlns}> <path d=\"M14.9912 0C10.298 1.96124 7 6.59548 7 12C7 17.4045 10.298 22.0388 14.9912 24H0V0H14.9912ZM25.0088 0C28.1605 1.31705 30.683 3.83952 32 6.9912V0H25.0088ZM32 17.0088C30.683 20.1605 28.1605 22.683 25.0088 24H32V17.0088Z\"/> </svg>')`,\n    },\n  },\n};\n\nexport const baseMainImageSx = {\n  h: '100%',\n  w: '100%',\n};\n\nexport function getContainerSx({\n  size,\n  theme: { base },\n}: {\n  size: ImageSizeVariant;\n  theme: BiomeTheme;\n}) {\n  const sizeMapping = getImageSizeMapping('FramedStack', { base });\n  return {\n    width: sizeMapping[size],\n    height: sizeMapping[size],\n\n    '& .FramedStack__outer__image': {\n      width: sizeMapping[size],\n      height: sizeMapping[size],\n    },\n  };\n}\n\nexport const getResponsiveContainerSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ImageSizeVariant>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx,\n  });\n\nexport const baseOuterLayerSx = {\n  pos: 'absolute',\n  WebkitMaskRepeat: 'no-repeat',\n  WebkitMaskSize: 'cover',\n  d: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '& .FramedStack__outer__image': {\n    position: 'absolute',\n  },\n\n  '& .FramedStack__outer__image--tertiary': {\n    opacity: 0.48,\n  },\n};\n","import { LooseAutocomplete, SpacingTokenPaths } from '@biom3/design-tokens';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { MakeValidSxValue } from '../../types/sxProps';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\n\nexport type GridBoxProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    minColumnWidth?: string;\n    gap?: MakeValidSxValue<LooseAutocomplete<NonNullable<SpacingTokenPaths>>>;\n  };\n\nexport function GridBox<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  minColumnWidth = '180px',\n  gap = 'base.spacing.x4',\n  ...props\n}: GridBoxProps<RC>) {\n  return (\n    <Box\n      {...props}\n      sx={merge(\n        {\n          display: 'grid',\n          gridTemplateColumns: `repeat(auto-fill, minmax(${minColumnWidth}, 1fr))`,\n          gap,\n          alignItems: 'start',\n          width: '100%',\n        },\n        sx,\n      )}\n    />\n  );\n}\n\nGridBox.displayName = 'GridBox';\n","import { Children, ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { BUTTON_SIZES, ButtonSize } from '../../types';\nimport { MakeResponsive } from '../../types/shared';\nimport { isChildSubcomponent } from '../../utils';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport { SmartClone } from '../SmartClone';\nimport { HorizontalMenuButtCon } from './HorizontalMenuButtCon';\nimport { HorizontalMenuButton } from './HorizontalMenuButton';\nimport {\n  getContainerStyles,\n  horizontalMenuSxProps,\n  renderResponsiveContainerStyles,\n} from './styles';\n\nexport type HorizontalMenuProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & {\n  size?: MakeResponsive<ButtonSize>;\n};\n\nexport function HorizontalMenu<\n  RC extends ReactElement | undefined = undefined,\n>({ children, sx = {}, size = 'medium', ...props }: HorizontalMenuProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const { styles: responsiveStyles } = renderResponsiveContainerStyles({\n    size,\n    themeProps,\n  });\n  const containerSx = merge(\n    horizontalMenuSxProps,\n    getContainerStyles({ size: startingSize, themeProps }),\n    responsiveStyles,\n    sx,\n  );\n\n  return (\n    <Box {...props} sx={containerSx}>\n      {Children.map(children, child => {\n        if (\n          isChildSubcomponent(child, HorizontalMenuButtCon) ||\n          isChildSubcomponent(child, HorizontalMenuButton)\n        ) {\n          return (\n            <SmartClone size={child.props.size ? child.props.size : size}>\n              {child}\n            </SmartClone>\n          );\n        }\n        return child;\n      })}\n    </Box>\n  );\n}\n\nHorizontalMenu.displayName = 'HorizontalMenu';\nHorizontalMenu.Button = HorizontalMenuButton;\nHorizontalMenu.ButtCon = HorizontalMenuButtCon;\n","import { ClassNames, DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { ButtConProps, BUTTON_SIZES } from '../../types/clickable';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { ButtCon } from '../Clickable';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport {\n  buttonSxProps,\n  getButtonStyles,\n  renderResponsiveButtonStyles,\n} from './styles';\n\nexport type HorizontalMenuButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtConProps<RC>, 'variant'> & { selected?: boolean };\n\nexport function HorizontalMenuButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  sx = {},\n  size = 'medium',\n  selected,\n  ...props\n}: HorizontalMenuButtConProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const { styles: responsiveStyles } = renderResponsiveButtonStyles({\n    size,\n    themeProps,\n  });\n  const mergedSx = merge(\n    buttonSxProps,\n    responsiveStyles,\n    getButtonStyles({ size: startingSize, themeProps }),\n    sx,\n  );\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <ButtCon\n          {...props}\n          size={size}\n          variant=\"tertiary\"\n          sx={mergedSx}\n          className={cx({ selected })}\n        />\n      )}\n    </ClassNames>\n  );\n}\n\nHorizontalMenuButtCon.displayName = 'HorizontalMenuButtCon';\n","import merge from 'ts-deepmerge';\n\nimport { ButtonSize } from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport { DeeplyNestedSx } from '../../types/sxProps';\nimport { BiomeTheme } from '../../types/theme';\nimport { isError } from '../../utils/textStyleHelpers';\n\nexport const horizontalMenuSxProps: DeeplyNestedSx = {\n  justifyContent: 'stretch',\n  bg: 'base.color.translucent.standard.200',\n  position: 'relative',\n  d: 'flex',\n  w: '100%',\n};\n\nexport function getContainerStyles({\n  size,\n  themeProps,\n}: {\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) {\n  const paddingAndGap =\n    size === 'large' || size === 'medium'\n      ? themeProps.base.spacing.x2\n      : themeProps.base.spacing.x1;\n  return {\n    gap: paddingAndGap,\n    padding: paddingAndGap,\n    borderRadius:\n      size === 'large' || size === 'medium'\n        ? themeProps.base.borderRadius.x8\n        : themeProps.base.borderRadius.x4,\n  };\n}\n\nexport function getButtonStyles({\n  size,\n  themeProps,\n}: {\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) {\n  return {\n    borderRadius:\n      size === 'large' || size === 'medium'\n        ? themeProps.base.borderRadius.x4\n        : themeProps.base.spacing.x2,\n  };\n}\n\nexport function renderResponsiveContainerStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getContainerStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return {\n    styles: sizeStyles,\n  };\n}\n\nexport const buttonSxProps: DeeplyNestedSx = {\n  flex: 1,\n  paddingX: 'base.spacing.x4',\n  background: 'base.color.translucent.emphasis.100',\n  transitionProperty: 'background, box-shadow',\n  transitionDuration: 'base.motion.normal.fast.cssDuration',\n  transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n\n  '&:hover:not([disabled])': {\n    boxShadow: ({ base }: BiomeTheme) =>\n      `inset 0 0 0 ${base.border.size[100]} ${base.color.brand[1]}`,\n  },\n\n  '&:active:not([disabled])': {\n    boxShadow: ({ base }: BiomeTheme) =>\n      `inset 0 0 0 ${base.border.size[200]} ${base.color.brand[1]}`,\n  },\n\n  '&.selected': {\n    boxShadow: ({ base }: BiomeTheme) =>\n      `inset 0 0 0 ${base.border.size[200]} ${base.color.brand[1]}`,\n  },\n\n  '&:hover:not([disabled])::before': {\n    content: 'unset',\n  },\n\n  '& > span': {\n    textAlign: 'left',\n    whiteSpace: 'nowrap',\n  },\n};\n\nexport function renderResponsiveButtonStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtonStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return {\n    styles: sizeStyles,\n  };\n}\n\nexport function getButtonIconStyles({\n  size,\n  themeProps,\n}: {\n  size: ButtonSize;\n  themeProps: BiomeTheme;\n}) {\n  return {\n    width:\n      size === 'large' || size === 'medium'\n        ? themeProps.base.icon.size[250]\n        : themeProps.base.icon.size[200],\n  };\n}\n\nexport function renderResponsiveButtonIconStyles({\n  size,\n  themeProps,\n}: {\n  size: MakeResponsive<ButtonSize>;\n  themeProps: BiomeTheme;\n}) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getButtonIconStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return {\n    styles: sizeStyles,\n  };\n}\n","import { ClassNames, DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { BUTTON_SIZES, ButtonProps } from '../../types';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Button } from '../Clickable';\nimport { ButtonIcon } from '../Clickable/Buttons/ButtonIcon';\nimport { ButtonLogo } from '../Clickable/Buttons/ButtonLogo';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport {\n  buttonSxProps,\n  getButtonStyles,\n  renderResponsiveButtonStyles,\n} from './styles';\n\nexport type HorizontalMenuButtonProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtonProps<RC>, 'variant'> & {\n  selected?: boolean;\n};\n\nexport function HorizontalMenuButton<\n  RC extends ReactElement | undefined = undefined,\n>({\n  children,\n  sx = {},\n  size = 'medium',\n  selected,\n  ...props\n}: HorizontalMenuButtonProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(size, DEFAULT_BUTTON_SIZE, BUTTON_SIZES);\n  const { styles: responsiveStyles } = renderResponsiveButtonStyles({\n    size,\n    themeProps,\n  });\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <Button\n          {...props}\n          size={size}\n          variant=\"tertiary\"\n          className={cx({ selected })}\n          sx={merge(\n            buttonSxProps,\n            responsiveStyles,\n            getButtonStyles({ size: startingSize, themeProps }),\n            sx,\n          )}\n        >\n          {children}\n        </Button>\n      )}\n    </ClassNames>\n  );\n}\n\nHorizontalMenuButton.displayName = 'HorizontalMenuButton';\nHorizontalMenuButton.Icon = ButtonIcon;\nHorizontalMenuButton.Logo = ButtonLogo;\n","import merge from 'ts-deepmerge';\n\nimport { ModalComponentProps } from '../../types/overlays';\nimport { Modal } from '../Modal';\nimport { ModalTarget } from '../Modal/ModalTarget';\nimport { LoadingOverlayContent } from './LoadingOverlayContent';\n\nexport type LoadingOverlayProps = ModalComponentProps & {};\n\nexport function LoadingOverlay({\n  bgOverlaySx = {},\n  testId = 'LoadingOverlay',\n  ...props\n}: LoadingOverlayProps) {\n  return (\n    <Modal\n      {...props}\n      testId={testId}\n      ContentSubcomponent={LoadingOverlayContent}\n      bgOverlaySx={merge(\n        { bg: 'base.color.translucent.standard.600' },\n        bgOverlaySx,\n      )}\n    />\n  );\n}\n\nLoadingOverlay.displayName = 'LoadingOverlay';\nLoadingOverlay.Target = ModalTarget;\nLoadingOverlay.Content = LoadingOverlayContent;\n","import { Fit, Layout, useRive } from '@rive-app/react-canvas';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetSubcomponentChild,\n  useSplitApartChildrenAndSubComponents,\n  useTheme,\n} from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { vFlex } from '../../utils/sxChunks';\nimport { BoxWithRCAndDomProps } from '../Box';\nimport { ModalContent } from '../Modal/ModalContent';\nimport { SmartClone } from '../SmartClone';\nimport { LoadingOverlayContentLoopingText } from './LoadingOverlayContentLoopingText';\nimport { LoadingOverlayContentRiveBox } from './LoadingOverlayContentRiveBox';\nimport { getContainerSx, getResponsiveContainerSx } from './style';\n\nexport const DEFAULT_LOADING_OVERLAY_SIZE = 'medium';\nexport const LOADING_OVERLAY_SIZES = ['small', 'medium'] as const;\nexport type LoadingOverlaySize = (typeof LOADING_OVERLAY_SIZES)[number];\n\nexport type LoadingOverlayContentProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & {\n  size?: MakeResponsive<LoadingOverlaySize>;\n};\n\nexport function LoadingOverlayContent<\n  RC extends ReactElement | undefined = undefined,\n>({\n  children,\n  sx = {},\n  testId,\n  size = DEFAULT_LOADING_OVERLAY_SIZE,\n  ...props\n}: LoadingOverlayContentProps<RC>) {\n  const theme = useTheme();\n  const { RiveComponent: DefaultRive } = useRive({\n    src: 'https://biome.immutable.com/hosted-assets/rive/immutable_loader.riv',\n    autoplay: true,\n    layout: new Layout({ fit: Fit.Contain }),\n  });\n  const riveBox = useGetSubcomponentChild(\n    children,\n    LoadingOverlayContentRiveBox,\n  );\n  const loopingText = useGetSubcomponentChild(\n    children,\n    LoadingOverlayContentLoopingText,\n  );\n  const { otherChildren } = useSplitApartChildrenAndSubComponents(children, [\n    LoadingOverlayContentRiveBox,\n    LoadingOverlayContentLoopingText,\n  ]);\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_LOADING_OVERLAY_SIZE,\n    LOADING_OVERLAY_SIZES,\n  );\n  const containerSx = merge(\n    {\n      ...vFlex,\n      alignItems: 'center',\n      bg:\n        theme.base.colorMode === 'darkOnLight'\n          ? 'base.color.translucent.inverse.800'\n          : 'base.color.translucent.inverse.300',\n      boxShadow: 'base.shadow.500',\n      brad: 'base.borderRadius.x8',\n      gap: 'base.spacing.x4',\n      backdropFilter: 'blur(16px)',\n    },\n    getContainerSx({\n      size: startingSize,\n      theme,\n    }),\n    getResponsiveContainerSx({ size, theme }),\n    sx,\n  );\n\n  return (\n    <ModalContent {...props} sx={containerSx} testId={testId}>\n      {riveBox ? (\n        <SmartClone testId={riveBox.props.testId ?? `${testId}__riveBox`}>\n          {riveBox}\n        </SmartClone>\n      ) : (\n        <LoadingOverlayContentRiveBox\n          rc={<DefaultRive />}\n          testId={`${testId}__riveBox`}\n        />\n      )}\n\n      {loopingText && (\n        <SmartClone testId={`${testId}__loopingText`} size={size}>\n          {loopingText}\n        </SmartClone>\n      )}\n\n      {otherChildren}\n    </ModalContent>\n  );\n}\n\nLoadingOverlayContent.displayName = 'LoadingOverlay.Content';\nLoadingOverlayContent.RiveBox = LoadingOverlayContentRiveBox;\nLoadingOverlayContent.LoopingText = LoadingOverlayContentLoopingText;\n","import { MakeResponsive } from '../../types/shared';\nimport { Body, LoopingText, LoopingTextProps } from '../Text';\nimport { LoadingOverlaySize } from './LoadingOverlayContent';\n\nexport type LoadingOverlayContentLoopingTextProps = LoopingTextProps<\n  undefined,\n  undefined\n> & {\n  size?: MakeResponsive<LoadingOverlaySize>;\n};\n\nexport function LoadingOverlayContentLoopingText({\n  size,\n  ...props\n}: LoadingOverlayContentLoopingTextProps) {\n  return <LoopingText {...props} use={<Body size={size} weight=\"bold\" />} />;\n}\n\nLoadingOverlayContentLoopingText.displayName =\n  'LoadingOverlay.Content.LoopingText';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport {\n  DEFAULT_LOADING_OVERLAY_SIZE,\n  LOADING_OVERLAY_SIZES,\n  LoadingOverlaySize,\n} from './LoadingOverlayContent';\nimport { getAnimationBoxSx, getResponsiveAnimationBoxSx } from './style';\n\nexport type LoadingOverlayContentAnimationBoxProps<\n  RC extends ReactElement | undefined,\n> = BoxWithRCAndDomProps<RC> & { size?: MakeResponsive<LoadingOverlaySize> };\n\nexport function LoadingOverlayContentRiveBox<\n  RC extends ReactElement | undefined,\n>({\n  sx = {},\n  size = DEFAULT_LOADING_OVERLAY_SIZE,\n  rc,\n  ...props\n}: LoadingOverlayContentAnimationBoxProps<RC>) {\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_LOADING_OVERLAY_SIZE,\n    LOADING_OVERLAY_SIZES,\n  );\n\n  const animationBoxSx = merge(\n    { flexShrink: 0 },\n    getAnimationBoxSx({ size: startingSize, theme }),\n    getResponsiveAnimationBoxSx({ size, theme }),\n    sx,\n  );\n\n  return (\n    <Box {...props} sx={merge(animationBoxSx, sx)}>\n      {rc}\n    </Box>\n  );\n}\n\nLoadingOverlayContentRiveBox.displayName = 'LoadingOverlay.Content.RiveBox';\n","import { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport { LoadingOverlaySize } from './LoadingOverlayContent';\n\nexport function getContainerSx({\n  theme: { base },\n  size,\n}: {\n  size: LoadingOverlaySize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        width: '180px',\n        paddingY: base.spacing.x6,\n      };\n    case 'medium':\n    default:\n      return {\n        width: '220px',\n        paddingY: base.spacing.x9,\n      };\n  }\n}\n\nexport const getResponsiveContainerSx = ({\n  ...props\n}: {\n  size: MakeResponsive<LoadingOverlaySize>;\n  theme: BiomeTheme;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx,\n  });\n\nexport function getAnimationBoxSx({\n  size,\n  theme,\n}: {\n  size: LoadingOverlaySize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        width: theme.base.spacing.x12,\n        height: theme.base.spacing.x12,\n      };\n    case 'medium':\n    default:\n      return {\n        width: theme.base.spacing.x16,\n        height: theme.base.spacing.x16,\n      };\n  }\n}\n\nexport const getResponsiveAnimationBoxSx = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<LoadingOverlaySize>;\n  theme: BiomeTheme;\n}) => getResponsiveSx({ theme, size, renderSxAtSize: getAnimationBoxSx });\n","import { ClassNames } from '@emotion/react';\nimport { ReactElement, useCallback, useMemo, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useCheckForInvalidPaginationProps, useTheme } from '../../hooks';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { isNumberWithinTotal } from '../../utils';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport {\n  DEFAULT_PAGINATION_SIZE,\n  getContainerStyles,\n  getResponsiveContainerStyles,\n  getResponsivePageButtonStyles,\n  getSizeBasedPageButtonStyles,\n  pageButtonBaseStyles,\n} from './styles';\nimport {\n  ONBOARDING_PAGINATION_SIZES,\n  OnboardingPaginationProps,\n} from './types';\n\nexport function OnboardingPagination<\n  RC extends ReactElement | undefined = undefined,\n>(\n  props: RC extends undefined\n    ? DomPropsWithDomRef<'div'> & OnboardingPaginationProps\n    : OnboardingPaginationProps & { rc: RC },\n) {\n  const {\n    domRef,\n    testId,\n    sx = {},\n    currentPage,\n    defaultPage = 1,\n    totalPages = 6,\n    onPageChange,\n    size = DEFAULT_PAGINATION_SIZE,\n    ...domAttributes\n  } = 'currentPage' in props\n    ? { ...props, defaultPage: undefined }\n    : { ...props, currentPage: undefined };\n  const errorState = useCheckForInvalidPaginationProps('OnboardingPagination', {\n    defaultPage,\n    totalPages,\n    currentPage,\n  });\n\n  const [uncontrolledPageIndex, setUncontrolledPageIndex] = useState<number>(\n    typeof currentPage === 'number'\n      ? currentPage\n      : isNumberWithinTotal(defaultPage, totalPages)\n      ? defaultPage\n      : 1,\n  );\n\n  const handlePageClick = useCallback(\n    (newPage: number) => () => {\n      if (typeof currentPage !== 'number') {\n        setUncontrolledPageIndex(newPage);\n      }\n      onPageChange?.(newPage);\n    },\n    [onPageChange, currentPage],\n  );\n\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_PAGINATION_SIZE,\n    ONBOARDING_PAGINATION_SIZES,\n  );\n\n  const allContainerStyles = useMemo(\n    () =>\n      merge(\n        { display: 'flex' },\n        getContainerStyles({ size: startingSize, theme }),\n        getResponsiveContainerStyles({\n          size,\n          theme,\n        }),\n        sx,\n      ),\n    [sx, size, theme, startingSize],\n  );\n\n  const allButtonStyles = useMemo(\n    () =>\n      merge(\n        pageButtonBaseStyles,\n        getSizeBasedPageButtonStyles({\n          size: startingSize,\n          theme,\n        }),\n        getResponsivePageButtonStyles({\n          size,\n          theme,\n        }),\n      ),\n    [size, theme, startingSize],\n  );\n\n  const currentPageIndex = currentPage ?? uncontrolledPageIndex;\n\n  return errorState ? null : (\n    <ClassNames>\n      {({ cx }) => (\n        <Box\n          {...domAttributes}\n          testId={testId}\n          domRef={domRef}\n          sx={allContainerStyles}\n        >\n          {Array.from({ length: totalPages }).map((_, index) => {\n            const isActive = index + 1 === currentPageIndex;\n            return (\n              <Box\n                // eslint-disable-next-line react/no-array-index-key\n                key={index + 1}\n                onClick={handlePageClick(index + 1)}\n                className={cx({ selected: isActive })}\n                sx={allButtonStyles}\n                testId={`${testId}__page--${index + 1}`}\n              />\n            );\n          })}\n        </Box>\n      )}\n    </ClassNames>\n  );\n}\n\nOnboardingPagination.displayName = 'OnboardingPagination';\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { isError } from '../../utils/textStyleHelpers';\nimport { OnboardingPaginationSize } from './types';\n\nexport const DEFAULT_PAGINATION_SIZE = 'medium';\n\nexport const getContainerStyles = ({\n  size,\n  theme,\n}: {\n  size: OnboardingPaginationSize;\n  theme: BiomeTheme;\n}) => ({\n  gap: size === 'medium' ? theme.base.spacing.x2 : theme.base.spacing.x1,\n});\n\nexport const getResponsiveContainerStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<OnboardingPaginationSize>;\n  theme: BiomeTheme;\n}) => {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getContainerStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n};\n\nexport const pageButtonBaseStyles = {\n  background: 'base.color.translucent.emphasis.100',\n  borderWidth: '1px',\n  borderColor: 'base.color.translucent.standard.500',\n  borderStyle: 'solid',\n  cursor: 'pointer',\n  transition: 'width 200ms ease-in-out',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '&::before': {\n    content: \"''\",\n    borderRadius: 'base.spacing.x1',\n    background: 'base.color.translucent.standard.1000',\n    opacity: '0',\n    transition: 'opacity 200ms ease-in-out',\n    transitionProperty: 'opacity, width, height',\n  },\n\n  '&:hover': {\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n\n  '&:hover::before, &.selected::before': {\n    opacity: '1',\n  },\n\n  '&.selected': {\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n\n  '&:hover.selected': {\n    borderWidth: 'base.border.size.100',\n  },\n};\n\nexport const getSizeBasedPageButtonStyles = ({\n  size,\n  theme,\n}: {\n  size: OnboardingPaginationSize;\n  theme: BiomeTheme;\n}) => {\n  const isMedium = size === 'medium';\n  return {\n    w: isMedium ? theme.base.spacing.x5 : theme.base.spacing.x2,\n    h: isMedium ? theme.base.spacing.x5 : theme.base.spacing.x2,\n    borderRadius: isMedium ? theme.base.spacing.x3 : theme.base.spacing.x1,\n\n    '&::before': {\n      width: isMedium ? theme.base.spacing.x2 : theme.base.spacing.x1,\n      height: isMedium ? theme.base.spacing.x2 : theme.base.spacing.x1,\n    },\n\n    '&.selected': {\n      width: isMedium ? theme.base.spacing.x12 : theme.base.spacing.x4,\n      borderWidth: isMedium\n        ? theme.base.border.size[200]\n        : theme.base.border.size[100],\n    },\n\n    '&.selected::before': {\n      width: isMedium ? theme.base.spacing.x10 : '10px',\n      height: isMedium ? theme.base.spacing.x3 : '2px',\n    },\n\n    '&:hover.selected::before': {\n      width: isMedium ? '34px' : '10px',\n      height: isMedium ? '6px' : '2px',\n    },\n  };\n};\n\nexport const getResponsivePageButtonStyles = ({\n  size,\n  theme,\n}: {\n  size: MakeResponsive<OnboardingPaginationSize>;\n  theme: BiomeTheme;\n}) => {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n\n  const sizeStyles = merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getSizeBasedPageButtonStyles({\n            size: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return sizeStyles;\n};\n","import { PaginationDiscriminatedUnion } from '../../types/pagination';\nimport { MakeResponsive, StandardComponentWithProps } from '../../types/shared';\n\nexport const ONBOARDING_PAGINATION_SIZES = ['small', 'medium'] as const;\nexport type OnboardingPaginationSize =\n  (typeof ONBOARDING_PAGINATION_SIZES)[number];\n\nexport type OnboardingPaginationProps = PaginationDiscriminatedUnion<\n  StandardComponentWithProps<\n    HTMLDivElement,\n    {\n      totalPages?: number;\n      size?: MakeResponsive<OnboardingPaginationSize>;\n    }\n  >\n>;\n","/* eslint-disable react/no-array-index-key */\nimport { ReactElement, useCallback, useMemo, useState } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useCheckForInvalidPaginationProps,\n  useGetCurrentSizeClass,\n  useTheme,\n} from '../../hooks';\nimport { DeeplyNestedSx } from '../../types';\nimport { BUTTON_SIZES, ButtonSize } from '../../types/clickable';\nimport { PaginationDiscriminatedUnion } from '../../types/pagination';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { isNumberWithinTotal, range } from '../../utils';\nimport { DEFAULT_BUTTON_SIZE } from '../Clickable/Buttons/styles';\nimport { HorizontalMenu } from '../HorizontalMenu';\nimport { Icon } from '../Icon';\n\ntype BasePaginationProps = StandardComponentWithProps<\n  HTMLDivElement,\n  PaginationDiscriminatedUnion<{\n    totalPages?: number;\n    siblingPages?: number;\n    boundaryPages?: number;\n    showArrows?: boolean;\n    size?: MakeResponsive<ButtonSize>;\n    buttonSx?: DeeplyNestedSx;\n  }>\n>;\n\nexport type PaginationProps<RC extends ReactElement | undefined = undefined> =\n  RC extends undefined\n    ? DomPropsWithDomRef<'div'> & BasePaginationProps\n    : BasePaginationProps & { rc: RC };\n\nconst DOTS = 'dots';\n\nexport function Pagination<RC extends ReactElement | undefined = undefined>(\n  props: PaginationProps<RC>,\n) {\n  const {\n    domRef,\n    testId,\n    sx = {},\n    buttonSx = {},\n    currentPage,\n    defaultPage = 1,\n    onPageChange,\n    totalPages = 10,\n    siblingPages = 1,\n    boundaryPages = 1,\n    showArrows = true,\n    size = DEFAULT_BUTTON_SIZE,\n    className,\n    ...otherProps\n  } = 'currentPage' in props\n    ? { ...props, defaultPage: undefined }\n    : { ...props, currentPage: undefined };\n\n  const theme = useTheme();\n  const errorState = useCheckForInvalidPaginationProps('Pagination', {\n    defaultPage,\n    totalPages,\n    currentPage,\n  });\n  const [uncontrolledPageIndex, setUncontrolledPageIndex] = useState<number>(\n    typeof currentPage === 'number'\n      ? currentPage\n      : isNumberWithinTotal(defaultPage, totalPages)\n      ? defaultPage\n      : 1,\n  );\n\n  const currentPageIndex = currentPage ?? uncontrolledPageIndex;\n  const atStart = currentPageIndex === 1;\n  const atEnd = currentPageIndex === totalPages;\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    const totalPageButtons = siblingPages * 2 + 3 + boundaryPages * 2;\n    if (totalPageButtons >= totalPages) {\n      return range(1, totalPages);\n    }\n\n    const leftSiblingIndex = Math.max(\n      currentPageIndex - siblingPages,\n      boundaryPages,\n    );\n    const rightSiblingIndex = Math.min(\n      currentPageIndex + siblingPages,\n      totalPages - boundaryPages,\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaryPages + 2;\n    const shouldShowRightDots =\n      rightSiblingIndex < totalPages - (boundaryPages + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblingPages * 2 + boundaryPages + 2;\n      return [\n        ...range(1, leftItemCount),\n        DOTS,\n        ...range(totalPages - (boundaryPages - 1), totalPages),\n      ];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaryPages + 1 + 2 * siblingPages;\n      return [\n        ...range(1, boundaryPages),\n        DOTS,\n        ...range(totalPages - rightItemCount, totalPages),\n      ];\n    }\n\n    return [\n      ...range(1, boundaryPages),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(totalPages - boundaryPages + 1, totalPages),\n    ];\n  }, [siblingPages, boundaryPages, totalPages, currentPageIndex]);\n\n  const handlePageClick = useCallback(\n    (newPage: number) => () => {\n      if (typeof currentPage !== 'number') {\n        setUncontrolledPageIndex(newPage);\n      }\n      onPageChange?.(newPage);\n    },\n    [onPageChange, currentPage],\n  );\n\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_BUTTON_SIZE,\n    BUTTON_SIZES,\n  );\n\n  return errorState ? null : (\n    <HorizontalMenu\n      {...otherProps}\n      size={size}\n      domRef={domRef}\n      testId={testId}\n      sx={merge(\n        { flexWrap: 'wrap', justifyContent: 'center' },\n        theme.components?.Paginaiton?.sxOverride || {},\n        sx,\n      )}\n      className={`${className ?? ''} Pagination Pagination--${sizeClass}`}\n    >\n      {!atStart && showArrows && (\n        <HorizontalMenu.ButtCon\n          size={size}\n          iconVariant=\"bold\"\n          icon=\"ChevronBackward\"\n          onClick={handlePageClick(currentPageIndex - 1)}\n          className=\"paginationArrow paginationArrow--previous\"\n          testId={`${testId}__arrow--previous`}\n          sx={merge({ maxw: '32px' }, buttonSx)}\n        />\n      )}\n      {paginationRange.map((page, index) => {\n        return page === 'dots' ? (\n          <Icon\n            key={`${page}-${index}`}\n            testId={`${testId}__dots--${index}`}\n            icon=\"More\"\n            sx={{\n              mx: 'base.spacing.x1',\n              w:\n                size === 'large'\n                  ? 'base.icon.size.300'\n                  : size === 'medium'\n                  ? 'base.icon.size.250'\n                  : 'base.icon.size.200',\n            }}\n          />\n        ) : (\n          <HorizontalMenu.Button\n            testId={`${testId}__page--${page}`}\n            key={`${page}-${index}`}\n            selected={page === currentPageIndex}\n            onClick={handlePageClick(page)}\n            size={size}\n            sx={merge({}, buttonSx)}\n          >\n            {page}\n          </HorizontalMenu.Button>\n        );\n      })}\n      {!atEnd && showArrows && (\n        <HorizontalMenu.ButtCon\n          icon=\"ChevronForward\"\n          iconVariant=\"bold\"\n          size={size}\n          onClick={handlePageClick(currentPageIndex + 1)}\n          className=\"paginationArrow paginationArrow--next\"\n          testId={`${testId}__arrow--next`}\n          sx={merge({ maxw: '32px' }, buttonSx)}\n        />\n      )}\n    </HorizontalMenu>\n  );\n}\n\nPagination.displayName = 'Pagination';\n","import {\n  ChangeEvent,\n  FocusEvent,\n  KeyboardEvent,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { InputValidationStatus } from '../../types/input';\nimport {\n  DomPropsWithDomRef,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport {\n  focusToNextInput,\n  focusToPrevInput,\n  RE_DIGIT,\n} from '../../utils/inputHelpers';\nimport { Box } from '../Box';\nimport { TextInput } from '../TextInput';\n\ntype PasscodeInputDiscriminatedUnion<T> =\n  | (T & {\n      currentPasscode: string;\n      onPasscodeChange: (value: string) => void;\n    })\n  | (T & {\n      defaultPasscode?: string;\n      onPasscodeChange?: (value: string) => void;\n      currentPasscode?: never;\n    });\n\nexport type PasscodeInputProps = PasscodeInputDiscriminatedUnion<\n  StandardComponentWithProps<\n    HTMLDivElement,\n    {\n      passcodeLength?: number;\n      validationStatus?: InputValidationStatus;\n    }\n  >\n>;\n\nexport function PasscodeInput<RC extends ReactElement | undefined = undefined>(\n  props: RC extends undefined\n    ? DomPropsWithDomRef<'div'> & PasscodeInputProps\n    : PasscodeInputProps & { rc: RC },\n) {\n  const {\n    testId = 'PasscodeInput',\n    domRef,\n    sx = {},\n    onPasscodeChange,\n    defaultPasscode,\n    currentPasscode,\n    passcodeLength = 6,\n    validationStatus,\n    ...domAttrProps\n  } = 'currentPasscode' in props\n    ? { ...props, defaultPasscode: undefined }\n    : { ...props, currentPasscode: undefined };\n\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultPasscode ?? '',\n  );\n  const digitValueAsArray = useMemo(() => {\n    const valueToUse = currentPasscode ?? uncontrolledValue;\n    const valueArray = valueToUse.split('');\n    const items: Array<string> = [];\n\n    for (let i = 0; i < passcodeLength; i += 1) {\n      const char = valueArray[i];\n      if (RE_DIGIT.test(char)) {\n        items.push(char);\n      } else {\n        items.push('');\n      }\n    }\n    return items;\n  }, [currentPasscode, passcodeLength, uncontrolledValue]);\n\n  const handleInputChange = useCallback(\n    (index: number) => (event: ChangeEvent<HTMLInputElement>) => {\n      const valueToUse = currentPasscode ?? uncontrolledValue;\n      const { target } = event;\n      let targetValue = target.value.trim();\n      const isTargetValueADigit = RE_DIGIT.test(targetValue);\n\n      if (!isTargetValueADigit && targetValue !== '') {\n        return;\n      }\n\n      const nextInputEl = target.parentElement?.nextElementSibling\n        ?.firstElementChild as HTMLInputElement | null;\n\n      // only delete digit if next input element has no value\n      if (!isTargetValueADigit && nextInputEl && nextInputEl.value !== '') {\n        return;\n      }\n\n      targetValue = isTargetValueADigit ? targetValue : ' ';\n      const targetValueLength = targetValue.length;\n\n      if (targetValueLength === 1) {\n        const newValue =\n          valueToUse.substring(0, index) +\n          targetValue +\n          valueToUse.substring(index + 1);\n        onPasscodeChange?.(newValue);\n        setUncontrolledValue(newValue);\n        if (!isTargetValueADigit) {\n          return;\n        }\n        focusToNextInput(target);\n      } else if (targetValueLength > 1) {\n        onPasscodeChange?.(targetValue);\n        setUncontrolledValue(targetValue);\n        target.blur();\n      }\n    },\n    [currentPasscode, uncontrolledValue, onPasscodeChange],\n  );\n\n  const handleInputKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const { key } = event;\n      const target = event.target as HTMLInputElement;\n\n      // If user is hitting one of the arrow keys, early exit and focus to next or previous input:\n      if (key === 'ArrowRight' || key === 'ArrowDown') {\n        event.preventDefault();\n        return focusToNextInput(target);\n      }\n      if (key === 'ArrowLeft' || key === 'ArrowUp') {\n        event.preventDefault();\n        return focusToPrevInput(target);\n      }\n\n      const { value: targetValue } = target;\n\n      // keep the selection range position\n      // if the same digit was typed\n      target.setSelectionRange(0, targetValue.length);\n      if (key !== 'Backspace' || targetValue !== '') {\n        return false;\n      }\n\n      focusToPrevInput(target);\n      return false;\n    },\n    [],\n  );\n\n  const inputOnFocus = useCallback((event: FocusEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    // keep focusing back until previous input\n    // element has value\n    const prevInputEl = target.parentElement?.previousElementSibling\n      ?.firstElementChild as HTMLInputElement | null;\n    if (prevInputEl && prevInputEl.value === '') {\n      return prevInputEl.focus();\n    }\n\n    target.setSelectionRange(0, target.value.length);\n    return false;\n  }, []);\n\n  return (\n    <Box\n      {...domAttrProps}\n      testId={testId}\n      domRef={domRef}\n      sx={merge(\n        {\n          d: 'flex',\n          gap: 'base.spacing.x3',\n        },\n        sx,\n      )}\n    >\n      {digitValueAsArray.map((digit, index) => {\n        return (\n          <TextInput\n            hideClearValueButton\n            validationStatus={validationStatus}\n            testId={`${testId}__TextInput--${index}`}\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onKeyDown={handleInputKeyDown}\n            onChange={handleInputChange(index)}\n            onFocus={inputOnFocus}\n            type=\"text\"\n            value={digit}\n            inputMode=\"numeric\"\n            autoComplete=\"one-time-code\"\n            pattern={`d${passcodeLength}`}\n            maxLength={index === passcodeLength - 1 ? 1 : passcodeLength}\n            sx={{\n              minWidth: '50px',\n\n              '& input': {\n                textAlign: 'center',\n                padding: '0',\n              },\n            }}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nPasscodeInput.displayName = 'PasscodeInput';\n","export const RE_DIGIT = /^\\d+$/;\n\nexport const focusToNextInput = (target: HTMLElement) => {\n  const nextInputElementSibling = target.parentElement?.nextElementSibling\n    ?.firstElementChild as HTMLElement | null;\n  nextInputElementSibling?.focus();\n};\n\nexport const focusToPrevInput = (target: HTMLElement) => {\n  const previousInputElementSibling = target.parentElement\n    ?.previousElementSibling?.firstElementChild as HTMLElement | null;\n  previousInputElementSibling?.focus();\n};\n","import { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetCurrentSizeClass,\n  useGetSubcomponentChild,\n  useTheme,\n} from '../../hooks';\nimport { DomPropsWithDomRef } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport { ProgressBarLeftRollingText } from './ProgressBarLeftRollingText';\nimport { ProgressBarRightText } from './ProgressBarRightText';\nimport {\n  DEFAULT_PROGRESS_BAR_COLOR_VARIANT,\n  DEFAULT_PROGRESS_BAR_SIZE,\n  PROGRESS_BAR_SIZES,\n  ProgressBarProps,\n} from './shared';\nimport {\n  barContainerBaseSx,\n  baseBarSx,\n  getBarContainerSx,\n  getContainerColorVariantSx,\n  getResponsiveBarContainerSx,\n  getVariantBasedBarSx,\n} from './styles';\n\nexport function ProgressBar<RC extends ReactElement | undefined = undefined>({\n  children,\n  size = DEFAULT_PROGRESS_BAR_SIZE,\n  variant,\n  colorVariant = DEFAULT_PROGRESS_BAR_COLOR_VARIANT,\n  sx = {},\n  className,\n  testId = 'ProgressBar',\n  animationKind = 'gentle',\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & ProgressBarProps\n  : ProgressBarProps & { rc: RC }) {\n  const isDeterminant = useMemo(() => variant === 'determinate', [variant]);\n  const { value, ...otherProps } = isDeterminant\n    ? props\n    : { ...props, value: undefined };\n  const theme = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_PROGRESS_BAR_SIZE,\n    PROGRESS_BAR_SIZES,\n  );\n  const allBarContainerSx = merge(\n    barContainerBaseSx,\n    getBarContainerSx({ theme, size: startingSize }),\n    getResponsiveBarContainerSx({ theme, size }),\n  );\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_PROGRESS_BAR_SIZE,\n    PROGRESS_BAR_SIZES,\n  );\n  const leftRollingText = useGetSubcomponentChild(\n    children,\n    ProgressBarLeftRollingText,\n  );\n  const rightText = useGetSubcomponentChild(children, ProgressBarRightText);\n\n  const allBarSx = merge(\n    baseBarSx,\n    getVariantBasedBarSx({\n      variant,\n      value,\n      animationKind,\n    }),\n  );\n  const allContainerSx = merge(\n    { w: '100%' },\n    getContainerColorVariantSx(colorVariant),\n    sx,\n  );\n  const shouldRenderGap =\n    (!leftRollingText && isDeterminant) ||\n    leftRollingText ||\n    rightText ||\n    (!rightText && isDeterminant);\n  return (\n    <Stack\n      {...otherProps}\n      className={`${\n        className ?? ''\n      } ProgressBar ProgressBar--${sizeClass} ProgresBar--${variant}`}\n      sx={allContainerSx}\n      gap={shouldRenderGap ? 'base.spacing.x2' : '0px'}\n      testId={testId}\n    >\n      <Box\n        sx={allBarContainerSx}\n        testId={`${testId}__barContainer`}\n        className=\"barContainer\"\n      >\n        <Box\n          sx={allBarSx}\n          testId={`${testId}__barContainer__bar`}\n          className=\"barContainer__bar\"\n        />\n      </Box>\n\n      <Stack direction=\"row\" className=\"labelsRow\">\n        {!leftRollingText && isDeterminant ? (\n          <ProgressBarLeftRollingText\n            text={`${value}%`}\n            testId={`${testId}__leftSideText`}\n          />\n        ) : leftRollingText ? (\n          <SmartClone testId={`${testId}__leftSideText`}>\n            {leftRollingText}\n          </SmartClone>\n        ) : null}\n\n        {!rightText && isDeterminant ? (\n          <ProgressBarRightText testId={`${testId}__rightSideText`}>\n            100%\n          </ProgressBarRightText>\n        ) : rightText ? (\n          <SmartClone testId={`${testId}__rightSideText`}>\n            {rightText}\n          </SmartClone>\n        ) : null}\n      </Stack>\n    </Stack>\n  );\n}\n\nProgressBar.displayName = 'ProgressBar';\nProgressBar.LeftRollingText = ProgressBarLeftRollingText;\nProgressBar.RightText = ProgressBarRightText;\n","import { BodySize, BodyWeight } from '@biom3/design-tokens';\nimport { ReactElement } from 'react';\n\nimport { RollingText, RollingTextProps } from '../Text';\n\nexport type ProgressBarLeftRollingTextProps<\n  RC extends ReactElement | undefined,\n  Use extends ReactElement | undefined,\n> = RollingTextProps<RC, Use> & {};\n\nexport function ProgressBarLeftRollingText<\n  RC extends ReactElement | undefined = undefined,\n  Use extends ReactElement | undefined = undefined,\n>({\n  className,\n  text,\n  rc,\n  use,\n  ...props\n}: ProgressBarLeftRollingTextProps<RC, Use>) {\n  const { size } = 'size' in props ? props : { size: 'small' };\n  const { weight } = 'weight' in props ? props : { weight: 'regular' };\n  return (\n    <RollingText\n      {...props}\n      rc={rc}\n      use={use}\n      size={size as BodySize}\n      weight={weight as BodyWeight}\n      text={text}\n      sx={{ minw: '50%', '.text': { justifyContent: 'flex-start' } }}\n      className={`${className ?? ''} ProgressBarLeftRollingText`}\n    />\n  );\n}\n\nProgressBarLeftRollingText.displayName = 'ProgressBar.LeftRollingText';\n","import { ReactElement } from 'react';\n\nimport { BodyProps } from '../../types/text';\nimport { Body } from '../Text';\nimport { ProgressBarVariant } from './shared';\n\nexport type ProgressBarRightTextProps<RC extends ReactElement | undefined> =\n  BodyProps<RC> & {\n    variant?: ProgressBarVariant;\n    value?: number;\n  };\n\nexport function ProgressBarRightText<\n  RC extends ReactElement | undefined = undefined,\n>({ size, className, children, ...props }: ProgressBarRightTextProps<RC>) {\n  return (\n    <Body\n      {...props}\n      size={size ?? 'small'}\n      sx={{ ml: 'auto' }}\n      className={`${className ?? ''} ProgressBarRightText`}\n    >\n      {children}\n    </Body>\n  );\n}\n\nProgressBarRightText.displayName = 'ProgressBar.RightText';\n","import { ReactNode } from 'react';\n\nimport { AnimationKind } from '../../types/motion';\nimport { MakeResponsive, StandardComponentWithProps } from '../../types/shared';\n\nexport const PROGRESS_BAR_VARIANTS = ['determinate', 'indeterminate'] as const;\nexport const PROGRESS_BAR_SIZES = ['small', 'medium'] as const;\nexport const DEFAULT_PROGRESS_BAR_SIZE = PROGRESS_BAR_SIZES[1];\nexport const PROGRESS_BAR_COLOR_VARIANTS = [\n  'guidance',\n  'brand',\n  'inverted',\n  'gradient',\n] as const;\nexport const DEFAULT_PROGRESS_BAR_COLOR_VARIANT =\n  PROGRESS_BAR_COLOR_VARIANTS[0];\n\nexport type ProgressBarVariant = (typeof PROGRESS_BAR_VARIANTS)[number];\nexport type ProgressBarSize = (typeof PROGRESS_BAR_SIZES)[number];\nexport type ProgressBarColorVariant =\n  (typeof PROGRESS_BAR_COLOR_VARIANTS)[number];\n\nexport type ProgressBarProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    children?: ReactNode;\n    colorVariant?: ProgressBarColorVariant;\n    size?: MakeResponsive<ProgressBarSize>;\n    value?: number;\n    animationKind?: AnimationKind;\n  } & (\n    | { variant: 'determinate'; value: number }\n    | { variant: 'indeterminate'; value?: never }\n  )\n>;\n","import { keyframes } from '@emotion/react';\nimport { Properties } from 'csstype';\n\nimport { AnimationKind } from '../../types/motion';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport {\n  ProgressBarColorVariant,\n  ProgressBarSize,\n  ProgressBarVariant,\n} from './shared';\n\nexport function getContainerColorVariantSx(variant: ProgressBarColorVariant) {\n  switch (variant) {\n    case 'brand':\n      return {\n        '& .barContainer__bar': {\n          bg: 'base.color.brand.1',\n        },\n        '& .ProgressBarRightText, & .ProgressBarLeftRollingText > .text': {\n          c: 'base.color.brand.1',\n        },\n      };\n\n    case 'gradient':\n      return {\n        '& .barContainer__bar': {\n          bg: 'base.gradient.1',\n        },\n        '& .ProgressBarRightText, & .ProgressBarLeftRollingText > .text': {\n          c: 'base.color.text.primary',\n        },\n      };\n\n    case 'inverted':\n      return {\n        '& .barContainer__bar': {\n          bg: 'base.color.translucent.inverse.1000',\n        },\n        '& .ProgressBarRightText, & .ProgressBarLeftRollingText > .text': {\n          c: 'base.color.translucent.inverse.1000',\n        },\n      };\n\n    case 'guidance':\n    default:\n      return {\n        '& .barContainer__bar': {\n          bg: 'base.color.status.guidance.bright',\n        },\n        '& .ProgressBarRightText, & .ProgressBarLeftRollingText > .text': {\n          c: 'base.color.status.guidance.bright',\n        },\n      };\n  }\n}\n\nexport const barContainerBaseSx = {\n  overflow: 'hidden',\n  brad: 'base.borderRadius.x4',\n  minw: '100px',\n};\n\nexport function getBarContainerSx({\n  size,\n  theme: { base },\n}: {\n  size: ProgressBarSize;\n  theme: BiomeTheme;\n}): Properties {\n  switch (size) {\n    case 'small':\n      return {\n        height: base.spacing.x1,\n      };\n\n    case 'medium':\n    default:\n      return {\n        height: base.spacing.x2,\n      };\n  }\n}\n\nexport const getResponsiveBarContainerSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ProgressBarSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getBarContainerSx,\n  });\n\nexport const baseBarSx = {\n  h: '100%',\n  transitionProperty: 'width',\n};\n\nconst wipeMask = keyframes`\n  0% {\n    translate: -95% 0;\n  }\n  100% {\n    translate: 97% 0;\n  }\n`;\n\nexport function getVariantBasedBarSx({\n  animationKind,\n  variant,\n  value,\n}: {\n  variant: ProgressBarVariant;\n  animationKind: AnimationKind;\n  value?: number;\n}) {\n  switch (variant) {\n    case 'determinate':\n      return {\n        w: `${value}%`,\n        transitionDuration: `base.motion.normal.${animationKind}.cssDuration`,\n        transitionTimingFunction: `base.motion.normal.${animationKind}.cssEase`,\n      };\n\n    case 'indeterminate':\n    default:\n      return {\n        WebkitMaskImage:\n          'linear-gradient(to right, transparent 0%, black 50%, transparent 100%)',\n        animation: `${wipeMask} ${\n          animationKind === 'gentle' ? '1.7s' : '0.8s'\n        } infinite`,\n        animationTimingFunction: 'linear',\n      };\n  }\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/sort-comp */\nimport debounce from 'lodash.debounce';\nimport { Component, createRef, ReactElement, ReactNode } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { Icon } from '../Icon';\nimport { SmartClone } from '../SmartClone';\nimport {\n  containerSx,\n  gridCss,\n  loadingUiSx,\n  overflowCss,\n  sentinalCss,\n  testItemCss,\n} from './style';\n\n// @TODO: Really would love this component to be functional, as opposed\n// to a class, so that it can take advantage of all the biome hooks. :(\n// Turns out, this is a lot more complicated than I thought it would be\n// (given all the stages of initialisation and internal state)\n\ntype RecycleViewListItem = {\n  id: number | string;\n};\n\ntype GridColumnWidthRange =\n  | { min: '100%' }\n  | {\n      min: number;\n      max: number;\n    };\n\nexport type RecycleViewProps<\n  T extends RecycleViewListItem,\n  RC extends ReactElement | undefined,\n> = BoxWithRCAndDomProps<RC> &\n  typeof RecycleView.defaultProps & {\n    initialData: T[];\n    renderItem: (item: T, itemKey?: string) => ReactNode;\n    loadMoreItems?: (concattedItemsSize: number) => Promise<T[]>;\n    gridColumnWidthRange?: GridColumnWidthRange;\n    atEndOfData: boolean;\n    gridGap?: number;\n    padForCardItems?: boolean;\n  };\n\ntype State<T> = {\n  currentItems: T[];\n};\n\nconst ACCEPTABLE_ITEM_WIDTH_RANGE: GridColumnWidthRange = {\n  min: 120,\n  max: 350,\n};\n\ntype PerfFrameCallback = () => void;\n\nexport const notEnoughItemsWarning = (itemsCount: number, gridSize: number) =>\n  `@biom3/react \n<RecycleView /> Warning: \nPagination functionality has been disabled because you have not \nsupplied enough initialData items (${itemsCount}) to power it. \nIf this isn't intentional, please supply more items via initialData prop.\nAt the current screen size, you need to supply at least ${gridSize} items.`;\n\nexport class RecycleView<\n  T extends RecycleViewListItem,\n  RC extends ReactElement | undefined,\n> extends Component<RecycleViewProps<T, RC>, State<T>> {\n  static displayName = 'RecycleView';\n\n  static defaultProps = {\n    padForCardItems: true,\n    gridGap: 10,\n    gridColumnWidthRange: ACCEPTABLE_ITEM_WIDTH_RANGE,\n    // @TODO: wtf eslint. :facepalm:\n    // eslint-disable-next-line react/default-props-match-prop-types\n    sx: {},\n  };\n\n  constructor(props: RecycleViewProps<T, RC>) {\n    super(props);\n    this.state = {\n      currentItems: [],\n    };\n  }\n\n  private dimensions = {\n    container: {\n      w: 0,\n      h: 0,\n    },\n    singleItem: {\n      w: 0,\n      h: 0,\n      outerH: 0,\n    },\n  };\n\n  private shortCircuitPagingFunctionality = false;\n\n  private lastScroll = 0;\n\n  private loadingMoreItems = false;\n\n  private concattedItems: T[] = [];\n\n  private currentColumnWidth = 0;\n\n  private paddingTop = 0;\n\n  private topSentinelPreviousY = 0;\n\n  private bottomSentinelPreviousY = 0;\n\n  private bottomSentinalIsIntersecting = false;\n\n  private currentColumnCount = 1;\n\n  private currentGridSize = 0;\n\n  private currentFirstIndex = 0;\n\n  private topIntersectionObserver: IntersectionObserver | null = null;\n\n  private bottomIntersectionObserver: IntersectionObserver | null = null;\n\n  private containerRef = this.props.domRef || createRef<HTMLDivElement>();\n\n  private testItemRef = createRef<HTMLDivElement>();\n\n  private topSentinelRef = createRef<HTMLDivElement>();\n\n  private bottomSentinelRef = createRef<HTMLDivElement>();\n\n  private gridRef = createRef<HTMLDivElement>();\n\n  private overflowRef = createRef<HTMLDivElement>();\n\n  private scrollTicking = false;\n\n  private rAF: ((callback: PerfFrameCallback) => void) | null = null;\n\n  private rIC: ((callback: PerfFrameCallback) => void) | null = null;\n\n  private debouncedResize = debounce(() => {\n    if (this.handleResize()) {\n      this.initRecycleView();\n    }\n  }, 200);\n\n  private containerResizeObserver: ResizeObserver | null = null;\n\n  private get currentConcattedItemsDataSize() {\n    return this.concattedItems.length;\n  }\n\n  // means that we always increment by 4 rows at once\n  private rowIncrementAmount = 4;\n\n  private get gridIndexIncrement() {\n    return this.rowIncrementAmount * this.currentColumnCount;\n  }\n\n  private resetPadding() {\n    this.paddingTop = 0;\n  }\n\n  private checkToLoadMoreItems() {\n    // @NOTE: check that we are:\n    // 1. not at the end of the data (props.atEndOfData)\n    // 2. that the last item of currentConcattedItemsDataSize is\n    // inside the currentItems array\n    if (this.props.atEndOfData || this.loadingMoreItems) return false;\n\n    const currentLastItemIndex =\n      this.currentFirstIndex + this.state.currentItems.length;\n    const totalItemsIndexMinusOnePage =\n      this.concattedItems.length -\n      Math.floor(this.state.currentItems.length * 0.5);\n    return currentLastItemIndex >= totalItemsIndexMinusOnePage;\n  }\n\n  private async fetchMoreItems() {\n    if (!this.props.loadMoreItems || this.loadingMoreItems) return;\n\n    this.loadingMoreItems = true;\n    const newItems = await this.props.loadMoreItems(\n      this.currentConcattedItemsDataSize,\n    );\n    this.concattedItems = [...this.concattedItems, ...newItems];\n    this.loadingMoreItems = false;\n    if (this.bottomSentinalIsIntersecting) {\n      this.changePaging(true);\n    }\n  }\n\n  private calculateNewFirstIndex(scrollingDownwards = true) {\n    let firstIndex: number;\n\n    if (scrollingDownwards) {\n      firstIndex = this.currentFirstIndex + this.gridIndexIncrement;\n    } else {\n      firstIndex = this.currentFirstIndex - this.gridIndexIncrement;\n    }\n\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n\n    return firstIndex;\n  }\n\n  private changePaging(downwards: boolean) {\n    const newFirstIndex = this.calculateNewFirstIndex(downwards);\n    this.updatePadding(downwards);\n    this.currentFirstIndex = newFirstIndex;\n    this.chooseCurrentItems();\n    // @TODO: add this stuff:\n    if (downwards && this.checkToLoadMoreItems()) {\n      this.fetchMoreItems();\n    }\n  }\n\n  private updatePadding(scrollingDownwards = true) {\n    const paddingOffset =\n      this.dimensions.singleItem.outerH * this.rowIncrementAmount;\n\n    if (scrollingDownwards) {\n      this.paddingTop += paddingOffset;\n    } else {\n      this.paddingTop =\n        this.paddingTop === 0 ? 0 : this.paddingTop - paddingOffset;\n    }\n  }\n\n  private topSentinelCallback = ([entry]: IntersectionObserverEntry[]) => {\n    if (this.shortCircuitPagingFunctionality) return;\n    // Stop users from going off the page (in terms of the results set total)\n    if (this.currentFirstIndex === 0) {\n      this.resetPadding();\n    }\n\n    const { isIntersecting } = entry;\n    const currentY = entry.boundingClientRect.top;\n    const shouldChangePage =\n      currentY > this.topSentinelPreviousY && isIntersecting;\n    // @NOTE: if the user has scrolled up enough, trigger a new page event:\n    if (shouldChangePage) {\n      this.changePaging(false);\n    }\n    // Store current offset, for the next time:\n    this.topSentinelPreviousY = currentY;\n  };\n\n  private bottomSentinelCallback = ([entry]: IntersectionObserverEntry[]) => {\n    if (this.shortCircuitPagingFunctionality) return;\n    const { isIntersecting } = entry;\n    this.bottomSentinalIsIntersecting = isIntersecting;\n    const currentY = entry.boundingClientRect.top;\n    // Stop the paging from going further than the edge of the concattedItems:\n    if (\n      this.currentFirstIndex ===\n        this.currentConcattedItemsDataSize - this.currentGridSize ||\n      this.loadingMoreItems\n    ) {\n      this.bottomSentinelPreviousY = currentY;\n      return;\n    }\n    const shouldChangePage =\n      currentY < this.bottomSentinelPreviousY && isIntersecting;\n    // @NOTE: if the user has scrolled down enough, trigger a new page event:\n    if (shouldChangePage) {\n      this.changePaging(true);\n    }\n    // Store current offset, for the next time:\n    this.bottomSentinelPreviousY = currentY;\n  };\n\n  // @TODO: sadly - we cannot seem to get away without some basic onScroll\n  // listening, as its pretty simple for a user to scroll so quickly that\n  // they end up scrolling past the sentinels without triggering them\n  // Would love to work out another way around this, which doesnt involve\n  // listening to onScroll\n  private debouncedOnScroll = debounce(\n    () => {\n      if (this.shortCircuitPagingFunctionality) return;\n\n      if (!this.scrollTicking) {\n        this.scrollTicking = true;\n        this.rIC?.(() => {\n          this.rAF?.(() => {\n            const containerRect =\n              this.overflowRef.current!.getBoundingClientRect();\n            const topSentinenRect =\n              this.topSentinelRef.current!.getBoundingClientRect();\n            const currentScroll = this.overflowRef.current!.scrollTop;\n            const isScrollingUp = currentScroll < this.lastScroll;\n            const hasOverScrolled =\n              topSentinenRect.top >= containerRect.top && isScrollingUp;\n            if (hasOverScrolled) {\n              const scrollDifference = this.lastScroll - currentScroll;\n              if (scrollDifference > containerRect.height) {\n                // @NOTE: jump the user back to the top of the page\n                this.reset();\n              } else {\n                // @NOTE: jump the user to the next page upwards\n                this.changePaging(false);\n              }\n            }\n            this.lastScroll = currentScroll;\n            this.scrollTicking = false;\n          });\n        });\n      }\n    },\n    25,\n    { leading: true },\n  );\n\n  private initListeners() {\n    if (\n      !this.topSentinelRef.current ||\n      !this.bottomSentinelRef.current ||\n      !this.overflowRef.current ||\n      typeof this.containerRef === 'function' ||\n      !this.containerRef.current\n    ) {\n      // @NOTE: early exit if we dont have all the domRef's that we need\n      return;\n    }\n\n    if (\n      !this.topIntersectionObserver ||\n      !this.bottomIntersectionObserver ||\n      !this.containerResizeObserver\n    ) {\n      this.topIntersectionObserver = new IntersectionObserver(\n        this.topSentinelCallback,\n        {\n          root: this.overflowRef.current,\n        },\n      );\n      this.bottomIntersectionObserver = new IntersectionObserver(\n        this.bottomSentinelCallback,\n        {\n          root: this.overflowRef.current,\n        },\n      );\n      this.containerResizeObserver = new ResizeObserver(this.debouncedResize);\n    }\n\n    // Enable the observers:\n    this.topIntersectionObserver.observe(this.topSentinelRef.current);\n    this.bottomIntersectionObserver.observe(this.bottomSentinelRef.current);\n    this.containerResizeObserver.observe(this.containerRef.current);\n\n    // @NOTE: bind scroll event, to watch for \"FAST\" scrolls:\n    this.overflowRef.current.addEventListener('scroll', this.debouncedOnScroll);\n  }\n\n  private unloadListeners() {\n    if (\n      !this.topSentinelRef.current ||\n      !this.bottomSentinelRef.current ||\n      typeof this.containerRef === 'function' ||\n      !this.containerRef.current ||\n      !this.overflowRef.current\n    ) {\n      // @NOTE: early exit if we dont have all the domRef's that we need\n      return;\n    }\n\n    this.topIntersectionObserver?.unobserve(this.topSentinelRef.current);\n    this.bottomIntersectionObserver?.unobserve(this.bottomSentinelRef.current);\n    this.containerResizeObserver?.unobserve(this.containerRef.current);\n    this.overflowRef.current.removeEventListener(\n      'scroll',\n      this.debouncedOnScroll,\n    );\n  }\n\n  private handleResize() {\n    if (\n      !this.gridRef.current ||\n      typeof this.containerRef === 'function' ||\n      !this.containerRef.current ||\n      !this.testItemRef.current\n    ) {\n      // @NOTE: early exit if we dont have all the domRef's that we need\n      return false;\n    }\n\n    // @NOTE: grab the width of the nodePoolContainerDom,\n    // because we need the width minus any scroll bars\n    this.dimensions.container.w = this.gridRef.current.offsetWidth;\n    this.dimensions.container.h = this.containerRef.current.offsetHeight;\n    this.dimensions.singleItem.w = this.testItemRef.current.offsetWidth;\n    this.dimensions.singleItem.h = this.testItemRef.current.offsetHeight;\n    this.dimensions.singleItem.outerH =\n      this.testItemRef.current.offsetHeight + this.props.gridGap;\n\n    return true;\n  }\n\n  private chooseCurrentItems() {\n    const newState = { ...this.state };\n    newState.currentItems = this.concattedItems.slice(\n      this.currentFirstIndex,\n      this.currentFirstIndex + this.currentGridSize,\n    );\n    this.setState(newState);\n  }\n\n  private reset() {\n    this.currentFirstIndex = 0;\n    this.resetPadding();\n    if (this.overflowRef.current) {\n      this.overflowRef.current.scrollTop = 0;\n    }\n    this.chooseCurrentItems();\n  }\n\n  private initRecycleView() {\n    // @NOTE: proceed with the initialization\n    this.concattedItems = [...this.props.initialData];\n    this.reset();\n    this.calculateGridColumns();\n    this.calculateAppropriateListSize();\n    this.chooseCurrentItems();\n    this.initListeners();\n  }\n\n  private calculateAppropriateListSize() {\n    const {\n      dimensions: { container, singleItem },\n    } = this;\n\n    if (container.h === 0) {\n      return;\n    }\n\n    // @NOTE: Smaller form-factor screens require greater ratio's for the\n    // total list item size vs the screen size\n    // (to prevent the intersection observers from triggering during page changes)\n    const heightMultiplyer =\n      this.currentColumnCount === 1\n        ? 6.5\n        : container.h <= 150\n        ? 13\n        : container.h <= 250\n        ? 10\n        : container.h <= 500\n        ? 6\n        : 4;\n    let rowCount = 1;\n    let looping = true;\n    while (looping && rowCount < 100) {\n      const allRowsHeight = rowCount * singleItem.outerH;\n      if (allRowsHeight >= container.h * heightMultiplyer) {\n        looping = false;\n      } else {\n        rowCount += 1;\n      }\n    }\n\n    this.currentGridSize = rowCount * this.currentColumnCount;\n\n    // @NOTE: if the user hasnt supplied enough data\n    if (this.currentGridSize >= this.props.initialData.length) {\n      if (this.props.initialData.length !== 0)\n        console.warn(\n          notEnoughItemsWarning(\n            this.props.initialData.length,\n            this.currentGridSize + 1,\n          ),\n        );\n      this.shortCircuitPagingFunctionality = true;\n    } else {\n      this.shortCircuitPagingFunctionality = false;\n    }\n  }\n\n  private calculateGridColumns() {\n    const { container } = this.dimensions;\n\n    if (container.w === 0) {\n      return;\n    }\n\n    let columnCount = 1;\n    let cardWidth = container.w;\n\n    // @NOTE: support either a row of 1 or a row of X columns\n    if (\n      typeof this.props.gridColumnWidthRange.min === 'number' &&\n      container.w >\n        (this.props.gridColumnWidthRange.min + this.props.gridGap * 2) * 2\n    ) {\n      let looping = true;\n      // @NOTE: protect while loop from crashing out 50 * 200 = 8000px\n      // (no desktop resolutions should ever get wider than this ...)\n      while (looping && columnCount <= 50) {\n        cardWidth =\n          Math.floor(container.w / columnCount) -\n          (this.props.gridGap * (columnCount - 1)) / columnCount;\n        if (\n          cardWidth <= this.props.gridColumnWidthRange.max &&\n          cardWidth >= this.props.gridColumnWidthRange.min\n        ) {\n          looping = false;\n        } else {\n          columnCount += 1;\n        }\n      }\n    }\n\n    this.currentColumnWidth = cardWidth;\n    this.currentColumnCount = columnCount;\n  }\n\n  private initPerfCallbacks() {\n    // @TODO: sadly, window.requestIdleCallback is not supported by\n    // Safari, so we have to use fallback to a plain callback\n    this.rAF = (callback: () => void) => window.requestAnimationFrame(callback);\n    this.rIC =\n      'requestIdleCallback' in window\n        ? (callback: () => void) =>\n            window.requestIdleCallback(callback, { timeout: 100 })\n        : (callback: () => void) => callback();\n  }\n\n  /* COMPONENT LIFE-CYCLE EVENTS:\n  ----------------------------------------------------------------------- */\n\n  componentDidMount() {\n    this.initPerfCallbacks();\n\n    if (this.handleResize()) {\n      this.initRecycleView();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unloadListeners();\n  }\n\n  componentDidUpdate(prevProps: RecycleViewProps<T, RC>) {\n    if (\n      prevProps.initialData?.[0]?.id !== this.props.initialData?.[0]?.id &&\n      this.handleResize()\n    ) {\n      // @NOTE: save off a copy of the initialData - so that we can concat\n      // it with any new data that comes in\n      this.initRecycleView();\n    }\n  }\n\n  /* COMPONENT RENDER:\n  ----------------------------------------------------------------------- */\n\n  render() {\n    const {\n      gridGap,\n      padForCardItems,\n      rc,\n      testId,\n      sx,\n      initialData,\n      renderItem,\n      loadMoreItems,\n      gridColumnWidthRange,\n      atEndOfData,\n      className,\n      ...otherDomProps\n    } = this.props;\n    return (\n      <Box\n        {...otherDomProps}\n        rc={rc || <div />}\n        domRef={this.containerRef}\n        testId={testId}\n        sx={merge(containerSx, sx) as BoxWithRCAndDomProps<undefined>['sx']}\n        className={`${className ?? ''} container`}\n      >\n        <div\n          ref={this.testItemRef}\n          css={testItemCss}\n          style={{\n            width: `${this.currentColumnWidth}px`,\n          }}\n          className=\"testItem\"\n        >\n          {this.props.initialData[0] &&\n            this.props.renderItem(this.props.initialData[0], 'testElement')}\n        </div>\n        <div\n          css={overflowCss(this.props.padForCardItems)}\n          className=\"overflow\"\n          ref={this.overflowRef}\n        >\n          <div\n            css={{\n              position: 'relative',\n              paddingTop: `${this.paddingTop}px`,\n              minHeight: '100%',\n            }}\n            className=\"overflow-inner\"\n          >\n            <div\n              data-sentinel=\"top\"\n              ref={this.topSentinelRef}\n              css={merge(sentinalCss, {\n                top: `${this.paddingTop}px`,\n              })}\n            />\n            <div\n              css={gridCss(this.props.padForCardItems, this.props.gridGap)}\n              ref={this.gridRef}\n              className=\"grid\"\n            >\n              {this.state.currentItems.map(item => {\n                return (\n                  <SmartClone\n                    sx={{\n                      width: `${this.currentColumnWidth}px`,\n                    }}\n                    key={item.id}\n                  >\n                    {this.props.renderItem(item)}\n                  </SmartClone>\n                );\n              })}\n              {this.loadingMoreItems && (\n                <Box sx={loadingUiSx} className=\"loading-container\">\n                  <Icon icon=\"Loading\" sx={{ width: 'base.icon.size.300' }} />\n                </Box>\n              )}\n            </div>\n\n            <div\n              data-sentinel=\"bottom\"\n              ref={this.bottomSentinelRef}\n              css={merge(sentinalCss, {\n                bottom: '0px',\n              })}\n            />\n          </div>\n        </div>\n      </Box>\n    );\n  }\n}\n\nRecycleView.displayName = 'RecycleView';\n","import { Interpolation } from '@emotion/react';\nimport { CSSProperties } from 'react';\n\nimport { SxProps } from '../../types';\nimport { BiomeTheme } from '../../types/theme';\n\nexport const containerSx: SxProps = {\n  flexGrow: 1,\n  width: '100%',\n  height: '100%',\n  maxHeight: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n};\n\nexport const overflowCss = (\n  padForCardItems: boolean,\n): Interpolation<BiomeTheme> => ({\n  flex: 1,\n  overflow: 'hidden',\n  overflowY: 'scroll',\n  ...(padForCardItems ? { paddingLeft: '10px', paddingRight: '10px' } : {}),\n});\n\nexport const gridCss = (\n  padForCardItems: boolean,\n  gridGap: number,\n): Interpolation<BiomeTheme> => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: `${gridGap}px`,\n  ...(padForCardItems ? { paddingTop: '12px', paddingBottom: '12px' } : {}),\n});\n\nexport const testItemCss: Interpolation<BiomeTheme> = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  opacity: 0,\n  pointerEvents: 'none',\n};\n\nexport const loadingUiSx: SxProps = {\n  width: '100%',\n  padding: 'base.spacing.x5',\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nexport const sentinalCss: CSSProperties = {\n  pointerEvents: 'none',\n  position: 'absolute',\n  left: 0,\n  width: '100%',\n  height: '200px',\n  // @TODO: un-comment this to make it easier to debug UI issues\n  // background: 'red',\n  // opacity: 0.6,\n};\n","import { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChildren } from '../../hooks';\nimport { BiomeTheme } from '../../types/theme';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { SpineMenuItem } from './SpineMenuItem';\nimport { spineMenuSx } from './styles';\n\nexport const SPINE_MENU_SIZES = ['small', 'medium', 'large'] as const;\nexport const DEFAULT_SPINE_MENU_SIZE: SpineMenuSize = 'medium';\nexport type SpineMenuSize = (typeof SPINE_MENU_SIZES)[number];\n\nexport type SpineMenuBaseProps<\n  RC extends ReactElement | undefined = undefined,\n> = BoxWithRCAndDomProps<RC> & { spinePosition?: 'left' | 'right' };\n\nexport function SpineMenu<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  children,\n  // @TODO: size is not currently supported, but will be in the future\n  // size = DEFAULT_SPINE_MENU_SIZE,\n  rc = <aside />,\n  spinePosition = 'left',\n  ...props\n}: SpineMenuBaseProps<RC>) {\n  const items = useGetSubcomponentChildren(children, SpineMenuItem);\n  const mergedSx = useMemo(\n    () =>\n      merge(\n        spineMenuSx,\n        {\n          brad: (theme: BiomeTheme) =>\n            spinePosition === 'left'\n              ? `0px ${theme.base.borderRadius.x8} 0px 0px`\n              : `${theme.base.borderRadius.x8} 0px 0px 0px`,\n        },\n        sx,\n      ),\n    [spinePosition, sx],\n  );\n  return (\n    <Box {...props} rc={rc} sx={mergedSx}>\n      {items}\n    </Box>\n  );\n}\n\nSpineMenu.displayName = 'SpineMenu';\nSpineMenu.Item = SpineMenuItem;\n","import { ClassNames } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChild } from '../../hooks';\nimport { BaseClickableWithRCAndDomProps } from '../../types/clickable';\nimport { Badge } from '../Badge';\nimport { BaseClickable } from '../Clickable';\nimport { Icon } from '../Icon';\nimport { SmartClone } from '../SmartClone';\nimport { Body } from '../Text';\nimport { badgeSx, iconSx, spineMenuItemSx } from './styles';\n\nexport type SpineMenuItemProps<\n  RC extends ReactElement | undefined = undefined,\n> = BaseClickableWithRCAndDomProps<RC> & {\n  selected?: boolean;\n};\nexport function SpineMenuItem<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  children,\n  testId,\n  selected,\n  className,\n  ...props\n}: SpineMenuItemProps<RC>) {\n  const label = useGetSubcomponentChild(children, Body);\n  const icon = useGetSubcomponentChild(children, Icon);\n  const badge = useGetSubcomponentChild(children, Badge);\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <BaseClickable\n          {...props}\n          testId={testId}\n          sx={merge(spineMenuItemSx, sx)}\n          className={cx(className, { selected })}\n        >\n          {icon && (\n            <SmartClone testId={`${testId}__icon`} sx={iconSx}>\n              {icon}\n            </SmartClone>\n          )}\n          {label && (\n            <SmartClone\n              testId={`${testId}__label`}\n              size=\"small\"\n              sx={{ c: 'inherit' }}\n            >\n              {label}\n            </SmartClone>\n          )}\n          {badge && (\n            <SmartClone testId={`${testId}__badge`} sx={badgeSx}>\n              {badge}\n            </SmartClone>\n          )}\n        </BaseClickable>\n      )}\n    </ClassNames>\n  );\n}\n\nSpineMenuItem.displayName = 'SpineMenu.Item';\nSpineMenuItem.Label = Body;\nSpineMenuItem.Icon = Icon;\nSpineMenuItem.Badge = Badge;\n","export const spineMenuSx = {\n  d: 'flex',\n  flexDirection: 'column',\n  w: '112px',\n  h: '100%',\n  flexGrow: 1,\n  px: 'base.spacing.x2',\n  py: 'base.spacing.x6',\n  gap: 'base.spacing.x2',\n  bg: 'base.color.neutral.700',\n  boxShadow: 'base.shadow.200',\n  overflowX: 'hidden',\n  overflowY: 'auto',\n};\n\nexport const spineMenuItemSx = {\n  d: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  position: 'relative',\n  gap: 'base.spacing.x2',\n  py: 'base.spacing.x3',\n  color: 'base.color.text.secondary',\n  fill: 'base.color.text.secondary',\n  borderRadius: 'base.borderRadius.x4',\n\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: '0px',\n    top: '0px',\n    w: '100%',\n    h: '100%',\n    borderRadius: 'base.borderRadius.x4',\n    border: '1px solid transparent',\n  },\n\n  '&:hover, &.selected': {\n    c: 'base.color.text.primary',\n    fill: 'base.color.text.primary',\n    bg: 'base.color.translucent.emphasis.200',\n    boxShadow: 'base.shadow.300',\n  },\n\n  '&:hover::before, &.selected::before': {\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n\n  '&:active': {\n    boxShadow: 'base.shadow.200',\n  },\n\n  '&:active::before': {\n    borderWidth: '2px',\n    borderColor: 'base.color.translucent.standard.1000',\n  },\n};\n\nexport const badgeSx = {\n  position: 'absolute',\n  top: '4px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  ml: '10px',\n};\n\nexport const iconSx = { width: 'base.icon.size.250', fill: 'inherit' };\n","export const STEPPER_SIZES = ['small', 'medium'] as const;\nexport const DEFAULT_STEPPER_SIZE = STEPPER_SIZES[1];\nexport type StepperSize = (typeof STEPPER_SIZES)[number];\n\nexport const STEPPER_VARIANTS = ['horizontal', 'vertical'] as const;\nexport const DEFAULT_STEPPER_VARIANT = STEPPER_VARIANTS[0];\nexport type StepperVariant = (typeof STEPPER_VARIANTS)[number];\n","import {\n  Children,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetCurrentSizeClass,\n  useGetSubcomponentChildren,\n} from '../../hooks';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { isNumberWithinTotal, renderNullAndWarnUser } from '../../utils';\nimport { SmartClone } from '../SmartClone';\nimport { Stack } from '../Stack';\nimport {\n  DEFAULT_STEPPER_SIZE,\n  DEFAULT_STEPPER_VARIANT,\n  STEPPER_SIZES,\n  STEPPER_VARIANTS,\n  StepperSize,\n  StepperVariant,\n} from './shared';\nimport { StepperStep } from './StepperStep';\nimport { baseStepperSx } from './styles';\n\nexport type StepperDiscriminatedUnion<T> =\n  | (T & {\n      currentStep: number;\n      onStepChange: (value: number) => void;\n    })\n  | (T & {\n      defaultStep?: number;\n      onStepChange?: (value: number) => void;\n      currentStep?: never;\n    });\n\nexport type StepperProps = StandardComponentWithProps<\n  HTMLDivElement,\n  StepperDiscriminatedUnion<{\n    variant?: MakeResponsive<StepperVariant>;\n    size?: MakeResponsive<StepperSize>;\n    children?: ReactNode;\n    disableFutureStepSelect?: boolean;\n  }>\n>;\n\nexport function Stepper<RC extends ReactElement | undefined = undefined>(\n  props: RC extends undefined\n    ? DomPropsWithDomRef<'div'> & StepperProps\n    : StepperProps & { rc: RC },\n) {\n  const {\n    testId = 'Stepper',\n    sx = {},\n    currentStep,\n    defaultStep = 1,\n    onStepChange,\n    children,\n    variant = DEFAULT_STEPPER_VARIANT,\n    size = DEFAULT_STEPPER_SIZE,\n    disableFutureStepSelect = false,\n    className,\n    ...otherProps\n  } = 'currentStep' in props\n    ? { ...props, defaultStep: undefined }\n    : { ...props, currentStep: undefined };\n\n  const steps = useGetSubcomponentChildren(children, StepperStep);\n  const totalSteps = steps?.length || 0;\n  const [uncontrolledStepIndex, setUncontrolledStepIndex] = useState<number>(\n    typeof currentStep === 'number'\n      ? currentStep\n      : isNumberWithinTotal(defaultStep, totalSteps)\n      ? defaultStep\n      : 1,\n  );\n  const activeStepIndex = currentStep ?? uncontrolledStepIndex;\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_STEPPER_SIZE,\n    STEPPER_SIZES,\n  );\n  const variantClass = useGetCurrentSizeClass(\n    variant,\n    DEFAULT_STEPPER_VARIANT,\n    STEPPER_VARIANTS,\n  );\n  const handleStepClick = useCallback(\n    (newStep: number) => () => {\n      if (typeof currentStep !== 'number') {\n        setUncontrolledStepIndex(newStep);\n      }\n      onStepChange?.(newStep);\n    },\n    [currentStep, onStepChange],\n  );\n  useEffect(() => {\n    if (\n      (typeof currentStep === 'number' && currentStep <= 0) ||\n      (typeof currentStep === 'number' && currentStep > totalSteps)\n    ) {\n      renderNullAndWarnUser(\n        'Stepper',\n        `Stepper recieved an invalid currentStep property (${currentStep})`,\n      );\n    }\n  }, [currentStep, totalSteps]);\n\n  return (\n    <Stack\n      {...otherProps}\n      testId={testId}\n      className={`${\n        className ?? ''\n      } Stepper Stepper--${variantClass} Stepper--${sizeClass}`}\n      sx={merge(baseStepperSx, sx)}\n    >\n      {Children.map(steps, (child, index) => {\n        return (\n          <SmartClone\n            size={(isValidElement(child) && child.props.size) ?? size}\n            testId={`${testId}__step`}\n            stepIndex={index + 1}\n            activeStepIndex={activeStepIndex}\n            handleStepClick={handleStepClick(index + 1)}\n            totalSteps={totalSteps}\n            variant={variant}\n            disableFutureStepSelect={disableFutureStepSelect}\n          >\n            {child}\n          </SmartClone>\n        );\n      })}\n    </Stack>\n  );\n}\n\nStepper.displayName = 'Stepper';\nStepper.Step = StepperStep;\n","import { ClassNames } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetCurrentSizeClass, useTheme } from '../../hooks';\nimport { BaseClickableWithRCAndDomProps } from '../../types/clickable';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { BaseClickable } from '../Clickable';\nimport { DuoCon } from '../DuoCon';\nimport { Stack } from '../Stack';\nimport {\n  DEFAULT_STEPPER_SIZE,\n  DEFAULT_STEPPER_VARIANT,\n  STEPPER_SIZES,\n  STEPPER_VARIANTS,\n  StepperSize,\n  StepperVariant,\n} from './shared';\nimport {\n  baseStepBadgeSx,\n  baseStepSx,\n  getResponsiveStepBadgeSx,\n  getResponsiveStepSx,\n  getStepBadgeStateSx,\n  getStepBadgeSx,\n  getStepSx,\n} from './styles';\n\nexport type StepperStepProps = Omit<\n  BaseClickableWithRCAndDomProps<undefined>,\n  'size' | 'rc'\n> & {\n  size?: MakeResponsive<StepperSize>;\n  stepIndex?: number;\n  activeStepIndex?: number;\n  handleStepClick?: any;\n  totalSteps?: number;\n  variant?: StepperVariant;\n  disableFutureStepSelect?: boolean;\n};\n\nexport function StepperStep({\n  children,\n  className,\n  size = DEFAULT_STEPPER_SIZE,\n  stepIndex,\n  activeStepIndex,\n  sx = {},\n  handleStepClick,\n  variant = DEFAULT_STEPPER_VARIANT,\n  totalSteps,\n  testId,\n  disableFutureStepSelect,\n  ...props\n}: StepperStepProps) {\n  const theme = useTheme();\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_STEPPER_SIZE,\n    STEPPER_SIZES,\n  );\n  const variantClass = useGetCurrentSizeClass(\n    variant,\n    DEFAULT_STEPPER_VARIANT,\n    STEPPER_VARIANTS,\n  );\n  // @NOTE: early exit, render nothing, when these values are not valid:\n  if (\n    typeof stepIndex !== 'number' ||\n    typeof activeStepIndex !== 'number' ||\n    typeof totalSteps !== 'number'\n  ) {\n    return null;\n  }\n\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_STEPPER_SIZE,\n    STEPPER_SIZES,\n  );\n  const stepSx = merge(\n    baseStepSx,\n    getStepSx({ size: startingSize, theme }),\n    getResponsiveStepSx({ size, theme }),\n    sx,\n  );\n  const stepBadgeSx = merge(\n    baseStepBadgeSx,\n    getStepBadgeStateSx({ stepIndex, activeStepIndex }),\n    getStepBadgeSx({ size: startingSize, theme }),\n    getResponsiveStepBadgeSx({ size, theme }),\n  );\n  const stepDuoConSx = merge(\n    baseStepBadgeSx,\n    getStepBadgeSx({ size: startingSize, theme }),\n    getResponsiveStepBadgeSx({ size, theme }),\n  );\n  const isCompleteStep = stepIndex < activeStepIndex;\n  const isActiveStep = stepIndex === activeStepIndex;\n  const isFutureStep = stepIndex > activeStepIndex;\n  const isLastStep = stepIndex === totalSteps;\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <BaseClickable\n          {...props}\n          testId={testId}\n          className={cx(\n            className,\n            'StepperStep',\n            `StepperStep--${variantClass}`,\n            `StepperStep--${sizeClass}`,\n            {\n              'StepperStep--active': isActiveStep,\n              'StepperStep--complete': isCompleteStep,\n              'StepperStep--future': isFutureStep,\n              'StepperStep--lastStep': isLastStep,\n            },\n          )}\n          sx={stepSx}\n          onClick={handleStepClick}\n          disabled={isFutureStep && disableFutureStepSelect}\n        >\n          {isCompleteStep ? (\n            <DuoCon\n              icon=\"Tick\"\n              colorVariant=\"success\"\n              className=\"StepperStep__duoCon\"\n              iconVariant=\"bold\"\n              variant=\"bold\"\n              sx={stepDuoConSx}\n              testId={`${testId}__duoCon`}\n            />\n          ) : (\n            <Stack\n              sx={stepBadgeSx}\n              rc={<span />}\n              testId={`${testId}__badge`}\n              className=\"StepperStep__badge\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              {stepIndex}\n            </Stack>\n          )}\n\n          {children}\n        </BaseClickable>\n      )}\n    </ClassNames>\n  );\n}\n\nStepperStep.displayName = 'Stepper.Step';\n","import { DeeplyNestedSx } from '../../types';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\nimport { getBodyTextStyles } from '../../utils/textStyleHelpers';\nimport { StepperSize } from './shared';\n\nexport const baseStepperSx = {\n  width: '100%',\n\n  '&.Stepper--horizontal': {\n    gap: 'base.spacing.x12',\n    flexDirection: 'row',\n  },\n\n  '&.Stepper--vertical': {\n    flexDirection: 'column',\n\n    '&.Stepper--small': {\n      gap: 'base.spacing.x8',\n    },\n    '&.Stepper--medium': {\n      gap: 'base.spacing.x10',\n    },\n  },\n};\n\nexport const baseStepSx: DeeplyNestedSx = {\n  d: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  justifyContent: 'center',\n  c: 'base.color.text.secondary',\n  bg: 'base.color.translucent.standard.100',\n  flex: 1,\n  brad: 'base.borderRadius.x25',\n  whiteSpace: 'nowrap',\n  textAlign: 'left',\n  pos: 'relative',\n\n  '&[disabled]': {\n    cursor: 'default',\n  },\n\n  '&:hover:not(.StepperStep--active):not([disabled])': {\n    '.StepperStep__badge': {\n      bg: 'base.color.translucent.standard.200',\n    },\n  },\n\n  '&.StepperStep--active, &.StepperStep--complete': {\n    c: 'base.color.text.primary',\n    boxShadow: ({ base }) =>\n      `inset 0 0 0 1px ${base.color.translucent.standard[200]}`,\n  },\n\n  '&.StepperStep--active': {\n    bg: 'base.color.translucent.emphasis.500',\n  },\n\n  '&:not(.StepperStep--lastStep)::after': {\n    content: '\"\"',\n    pos: 'absolute',\n  },\n\n  '&.StepperStep--horizontal::after': {\n    width: 'base.spacing.x8',\n    height: '1px',\n  },\n\n  '&.StepperStep--vertical::after': {\n    width: '1px',\n  },\n\n  '&.StepperStep--horizontal.StepperStep--complete': {\n    '&::after': {\n      top: '50%',\n      left: ({ base }) => `calc(100% + ${base.spacing.x2})`,\n      translate: '0 -50%',\n      w: '32px',\n      h: '1px',\n      bg: 'base.color.text.primary',\n    },\n  },\n\n  '&.StepperStep--vertical': {\n    '&::after': {\n      bg: 'base.color.text.primary',\n      top: ({ base }) => `calc(100% + ${base.spacing.x2})`,\n    },\n    '&.StepperStep--small::after': {\n      h: 'base.spacing.x4',\n      left: 'base.spacing.x4',\n    },\n    '&.StepperStep--medium::after': {\n      h: 'base.spacing.x6',\n      left: 'base.spacing.x6',\n    },\n  },\n};\n\nexport function getStepSx({\n  size,\n  theme,\n}: {\n  size: StepperSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        ...getBodyTextStyles({\n          size: 'small',\n          weight: 'bold',\n          themeProps: theme,\n        }),\n        padding: theme.base.spacing.x1,\n        paddingRight: theme.base.spacing.x3,\n        paddingLeft: theme.base.spacing.x9,\n        minHeight: theme.base.spacing.x8,\n      };\n\n    case 'medium':\n    default:\n      return {\n        ...getBodyTextStyles({\n          size: 'medium',\n          weight: 'bold',\n          themeProps: theme,\n        }),\n        padding: theme.base.spacing.x2,\n        paddingRight: theme.base.spacing.x7,\n        paddingLeft: theme.base.spacing.x14,\n        minHeight: theme.base.spacing.x12,\n      };\n  }\n}\n\nexport const getResponsiveStepSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<StepperSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getStepSx,\n  });\n\nexport function getStepBadgeSx({\n  size,\n  theme: { base },\n}: {\n  size: StepperSize;\n  theme: BiomeTheme;\n}) {\n  switch (size) {\n    case 'small':\n      return {\n        width: base.icon.size[300],\n        height: base.icon.size[300],\n        left: base.spacing.x1,\n      };\n\n    case 'medium':\n    default:\n      return {\n        width: base.icon.size[400],\n        height: base.icon.size[400],\n        left: base.spacing.x2,\n      };\n  }\n}\n\nexport const getResponsiveStepBadgeSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<StepperSize>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getStepBadgeSx,\n  });\n\nexport const baseStepBadgeSx = {\n  p: 'base.spacing.x1',\n  brad: '50%',\n  bg: 'base.color.translucent.standard.100',\n  c: 'inherit',\n  lineHeight: 'unset',\n  pos: 'absolute',\n  top: '50%',\n  translate: '0 -50%',\n};\n\nexport function getStepBadgeStateSx({\n  stepIndex,\n  activeStepIndex,\n}: {\n  stepIndex?: number;\n  activeStepIndex?: number;\n}) {\n  if (stepIndex === undefined || activeStepIndex === undefined) return {};\n  if (stepIndex === activeStepIndex) {\n    return {\n      bg: 'base.color.translucent.standard.1000',\n      c: 'base.color.text.inverse.primary',\n    };\n  }\n  return {};\n}\n","import { ReactElement, useMemo } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useGetCurrentSizeClass,\n  useGetRelativeImageSizeInLayout,\n  useGetResponsiveImageSizes,\n  useTheme,\n} from '../../hooks';\nimport {\n  DEFAULT_IMAGE_SIZE_VARIANT,\n  IMAGE_SIZE_VARIANTS,\n  ImageSizeVariant,\n} from '../../types/image';\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Box } from '../Box';\nimport { FramedImage } from '../FramedImage';\nimport {\n  getContainerSx,\n  getImageSx,\n  getResponsiveContainerSx,\n  getResponsiveImageSx,\n  swapContainerImageSx,\n  swapContainerSx,\n} from './styles';\n\nexport type SwapStackProps = StandardComponentWithProps<\n  HTMLDivElement,\n  {\n    circularFrame?: boolean;\n    primaryImageUrl: string;\n    secondaryImageUrl?: string;\n    direction?: 'left' | 'right';\n    size?: MakeResponsive<ImageSizeVariant>;\n  }\n>;\n\nexport function SwapStack<RC extends ReactElement | undefined = undefined>({\n  circularFrame,\n  primaryImageUrl,\n  secondaryImageUrl,\n  direction = 'left',\n  testId = 'SwapStack',\n  className,\n  size = DEFAULT_IMAGE_SIZE_VARIANT,\n  sx = {},\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & SwapStackProps\n  : SwapStackProps & { rc: RC }) {\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const theme = useTheme();\n  const containerSx = useMemo(\n    () =>\n      merge(\n        swapContainerSx,\n        {\n          pos: 'relative',\n        },\n        getContainerSx({ theme, size: startingSize }),\n        getResponsiveContainerSx({ theme, size }),\n        sx,\n      ),\n    [size, startingSize, sx, theme],\n  );\n  const baseImageSx = useMemo(\n    () =>\n      merge(\n        swapContainerImageSx,\n        getImageSx({ theme, size: startingSize }),\n        getResponsiveImageSx({ theme, size }),\n      ),\n    [size, startingSize, theme],\n  );\n  const responsiveImageSizes = useGetResponsiveImageSizes(size, 'SwapStack');\n  const relativeImageSizeInLayout = useGetRelativeImageSizeInLayout(\n    size,\n    'SwapStack',\n  );\n  const leftImageSx = merge(baseImageSx, {\n    top: 0,\n    left: 0,\n  });\n  const sizeClass = useGetCurrentSizeClass(\n    size,\n    DEFAULT_IMAGE_SIZE_VARIANT,\n    IMAGE_SIZE_VARIANTS,\n  );\n  const rightImageProps = useMemo(\n    () => ({\n      circularFrame,\n      relativeImageSizeInLayout,\n      testId: `${testId}__framedImage--right`,\n      className: 'SwapStack__image SwapStack__image--right',\n      sx: merge(baseImageSx, {\n        bottom: 0,\n        right: 0,\n      }),\n    }),\n    [circularFrame, baseImageSx, relativeImageSizeInLayout, testId],\n  );\n\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      className={`${\n        className ?? ''\n      } SwapStack SwapStack--${sizeClass} SwapStack--${direction} SwapStack--${\n        circularFrame ? 'circle' : 'square'\n      }`}\n      sx={containerSx}\n    >\n      <FramedImage\n        testId={`${testId}__framedImage--left`}\n        circularFrame={circularFrame}\n        imageUrl={primaryImageUrl}\n        className=\"SwapStack__image SwapStack__image--left\"\n        responsiveSizes={responsiveImageSizes}\n        relativeImageSizeInLayout={relativeImageSizeInLayout}\n        sx={leftImageSx}\n      />\n      <FramedImage\n        {...rightImageProps}\n        imageUrl={secondaryImageUrl || primaryImageUrl}\n      />\n    </Box>\n  );\n}\n\nSwapStack.displayName = 'SwapStack';\n","import { Properties } from 'csstype';\n\nimport { ImageSizeVariant } from '../../types/image';\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport { getImageSizeMapping } from '../../utils/imageHelpers';\nimport { getResponsiveSx } from '../../utils/styleHelpers';\n\nconst maskImagePrefix = `url('data:image/svg+xml;utf8,`;\nconst svgXmlns = `xmlns=\"http://www.w3.org/2000/svg\"`;\nexport const swapContainerSx = {\n  pos: 'relative',\n\n  '&.SwapStack--left.SwapStack--circle.SwapStack--small > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 16 16\" ${svgXmlns}><path d=\"M0.0618896 8.99951C0.553793 12.946 3.92028 15.9999 8.00005 15.9999C12.4183 15.9999 16.0001 12.4182 16.0001 7.99995C16.0001 3.92013 12.9461 0.55361 8.99947 0.0617676C8.96625 4.98305 4.98315 8.9662 0.0618896 8.99951Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--circle.SwapStack--medium > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 20 20\" ${svgXmlns}><path d=\"M0.0706147 8.80541C0.0239869 9.19711 0 9.59575 0 10C0 15.5228 4.47715 20 10 20C15.5228 20 20 15.5228 20 10C20 4.47715 15.5228 0 10 0C9.59575 0 9.19711 0.0239869 8.80541 0.0706147C7.96454 4.48525 4.48525 7.96454 0.0706147 8.80541Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--circle.SwapStack--large > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}><path d=\"M0.0307617 17.0002C0.547045 25.3708 7.49936 32 16 32C24.8366 32 32 24.8366 32 16C32 7.49934 25.3708 0.547005 17.0001 0.0307617C16.9836 9.39535 9.39534 16.9837 0.0307617 17.0002Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--circle.SwapStack--xLarge > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 48 48\" ${svgXmlns}><path d=\"M1.40918 32.1222C4.73812 41.3799 13.5959 48.0001 24 48.0001C37.2548 48.0001 48 37.2549 48 24.0001C48 13.5959 41.3797 4.73805 32.1219 1.40918C32.6943 3.509 32.9999 5.71887 32.9999 8.00011C32.9999 21.8072 21.807 33.0001 7.99986 33.0001C5.71871 33.0001 3.50892 32.6946 1.40918 32.1222Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--square.SwapStack--small > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 16 16\" ${svgXmlns}><path d=\"M5.0541e-05 8.99972V13.9999C5.0541e-05 15.1045 0.895481 15.9999 2.00005 15.9999H14.0001C15.1046 15.9999 16.0001 15.1045 16.0001 13.9999V1.99995C16.0001 0.895376 15.1046 -5.44265e-05 14.0001 -5.44265e-05H8.99968V3.99972C8.99968 6.76114 6.76111 8.99972 3.99968 8.99972H5.0541e-05Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--square.SwapStack--medium > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 20 20\" ${svgXmlns}><path d=\"M0 9V18C0 19.1046 0.895431 20 2 20H18C19.1046 20 20 19.1046 20 18V2C20 0.895431 19.1046 0 18 0H9V4C9 6.76142 6.76142 9 4 9H0Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--square.SwapStack--large > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}><path d=\"M8.74698e-06 17.0002V28C8.74698e-06 30.2092 1.79087 32 4.00001 32H28C30.2091 32 32 30.2092 32 28V4.00001C32 1.79087 30.2091 1.38581e-05 28 1.38581e-05H17.0001V12.0002C17.0001 14.7616 14.7616 17.0002 12.0001 17.0002H8.74698e-06Z\"/></svg>')`,\n    },\n  '&.SwapStack--left.SwapStack--square.SwapStack--xLarge > .SwapStack__image--right':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 48 48\" ${svgXmlns}><path d=\"M0 33V44C0 46.2091 1.79086 48 4 48H44C46.2091 48 48 46.2091 48 44V4C48 1.79086 46.2091 0 44 0H33V28C33 30.7614 30.7614 33 28 33H0Z\" /></svg>')`,\n    },\n\n  '&.SwapStack--right.SwapStack--circle.SwapStack--small > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 16 16\" ${svgXmlns}><path d=\"M8 0C3.58172 0 0 3.58172 0 8C0 12.0797 3.0538 15.4461 7.00021 15.9381C7.03334 11.0167 11.0167 7.03334 15.9381 7.00021C15.4461 3.0538 12.0797 0 8 0Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--circle.SwapStack--medium > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 20 20\" ${svgXmlns}><path d=\"M10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20C10.4042 20 10.8029 19.976 11.1946 19.9294C12.0355 15.5147 15.5147 12.0355 19.9294 11.1946C19.976 10.8029 20 10.4042 20 10C20 4.47715 15.5228 0 10 0Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--circle.SwapStack--large > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}><path d=\"M16 0C7.16344 0 0 7.16344 0 16C0 24.5007 6.62929 31.4531 15 31.9693C15.0166 22.6048 22.6048 15.0166 31.9693 15C31.4531 6.62929 24.5007 0 16 0Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--circle.SwapStack--xLarge > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 48 48\" ${svgXmlns}><path d=\"M24 0C10.7452 0 0 10.7452 0 24C0 34.4041 6.62021 43.2619 15.8779 46.5908C15.3055 44.491 15 42.2812 15 40C15 26.1929 26.1929 15 40 15C42.2812 15 44.491 15.3055 46.5908 15.8779C43.2619 6.62021 34.4041 0 24 0Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--square.SwapStack--small > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 16 16\" ${svgXmlns}><path d=\"M4 0C1.79086 0 0 1.79086 0 4V12C0 14.2091 1.79086 16 4 16H7V12C7 9.23858 9.23858 7 12 7H16V4C16 1.79086 14.2091 0 12 0H4Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--square.SwapStack--medium > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 20 20\" ${svgXmlns}><path d=\"M2 0C0.895431 0 0 0.895431 0 2V18C0 19.1046 0.895431 20 2 20H11V16C11 13.2386 13.2386 11 16 11H20V2C20 0.895431 19.1046 0 18 0H2Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--square.SwapStack--large > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 32 32\" ${svgXmlns}><path d=\"M4 0C1.79086 0 0 1.79086 0 4V28C0 30.2091 1.79086 32 4 32H15V20C15 17.2386 17.2386 15 20 15H32V4C32 1.79086 30.2091 0 28 0H4Z\"/></svg>')`,\n    },\n  '&.SwapStack--right.SwapStack--square.SwapStack--xLarge > .SwapStack__image--left':\n    {\n      WebkitMaskImage: `${maskImagePrefix} <svg viewBox=\"0 0 48 48\" ${svgXmlns}><path d=\"M4 0C1.79086 0 0 1.79086 0 4V44C0 46.2091 1.79086 48 4 48H15V20C15 17.2386 17.2386 15 20 15H48V4C48 1.79086 46.2091 0 44 0H4Z\"/></svg>')`,\n    },\n};\n\nexport const swapContainerImageSx = {\n  pos: 'absolute',\n  WebkitMaskPosition: 'left center',\n  WebkitMaskRepeat: 'no-repeat',\n  WebkitMaskSize: 'cover',\n};\n\nexport function getContainerSx({\n  size,\n  theme: { base },\n}: {\n  size: ImageSizeVariant;\n  theme: BiomeTheme;\n}): Properties {\n  const sizeMapping: Record<ImageSizeVariant, string> = {\n    small: base.icon.size[300],\n    medium: base.icon.size[400],\n    large: base.icon.size[500],\n    xLarge: base.icon.size[600],\n  };\n\n  return {\n    width: sizeMapping[size],\n    height: sizeMapping[size],\n  };\n}\n\nexport const getResponsiveContainerSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ImageSizeVariant>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getContainerSx,\n  });\n\nexport function getImageSx({\n  size,\n  theme: { base },\n}: {\n  size: ImageSizeVariant;\n  theme: BiomeTheme;\n}): Properties {\n  const sizeMapping = getImageSizeMapping('SwapStack', { base });\n  return {\n    width: sizeMapping[size],\n    height: sizeMapping[size],\n  };\n}\n\nexport const getResponsiveImageSx = (props: {\n  theme: BiomeTheme;\n  size: MakeResponsive<ImageSizeVariant>;\n}) =>\n  getResponsiveSx({\n    ...props,\n    renderSxAtSize: getImageSx,\n  });\n","import { ClassNames } from '@emotion/react';\nimport {\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  useEventListener,\n  useGetSubcomponentChild,\n  useGetSubcomponentChildren,\n} from '../../hooks';\nimport {\n  DomPropsWithDomRef,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { Box } from '../Box';\nimport { Stack } from '../Stack';\nimport { TableContext } from './context';\nimport { DEFAULT_TABLE_SPACING, TableSettings } from './shared';\nimport {\n  baseContainerSx,\n  baseStickyContainerSx,\n  baseTableStyle,\n} from './style';\nimport { TableBody } from './TableBody';\nimport { TableCaption } from './TableCaption';\nimport { TableCell } from './TableCell';\nimport { TableFoot } from './TableFoot';\nimport { TableHead } from './TableHead';\nimport { TablePageSize } from './TablePageSize';\nimport { TablePagination } from './TablePagination';\nimport { TableRow } from './TableRow';\n\nexport type TableProps = StandardComponentWithProps<\n  HTMLTableElement,\n  Partial<Omit<TableSettings, 'setThWidths'>> & {\n    children: ReactNode;\n    tableBorder?: boolean;\n  }\n>;\n\nexport function Table<RC extends ReactElement | undefined = undefined>({\n  children,\n  verticalSpacing = DEFAULT_TABLE_SPACING,\n  horizontalSpacing = DEFAULT_TABLE_SPACING,\n  rowHoverFx = true,\n  stripedBg = false,\n  tableBorder = false,\n  rowBorder = true,\n  columnBorder = false,\n  stickyHeaders = true,\n  testId = 'TableContainer',\n  sx = {},\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'div'> & TableProps\n  : TableProps & { rc: RC }) {\n  const tableCaption = useGetSubcomponentChild(children, TableCaption);\n  const tableHead = useGetSubcomponentChild(children, TableHead);\n  const tableBody = useGetSubcomponentChild(children, TableBody);\n  const tableFoot = useGetSubcomponentChild(children, TableFoot);\n  const tableRows = useGetSubcomponentChildren(children, TableRow);\n  const tablePagination = useGetSubcomponentChild(children, TablePagination);\n  const tablePageSize = useGetSubcomponentChild(children, TablePageSize);\n  const tableRef = useRef<HTMLTableElement>(null);\n  const [clonedThead, setClonedThead] = useState<HTMLElement | null>(null);\n  const clonedInnerContainerRef = useRef<HTMLTableElement>(null);\n  const scrollTicking = useRef<boolean>(false);\n  const [thWidths, setThWidths] = useState<number[]>([]);\n\n  const tableSettings = useMemo(() => {\n    return {\n      verticalSpacing,\n      horizontalSpacing,\n      rowHoverFx,\n      stripedBg,\n      tableBorder,\n      rowBorder,\n      columnBorder,\n      stickyHeaders,\n      testId,\n      setThWidths,\n    };\n  }, [\n    testId,\n    stripedBg,\n    stickyHeaders,\n    verticalSpacing,\n    horizontalSpacing,\n    tableBorder,\n    rowBorder,\n    rowHoverFx,\n    columnBorder,\n    setThWidths,\n  ]);\n\n  useEventListener(\n    'scroll',\n    event => {\n      if (!stickyHeaders) return;\n      if (!scrollTicking.current) {\n        scrollTicking.current = true;\n        window.requestAnimationFrame(() => {\n          if (event?.target) {\n            const target = event.target as HTMLElement;\n            const left = target.scrollLeft;\n            if (clonedInnerContainerRef.current) {\n              clonedInnerContainerRef.current.style.transform = `translateX(-${left}px)`;\n            }\n          }\n          scrollTicking.current = false;\n        });\n      }\n    },\n    tableRef,\n  );\n\n  // @NOTE: keep track of the headers, so that we can clone them\n  useEffect(() => {\n    const thead = tableRef.current?.querySelector('thead');\n\n    if (thead) {\n      if (!clonedThead) {\n        setClonedThead(thead);\n      }\n    }\n  }, [clonedThead]);\n\n  // @NOTE: keep the width of the sticky headers in sync with\n  // the real ones\n  useEffect(() => {\n    const ths = clonedInnerContainerRef.current?.querySelectorAll('th');\n    if (ths && ths.length > 0) {\n      ths.forEach((th, index) => {\n        // eslint-disable-next-line no-param-reassign\n        th.style.minWidth = `${thWidths[index]}px`;\n      });\n    }\n  }, [thWidths]);\n\n  return (\n    <ClassNames>\n      {({ cx }) => (\n        <TableContext.Provider value={tableSettings}>\n          <Box {...props} testId={testId} sx={merge(baseContainerSx, sx)}>\n            {tableCaption}\n            {stickyHeaders ? (\n              <Box\n                sx={baseStickyContainerSx}\n                testId={`${testId}__stickyHeadersContainer`}\n                className={cx({\n                  tableBorder,\n                })}\n              >\n                {clonedThead && (\n                  <Box\n                    testId={`${testId}__stickyHeadersContainer__table`}\n                    rc={\n                      <table\n                        ref={clonedInnerContainerRef}\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: `<thead>${clonedThead.innerHTML}</thead>`,\n                        }}\n                      />\n                    }\n                    sx={merge(baseTableStyle, {\n                      position: 'sticky',\n                      top: '0',\n                      width: `${tableRef.current?.offsetWidth}px`,\n                      overflow: 'visible',\n                    })}\n                    className={cx('stickyTable', {\n                      rowHoverFx,\n                      stripedBg,\n                      tableBorder,\n                      columnBorder,\n                      rowBorder,\n                      stickyHeaders,\n                    })}\n                  />\n                )}\n              </Box>\n            ) : null}\n\n            <Box\n              rc={<table ref={tableRef} />}\n              sx={baseTableStyle}\n              testId={`${testId}__table`}\n              className={cx({\n                rowHoverFx,\n                stripedBg,\n                tableBorder,\n                columnBorder,\n                rowBorder,\n                stickyHeaders,\n              })}\n            >\n              {tableHead}\n              {tableBody || <TableBody>{tableRows}</TableBody>}\n              {tablePagination || tablePageSize ? (\n                <TableFoot>\n                  <TableRow>\n                    <TableCell colSpan={100}>\n                      <Stack\n                        direction=\"row\"\n                        justifyContent=\"flex-end\"\n                        alignItems=\"center\"\n                      >\n                        {tablePageSize}\n                        {tablePagination}\n                      </Stack>\n                    </TableCell>\n                  </TableRow>\n                </TableFoot>\n              ) : null}\n              {tableFoot}\n            </Box>\n          </Box>\n        </TableContext.Provider>\n      )}\n    </ClassNames>\n  );\n}\n\nTable.displayName = 'Table';\nTable.Cell = TableCell;\nTable.Row = TableRow;\nTable.Body = TableBody;\nTable.Head = TableHead;\nTable.Foot = TableFoot;\nTable.Caption = TableCaption;\nTable.Pagination = TablePagination;\nTable.PageSize = TablePageSize;\n","import { createContext } from 'react';\n\nimport { DEFAULT_TABLE_SPACING, TableSettings } from './shared';\n\nexport const TableContext = createContext<TableSettings>({\n  verticalSpacing: DEFAULT_TABLE_SPACING,\n  horizontalSpacing: DEFAULT_TABLE_SPACING,\n  rowHoverFx: true,\n  stripedBg: false,\n  tableBorder: false,\n  rowBorder: true,\n  columnBorder: false,\n  stickyHeaders: true,\n  testId: 'Table',\n  setThWidths: () => {},\n});\n","import { Dispatch, SetStateAction } from 'react';\n\nimport { MakeResponsive } from '../../types/shared';\n\nexport const TABLE_SPACING_SIZES = [\n  'xxSmall',\n  'xSmall',\n  'small',\n  'medium',\n  'xLarge',\n  'xxLarge',\n] as const;\nexport type TableSpacing = (typeof TABLE_SPACING_SIZES)[number];\nexport const DEFAULT_TABLE_SPACING = 'medium';\n\nexport type TableSettings = {\n  verticalSpacing: MakeResponsive<TableSpacing>;\n  horizontalSpacing: MakeResponsive<TableSpacing>;\n  rowHoverFx: boolean;\n  stripedBg: boolean;\n  tableBorder: boolean;\n  rowBorder: boolean;\n  columnBorder: boolean;\n  stickyHeaders: boolean;\n  testId: string;\n  setThWidths: Dispatch<SetStateAction<number[]>>;\n};\n\nexport type TableChildParentNode = 'thead' | 'tbody' | 'tfoot';\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive, MakeWriteable } from '../../types/shared';\nimport { SxProps } from '../../types/sxProps';\nimport { BiomeTheme } from '../../types/theme';\nimport { vFlex } from '../../utils/sxChunks';\nimport { isError } from '../../utils/textStyleHelpers';\nimport { TableSpacing } from './shared';\n\nexport const baseContainerSx = {\n  ...vFlex,\n  alignItems: 'flex-start',\n  maxw: '100%',\n  margin: '0 auto',\n  position: 'relative',\n};\n\nexport const baseTableStyle = {\n  border: 'none',\n  borderCollapse: 'collapse',\n  d: 'block',\n  textAlign: 'left',\n  maxw: '100%',\n  m: '0',\n  overflowX: 'auto',\n  borderRadius: 'base.borderRadius.x6',\n\n  '&.stickyHeaders': {\n    bradtl: '0px',\n    bradtr: '0px',\n    bradbl: 'base.borderRadius.x6',\n    bradbr: 'base.borderRadius.x6',\n  },\n\n  '&.tableBorder': {\n    border: '1px solid',\n    borderColor: 'base.color.translucent.standard.200',\n  },\n\n  '&.stickyHeaders.tableBorder': {\n    borderTopWidth: '0px',\n  },\n\n  '&.stickyTable.tableBorder': {\n    border: 'none',\n  },\n\n  '&.columnBorder .td, &.columnBorder .th': {\n    borderRight: '1px solid',\n    borderColor: 'base.color.translucent.standard.200',\n  },\n\n  '&.rowBorder .td, &.rowBorder .th': {\n    borderBottom: '1px solid',\n    borderColor: 'base.color.translucent.standard.200',\n  },\n\n  '&.rowBorder .th': {\n    borderColor: 'base.color.translucent.standard.300',\n  },\n\n  '& thead .tr': {\n    bg: 'base.color.translucent.emphasis.400',\n  },\n\n  '& .th': {\n    bg: 'base.color.translucent.emphasis.400',\n  },\n\n  '& tbody .tr': {\n    bg: 'base.color.translucent.emphasis.200',\n  },\n\n  '& .tbody .td': {\n    bg: 'transparent',\n    transitionDuration: 'base.motion.normal.fast.cssDuration',\n    transitionTimingFunction: 'base.motion.normal.fast.cssEase',\n    transitionProperty: 'background',\n  },\n\n  '&.rowHoverFx .tbody tr:hover .td': {\n    bg: 'base.color.translucent.standard.50',\n  },\n\n  '&.stripedBg .tbody .tr:nth-of-type(odd) .td': {\n    bg: 'base.color.translucent.standard.100',\n  },\n\n  '&.stripedBg.rowHoverFx .tbody .tr:nth-of-type(odd):hover .td': {\n    bg: 'base.color.translucent.standard.150',\n  },\n};\n\nexport const baseStickyContainerSx = {\n  position: 'sticky',\n  top: '0',\n  left: '0',\n  width: '100%',\n  overflow: 'clip',\n  zIndex: 1,\n  backdropFilter: 'blur(8px)',\n\n  '&.tableBorder': {\n    border: '1px solid',\n    borderColor: 'base.color.translucent.standard.200',\n    borderBottomWidth: '0px',\n  },\n\n  '& thead th': {\n    textShadow: ({ base }: BiomeTheme) =>\n      `0px 1px 2px ${base.color.translucent.inverse[700]}`,\n  },\n};\n\nexport function getCellSx({\n  horizontalSpacing,\n  verticalSpacing,\n  theme: { base },\n}: {\n  horizontalSpacing?: TableSpacing;\n  verticalSpacing?: TableSpacing;\n  theme: BiomeTheme;\n}) {\n  const style: MakeWriteable<SxProps, string> = {};\n\n  switch (horizontalSpacing) {\n    case 'xxSmall':\n      style.px = base.spacing.x1;\n      break;\n\n    case 'xSmall':\n      style.px = base.spacing.x2;\n      break;\n\n    case 'small':\n      style.px = base.spacing.x3;\n      break;\n\n    case 'xLarge':\n      style.px = base.spacing.x8;\n      break;\n\n    case 'xxLarge':\n      style.px = base.spacing.x10;\n      break;\n\n    case 'medium':\n      style.px = base.spacing.x6;\n      break;\n\n    default:\n      break;\n  }\n\n  switch (verticalSpacing) {\n    case 'xxSmall':\n      style.py = base.spacing.x1;\n      break;\n\n    case 'xSmall':\n      style.py = base.spacing.x2;\n      break;\n\n    case 'small':\n      style.py = base.spacing.x3;\n      break;\n\n    case 'xLarge':\n      style.py = base.spacing.x8;\n      break;\n\n    case 'xxLarge':\n      style.py = base.spacing.x10;\n      break;\n\n    case 'medium':\n      style.py = base.spacing.x6;\n      break;\n\n    default:\n      break;\n  }\n\n  return style;\n}\n\nexport function getResponsiveCellSx({\n  horizontalSpacing,\n  verticalSpacing,\n  theme,\n}: {\n  horizontalSpacing?: MakeResponsive<TableSpacing>;\n  verticalSpacing?: MakeResponsive<TableSpacing>;\n  theme: BiomeTheme;\n}) {\n  const horizontalSpacingAsArray = Array.isArray(horizontalSpacing)\n    ? [...horizontalSpacing]\n    : [horizontalSpacing];\n  horizontalSpacingAsArray.shift();\n  const verticalSpacingAsArray = Array.isArray(verticalSpacing)\n    ? [...verticalSpacing]\n    : [verticalSpacing];\n  verticalSpacingAsArray.shift();\n\n  const horizontalSizeStyles = merge(\n    ...horizontalSpacingAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getCellSx({\n            horizontalSpacing: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  const verticalSizeStyles = merge(\n    ...verticalSpacingAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getCellSx({\n            verticalSpacing: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n\n  return merge(horizontalSizeStyles, verticalSizeStyles);\n}\n\nexport const baseCaptionSx = {\n  captionSide: 'bottom',\n  textAlign: 'left',\n  order: 3,\n  c: 'base.color.text.secondary',\n};\n\nexport const baseTdSx = {\n  verticalAlign: 'middle',\n};\n\nexport function getCaptionSx({\n  verticalSpacing,\n  theme: { base },\n}: {\n  verticalSpacing?: TableSpacing;\n  theme: BiomeTheme;\n}) {\n  switch (verticalSpacing) {\n    case 'xxSmall':\n      return { '--captionGap': base.spacing.x1 };\n\n    case 'xSmall':\n      return { '--captionGap': base.spacing.x2 };\n\n    case 'small':\n      return { '--captionGap': base.spacing.x3 };\n\n    case 'xLarge':\n      return { '--captionGap': base.spacing.x8 };\n\n    case 'xxLarge':\n      return { '--captionGap': base.spacing.x10 };\n\n    case 'medium':\n    default:\n      return { '--captionGap': base.spacing.x6 };\n  }\n}\n\nexport function getResponsiveCaptionSx({\n  verticalSpacing,\n  theme,\n}: {\n  verticalSpacing?: MakeResponsive<TableSpacing>;\n  theme: BiomeTheme;\n}) {\n  const verticalSpacingAsArray = Array.isArray(verticalSpacing)\n    ? [...verticalSpacing]\n    : [verticalSpacing];\n  verticalSpacingAsArray.shift();\n\n  return merge(\n    ...verticalSpacingAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${theme.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getCaptionSx({\n            verticalSpacing: responsiveSize,\n            theme,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n","import { Children, cloneElement, ReactElement, useContext } from 'react';\n\nimport { isChildSubcomponent, renderNullAndWarnUser } from '../../utils';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { TableContext } from './context';\nimport { TableRow } from './TableRow';\n\nexport type TableBodyProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC>;\n\nexport function TableBody<RC extends ReactElement | undefined = undefined>({\n  children,\n  rc = <tbody />,\n  className,\n  testId: testIdProp,\n  ...props\n}: TableBodyProps<RC>) {\n  const { testId } = useContext(TableContext);\n  return (\n    <Box\n      {...props}\n      rc={rc}\n      testId={`${testIdProp ?? testId}__tbody`}\n      className={`${className ?? ''} tbody`}\n    >\n      {Children.map(children, child => {\n        if (isChildSubcomponent(child, TableRow)) {\n          return cloneElement(child, { parentNode: 'tbody' });\n        }\n\n        return renderNullAndWarnUser(TableBody.displayName);\n      })}\n    </Box>\n  );\n}\n\nTableBody.displayName = 'Table.Body';\n","import { Children, cloneElement, ReactElement, useContext } from 'react';\n\nimport { isChildSubcomponent, renderNullAndWarnUser } from '../../utils';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { TableContext } from './context';\nimport { TableChildParentNode } from './shared';\nimport { TableCell } from './TableCell';\n\nexport type TableRowProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & { parentNode?: TableChildParentNode };\n\nexport function TableRow<RC extends ReactElement | undefined = undefined>({\n  children,\n  rc = <tr />,\n  className,\n  testId: testIdProp,\n  parentNode,\n  ...props\n}: TableRowProps<RC>) {\n  const { testId } = useContext(TableContext);\n  return (\n    <Box\n      {...props}\n      rc={rc}\n      testId={`${testIdProp ?? testId}__tr`}\n      className={`${className ?? ''} tr`}\n    >\n      {Children.map(children, child => {\n        if (isChildSubcomponent(child, TableCell)) {\n          return cloneElement(child, { parentNode });\n        }\n        return renderNullAndWarnUser(TableRow.displayName);\n      })}\n    </Box>\n  );\n}\n\nTableRow.displayName = 'Table.Row';\n","import { ReactElement, useContext } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { BodyProps } from '../../types/text';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Body } from '../Text';\nimport { TableContext } from './context';\nimport {\n  DEFAULT_TABLE_SPACING,\n  TABLE_SPACING_SIZES,\n  TableChildParentNode,\n} from './shared';\nimport { baseTdSx, getCellSx, getResponsiveCellSx } from './style';\n\nexport type TableCellProps<RC extends ReactElement | undefined = undefined> =\n  BodyProps<RC> & { parentNode?: TableChildParentNode; colSpan?: number };\n\nexport function TableCell<RC extends ReactElement | undefined = undefined>({\n  children,\n  size = 'medium',\n  sx = {},\n  className,\n  testId: testIdProp,\n  parentNode,\n  colSpan = 1,\n  weight = parentNode === 'tbody' ? 'regular' : 'bold',\n  rc = parentNode === 'tbody' ? (\n    <td colSpan={colSpan} />\n  ) : (\n    <th colSpan={colSpan} />\n  ),\n  ...props\n}: TableCellProps<RC>) {\n  const theme = useTheme();\n  const { testId, horizontalSpacing, verticalSpacing } =\n    useContext(TableContext);\n  const startingHorizontalSpacing = getStartingSize(\n    horizontalSpacing,\n    DEFAULT_TABLE_SPACING,\n    TABLE_SPACING_SIZES,\n  );\n  const startingVerticalSpacing = getStartingSize(\n    verticalSpacing,\n    DEFAULT_TABLE_SPACING,\n    TABLE_SPACING_SIZES,\n  );\n  const allSx = merge(\n    baseTdSx,\n    getCellSx({\n      horizontalSpacing: startingHorizontalSpacing,\n      verticalSpacing: startingVerticalSpacing,\n      theme,\n    }),\n    getResponsiveCellSx({ horizontalSpacing, verticalSpacing, theme }),\n    sx,\n  );\n  return (\n    <Body\n      {...props}\n      size={size}\n      weight={weight}\n      rc={rc}\n      sx={allSx}\n      className={`${className ?? ''} ${parentNode === 'tbody' ? 'td' : 'th'}`}\n      testId={`${testIdProp || testId}__${\n        parentNode === 'tbody' ? 'td' : 'th'\n      }`}\n    >\n      {children}\n    </Body>\n  );\n}\n\nTableCell.displayName = 'Table.Cell';\n","import { ReactElement, useContext } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { BodyProps } from '../../types/text';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { Body } from '../Text';\nimport { TableContext } from './context';\nimport { DEFAULT_TABLE_SPACING, TABLE_SPACING_SIZES } from './shared';\nimport { baseCaptionSx, getCaptionSx, getResponsiveCaptionSx } from './style';\n\nexport type TableCaptionProps<RC extends ReactElement | undefined = undefined> =\n  BodyProps<RC> & { captionSide?: 'top' | 'bottom' };\n\nexport function TableCaption<RC extends ReactElement | undefined = undefined>({\n  children,\n  rc = <div />,\n  size = 'small',\n  weight,\n  sx = {},\n  captionSide = 'top',\n  className,\n  testId: testIdProp,\n  ...props\n}: TableCaptionProps<RC>) {\n  const theme = useTheme();\n  const { verticalSpacing, testId } = useContext(TableContext);\n  const startingVerticalSpacing = getStartingSize(\n    verticalSpacing,\n    DEFAULT_TABLE_SPACING,\n    TABLE_SPACING_SIZES,\n  );\n  const allSx = merge(\n    baseCaptionSx,\n    {\n      order: captionSide === 'bottom' ? 1 : -1,\n      marginBottom: captionSide === 'top' ? 'var(--captionGap)' : 'unset',\n      marginTop: captionSide === 'bottom' ? 'var(--captionGap)' : 'unset',\n    },\n    getCaptionSx({ verticalSpacing: startingVerticalSpacing, theme }),\n    getResponsiveCaptionSx({ verticalSpacing, theme }),\n    sx,\n  );\n  return (\n    <Body\n      {...props}\n      size={size}\n      weight={weight}\n      rc={rc}\n      sx={allSx}\n      testId={`${testIdProp ?? testId}__caption`}\n      className={`${className ?? ''} caption`}\n    >\n      {children}\n    </Body>\n  );\n}\n\nTableCaption.displayName = 'Table.Caption';\n","import { Children, cloneElement, ReactElement, useContext } from 'react';\n\nimport { isChildSubcomponent, renderNullAndWarnUser } from '../../utils';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { TableContext } from './context';\nimport { TableRow } from './TableRow';\n\nexport type TableFootProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC>;\n\nexport function TableFoot<RC extends ReactElement | undefined = undefined>({\n  children,\n  rc = <tfoot />,\n  className,\n  testId: testIdProp,\n  ...props\n}: TableFootProps<RC>) {\n  const { testId } = useContext(TableContext);\n  return (\n    <Box\n      {...props}\n      rc={rc}\n      testId={`${testIdProp ?? testId}__tfoot`}\n      className={`${className ?? ''} tfoot`}\n    >\n      {Children.map(children, child => {\n        if (isChildSubcomponent(child, TableRow)) {\n          return cloneElement(child, { parentNode: 'tfoot' });\n        }\n\n        return renderNullAndWarnUser(TableFoot.displayName);\n      })}\n    </Box>\n  );\n}\n\nTableFoot.displayName = 'Table.Foot';\n","import {\n  Children,\n  cloneElement,\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useForwardLocalDomRef, useTheme } from '../../hooks';\nimport { useWindowSizeStore } from '../../providers/BiomeWindowSize';\nimport { isChildSubcomponent, renderNullAndWarnUser } from '../../utils';\nimport { Box, BoxWithRCAndDomProps } from '../Box';\nimport { TableContext } from './context';\nimport { TableRow } from './TableRow';\n\nexport type TableHeadProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC>;\n\nexport function TableHead<RC extends ReactElement | undefined = undefined>({\n  children,\n  sx = {},\n  rc = <thead />,\n  className,\n  testId: testIdProp,\n  domRef = { current: null },\n  ...props\n}: TableHeadProps<RC>) {\n  const {\n    testId,\n    stickyHeaders,\n    setThWidths,\n    horizontalSpacing,\n    verticalSpacing,\n  } = useContext(TableContext);\n  const { base } = useTheme();\n  const localRef = useForwardLocalDomRef(domRef);\n  const [measurementsTaken, setMeasurementsTaken] = useState(false);\n  const { state: width } = useWindowSizeStore(state => state.width);\n\n  useEffect(() => {\n    if (localRef.current && !measurementsTaken) {\n      const ths = localRef.current.querySelectorAll('th');\n\n      setThWidths(() => {\n        const widths = Array.from(ths).map(th => {\n          return th.getBoundingClientRect().width;\n        });\n        setTimeout(() => setMeasurementsTaken(true), 0);\n        return widths;\n      });\n    }\n  }, [measurementsTaken, setThWidths, localRef]);\n  useEffect(() => {\n    setMeasurementsTaken(false);\n  }, [\n    width,\n    horizontalSpacing,\n    verticalSpacing,\n    stickyHeaders,\n    base.colorMode,\n  ]);\n\n  return (\n    <Box\n      {...props}\n      rc={rc}\n      testId={`${testIdProp ?? testId}__thead`}\n      className={`${className ?? ''} thead`}\n      domRef={localRef}\n      sx={merge(\n        {\n          ...(stickyHeaders && measurementsTaken\n            ? {\n                '& th': {\n                  display: 'none',\n                },\n              }\n            : {}),\n          ...(stickyHeaders && !measurementsTaken\n            ? {\n                '& th': {\n                  opacity: 0,\n                },\n              }\n            : {}),\n        },\n        sx,\n      )}\n    >\n      {Children.map(children, child => {\n        if (isChildSubcomponent(child, TableRow)) {\n          return cloneElement(child, { parentNode: 'thead' });\n        }\n\n        return renderNullAndWarnUser(TableHead.displayName);\n      })}\n    </Box>\n  );\n}\n\nTableHead.displayName = 'Table.Head';\n","import { DistributiveOmit } from '@emotion/react';\n\nimport { useGetSubcomponentChild } from '../../hooks';\nimport { Select, SelectProps } from '../Select';\n\nexport type TablePageSizeProps = DistributiveOmit<SelectProps, 'size'> & {};\n\nexport function TablePageSize({\n  children,\n  defaultLabel = 'Rows per page',\n  ...props\n}: TablePageSizeProps) {\n  const defaultIcon = useGetSubcomponentChild(children, Select.DefaultIcon);\n  return (\n    <Select {...props} size=\"medium\" defaultLabel={defaultLabel}>\n      {children}\n      {defaultIcon ?? <Select.DefaultIcon icon=\"ViewList\" />}\n    </Select>\n  );\n}\n\nTablePageSize.displayName = 'Table.PageSize';\nTablePageSize.DefaultIcon = Select.DefaultIcon;\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Pagination, PaginationProps } from '../Pagination';\n\nexport function TablePagination<\n  RC extends ReactElement | undefined = undefined,\n>({ sx = {}, ...props }: DistributiveOmit<PaginationProps<RC>, 'size'>) {\n  return (\n    <Pagination\n      {...props}\n      sx={merge(\n        {\n          maxw: '470px',\n        },\n        sx,\n      )}\n      buttonSx={{\n        h: '40px',\n      }}\n      size=\"small\"\n    />\n  );\n}\n","import merge from 'ts-deepmerge';\n\nimport { BaseClickableWithRCAndDomProps } from '../../types/clickable';\nimport { IconReactElement } from '../../types/icon';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { BaseClickable } from '../Clickable';\nimport { SmartClone } from '../SmartClone';\nimport { Body } from '../Text';\nimport {\n  renderTabIconStyles,\n  renderTabStyles,\n  renderTabTextStyles,\n} from './styles';\nimport { useTabsContext } from './TabsContext';\n\nexport type TabProps = BaseClickableWithRCAndDomProps<undefined> & {\n  icon?: IconReactElement;\n  value: string;\n};\n\nexport function Tab({\n  testId = 'Tabs__Tab',\n  value = '',\n  disabled = false,\n  children,\n  icon,\n  sx = {},\n  ...props\n}: TabProps) {\n  const { currentTabValue, onTabChange } = useTabsContext();\n\n  const isActive = currentTabValue === value;\n  const tabStyles = renderTabStyles({ isActive, disabled });\n  const tabIconStyles = icon ? renderTabIconStyles({ isActive, disabled }) : {};\n  const tabTextStyles = renderTabTextStyles({ isActive, disabled });\n\n  const allStyles = merge(\n    {\n      background: 'transparent',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'flex',\n      padding: '0',\n    },\n    tabStyles,\n    sx,\n  );\n\n  const onTabClick = disabled ? () => null : () => onTabChange(value);\n\n  return (\n    <BaseClickable\n      {...props}\n      testId={testId}\n      onClick={onTabClick}\n      sx={allStyles}\n    >\n      {icon && (\n        <SmartClone\n          sx={merge(tabIconStyles, icon.props.sx ? icon.props.sx : {})}\n        >\n          {icon}\n        </SmartClone>\n      )}\n\n      <Body sx={merge(tabTextStyles, lineClamp(2))}>{children}</Body>\n    </BaseClickable>\n  );\n}\n\nTab.displayName = 'Tab';\n","import merge from 'ts-deepmerge';\n\nexport const renderTabStyles = ({\n  isActive,\n  disabled,\n}: {\n  isActive: boolean;\n  disabled: boolean;\n}) => {\n  return merge(\n    {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      flexGrow: '1',\n      '.TabsList__vertical > &': {\n        flexDirection: 'column',\n        minHeight: 'base.spacing.x19',\n      },\n      '.TabsList__horizontal > &': {\n        flexDirection: 'row',\n        minHeight: 'base.spacing.x12',\n      },\n    },\n    isActive\n      ? {\n          backgroundColor: 'base.color.translucent.standard.100',\n          color: 'base.color.brand.1',\n          cursor: 'pointer',\n          borderTopColor: 'base.color.brand.1',\n          borderTopWidth: '3px',\n          borderTopStyle: 'solid',\n        }\n      : disabled\n      ? {\n          cursor: 'not-allowed',\n          color: 'base.color.brand.4',\n        }\n      : {\n          backgroundColor: 'base.color.translucent.standard.300',\n          '&:hover': {\n            backgroundColor: 'base.color.translucent.standard.200',\n          },\n          '&:active': {\n            color: 'base.color.brand.1',\n          },\n          color: 'base.color.brand.4',\n          cursor: 'pointer',\n        },\n  );\n};\n\nexport const renderTabTextStyles = ({\n  isActive,\n  disabled,\n}: {\n  isActive: boolean;\n  disabled: boolean;\n}) => {\n  return isActive\n    ? {}\n    : disabled\n    ? {\n        color: 'base.color.brand.4',\n      }\n    : {\n        color: 'base.color.brand.4',\n        '&:hover': {\n          color: 'base.color.brand.1',\n        },\n      };\n};\n\nexport const renderTabIconStyles = ({\n  isActive,\n  disabled,\n}: {\n  isActive: boolean;\n  disabled: boolean;\n}) => {\n  return merge(\n    {\n      width: 'base.spacing.x6',\n      flexShrink: 0,\n\n      '.TabsList__vertical > * > &': {\n        marginBottom: 'base.spacing.x1',\n      },\n\n      '.TabsList__horizontal > * > &': {\n        marginRight: 'base.spacing.x1',\n      },\n    },\n\n    isActive\n      ? {\n          fill: 'base.color.brand.1',\n        }\n      : disabled\n      ? {\n          fill: 'base.color.brand.4',\n        }\n      : {\n          fill: 'base.color.brand.4',\n\n          '*:hover > &': {\n            fill: 'base.color.brand.1',\n          },\n        },\n  );\n};\n\n// Tab List\nexport const renderTabsListStyles = () => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 'base.spacing.x12',\n    width: '100%',\n    flexWrap: 'nowrap',\n    columnGap: '1px',\n    flexGrow: '1',\n  };\n};\n\n// Tab Panels\nexport const renderTabsPanelStyles = () => {\n  return {\n    background: 'base.color.translucent.standard.100',\n    width: '100%',\n    minHeight: 'base.spacing.x50',\n  };\n};\n","import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { TabsContextType, TabsProviderProps } from './types';\n\nexport const TabsContext = createContext<TabsContextType>({\n  currentTabValue: '',\n  onTabChange: () => {},\n});\n\nexport function TabsProvider({\n  children,\n  value,\n}: {\n  children: ReactNode;\n  value: TabsProviderProps;\n}) {\n  const { currentTabValue, defaultTabValue, onTabChange } = value;\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    currentTabValue ?? defaultTabValue ?? '',\n  );\n\n  const valueToUse = currentTabValue ?? uncontrolledValue;\n  const handleTabChange = useCallback(\n    (newTabValue: string) => {\n      onTabChange?.(newTabValue);\n      setUncontrolledValue(newTabValue);\n    },\n    [onTabChange],\n  );\n  const contextValue = useMemo(\n    () => ({ currentTabValue: valueToUse, onTabChange: handleTabChange }),\n    [handleTabChange, valueToUse],\n  );\n\n  return (\n    <TabsContext.Provider value={contextValue}>{children}</TabsContext.Provider>\n  );\n}\n\nexport const useTabsContext = () => {\n  const context = useContext(TabsContext);\n  return context;\n};\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChildren } from '../../hooks/useGetSubcomponentChildren';\nimport { Box } from '../Box';\nimport { renderTabsListStyles } from './styles';\nimport { Tab } from './Tab';\nimport { TabsListProps } from './types';\n\nexport function TabsList<RC extends ReactElement | undefined = undefined>({\n  testId = 'Tabs__List',\n  domRef = { current: null },\n  children,\n  contentOrientation = 'horizontal',\n  sx = {},\n  ...props\n}: TabsListProps<RC>) {\n  const tabsListStyles = renderTabsListStyles();\n  const tabSubcomponentChildren = useGetSubcomponentChildren(children, Tab);\n  const allStyles = merge(tabsListStyles, sx);\n\n  return (\n    <Box\n      {...props}\n      testId={testId}\n      domRef={domRef}\n      className={`TabsList__${contentOrientation}`}\n      sx={allStyles}\n    >\n      {tabSubcomponentChildren}\n    </Box>\n  );\n}\n\nTabsList.displayName = 'Tabs.List';\n","import { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { Box } from '../Box';\nimport { renderTabsPanelStyles } from './styles';\nimport { useTabsContext } from './TabsContext';\nimport { TabsPanelProps } from './types';\n\nexport function TabsPanel<RC extends ReactElement | undefined = undefined>({\n  testId = 'Tabs__Panel',\n  children,\n  value,\n  sx = {},\n  ...props\n}: TabsPanelProps<RC>) {\n  const { currentTabValue } = useTabsContext();\n  if (currentTabValue !== value) return null;\n  const tabsPanelStyles = renderTabsPanelStyles();\n  const allStyles = merge(tabsPanelStyles, sx);\n\n  return (\n    <Box {...props} testId={testId} sx={allStyles}>\n      {children}\n    </Box>\n  );\n}\n\nTabsPanel.displayName = 'Tabs.Panel';\n","import { ReactElement } from 'react';\n\nimport { useGetSubcomponentChildren } from '../../hooks/useGetSubcomponentChildren';\nimport { Box } from '../Box';\nimport { Tab } from './Tab';\nimport { TabsProvider } from './TabsContext';\nimport { TabsList } from './TabsList';\nimport { TabsPanel } from './TabsPanel';\nimport { TabsProps } from './types';\n\nexport function Tabs<RC extends ReactElement | undefined = undefined>(\n  props: TabsProps<RC>,\n) {\n  const {\n    currentTabValue,\n    defaultTabValue,\n    onTabChange,\n    children,\n    ...boxProps\n  } =\n    'currentTabValue' in props\n      ? { ...props, defaultTabValue: null }\n      : { ...props, currentTabValue: null };\n\n  const tabsListSubcomponentChildren = useGetSubcomponentChildren(\n    children,\n    TabsList,\n  );\n  const tabsPanelSubcomponentChildren = useGetSubcomponentChildren(\n    children,\n    TabsPanel,\n  );\n\n  return (\n    <TabsProvider value={{ currentTabValue, defaultTabValue, onTabChange }}>\n      <Box {...boxProps}>\n        {tabsListSubcomponentChildren}\n        {tabsPanelSubcomponentChildren}\n      </Box>\n    </TabsProvider>\n  );\n}\n\nTabs.displayName = 'Tabs';\n\nTabs.List = TabsList;\nTabs.Tab = Tab;\nTabs.Panel = TabsPanel;\n","import { useCallback, useId, useMemo, useRef } from 'react';\n\nimport { useBrowserEffect, useBrowserLayoutEffect } from '../../hooks';\nimport {\n  CLOSE_TOAST,\n  OPEN_TOAST,\n  UPDATE_TOAST_PROPS,\n  useOverlaysStore,\n} from '../../providers/BiomeOverlaysProvider';\nimport { ToastComponentProps, ToastPosition } from '../../types/overlays';\nimport { ToastButtCon } from './ToastButtCon';\nimport { ToastButton } from './ToastButton';\nimport { ToastMessage } from './ToastMessage';\n\nconst DEFAULT_TOAST_POSITION: ToastPosition = {\n  x: 'right',\n  y: 'top',\n};\n\nexport function Toast({\n  visible,\n  onCloseToast,\n  id: idProp,\n  children,\n  position = DEFAULT_TOAST_POSITION,\n  hideDismissButton,\n  variant = 'guidance',\n  autoDismissDuration,\n  buttonsPosition = 'right',\n  testId = 'Toast',\n  sx,\n}: ToastComponentProps) {\n  const fallbackId = useId();\n  const id = idProp || fallbackId;\n  const { state: toastList, dispatchAction } = useOverlaysStore(\n    state => state.toastList,\n  );\n  const timerRef = useRef<number>();\n\n  const toastProps = useMemo(\n    () => ({\n      id,\n      content: children,\n      onCloseToast,\n      position,\n      variant,\n      hideDismissButton,\n      buttonsPosition,\n      testId,\n      sx,\n    }),\n    [\n      buttonsPosition,\n      children,\n      hideDismissButton,\n      id,\n      onCloseToast,\n      position,\n      sx,\n      testId,\n      variant,\n    ],\n  );\n\n  // @NOTE: this useEffect allows Toast props to stay up to date,\n  // as the application re-renders and things potentially change\n  useBrowserEffect(() => {\n    dispatchAction({\n      type: UPDATE_TOAST_PROPS,\n      payload: toastProps,\n    });\n  }, [toastProps]);\n\n  const closeToast = useCallback(() => {\n    dispatchAction({\n      type: CLOSE_TOAST,\n      payload: { id },\n    });\n  }, [dispatchAction, id]);\n\n  const showToast = useCallback(() => {\n    if (autoDismissDuration) {\n      clearTimeout(timerRef.current);\n      timerRef.current = window.setTimeout(\n        () => onCloseToast?.(),\n        autoDismissDuration,\n      );\n    }\n    dispatchAction({\n      type: OPEN_TOAST,\n      payload: toastProps,\n    });\n  }, [autoDismissDuration, dispatchAction, toastProps, onCloseToast]);\n\n  useBrowserLayoutEffect(() => {\n    if (visible) {\n      showToast();\n    } else if (toastList.find(toast => toast.id === id)) {\n      closeToast();\n    }\n    // @NOTE: we want to trigger these changes ONLY when the visible prop changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  return null;\n}\n\nToast.displayName = 'Toast';\nToast.Button = ToastButton;\nToast.ButtCon = ToastButtCon;\nToast.Message = ToastMessage;\n","import { ReactElement, ReactNode } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useGetSubcomponentChild, useTheme } from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { vFlex } from '../../utils/sxChunks';\nimport { Box } from '../Box';\nimport { BoxWithRCAndDomProps } from '../Box/Box';\nimport { SmartClone } from '../SmartClone';\nimport { DEFAULT_TOOLBAR_SIZE, TOOLBAR_SIZES, ToolbarSize } from './shared';\nimport {\n  getContainerStyles,\n  getResponsiveContainerStyles,\n  toolbarContainerBaseSx,\n} from './styles';\nimport { ToolbarCaption } from './ToolbarCaption';\nimport { ToolbarLeftButtCon } from './ToolbarLeftButtCon';\nimport { ToolbarRightSlot } from './ToolbarRightSlot';\nimport { ToolbarTitle } from './ToolbarTitle';\n\nexport type ToolbarProps<RC extends ReactElement | undefined = undefined> =\n  BoxWithRCAndDomProps<RC> & {\n    size?: MakeResponsive<ToolbarSize>;\n    children?: ReactNode;\n  };\n\nexport function Toolbar<RC extends ReactElement | undefined = undefined>({\n  sx = {},\n  size = DEFAULT_TOOLBAR_SIZE,\n  children,\n  rc = <header />,\n  testId = 'Toolbar',\n  ...props\n}: ToolbarProps<RC>) {\n  const title = useGetSubcomponentChild(children, ToolbarTitle);\n  const caption = useGetSubcomponentChild(children, ToolbarCaption);\n  const leftButtCon = useGetSubcomponentChild(children, ToolbarLeftButtCon);\n  const rightSlot = useGetSubcomponentChild(children, ToolbarRightSlot);\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_TOOLBAR_SIZE,\n    TOOLBAR_SIZES,\n  );\n  const allContainerStyles = merge(\n    toolbarContainerBaseSx,\n    getContainerStyles({ size: startingSize, themeProps }),\n    getResponsiveContainerStyles({ size, themeProps }),\n    sx,\n  );\n\n  return (\n    <Box {...props} sx={allContainerStyles} rc={rc} testId={testId}>\n      {leftButtCon && <SmartClone size={size}>{leftButtCon}</SmartClone>}\n      <Box\n        sx={{\n          ...vFlex,\n          flexGrow: 1,\n        }}\n        rc={<hgroup />}\n      >\n        {title && <SmartClone size={size}>{title}</SmartClone>}\n        {caption && <SmartClone size={size}>{caption}</SmartClone>}\n      </Box>\n\n      {rightSlot && <SmartClone size={size}>{rightSlot}</SmartClone>}\n    </Box>\n  );\n}\n\nToolbar.displayName = 'Toolbar';\nToolbar.LeftButtCon = ToolbarLeftButtCon;\nToolbar.Title = ToolbarTitle;\nToolbar.Caption = ToolbarCaption;\nToolbar.RightSlot = ToolbarRightSlot;\n","export const TOOLBAR_SIZES = ['small', 'medium'] as const;\nexport const DEFAULT_TOOLBAR_SIZE: ToolbarSize = 'medium';\nexport type ToolbarSize = (typeof TOOLBAR_SIZES)[number];\n","import merge from 'ts-deepmerge';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { BiomeTheme } from '../../types/theme';\nimport {\n  getBodyTextStyles,\n  getHeadingTextStyles,\n  isError,\n} from '../../utils/textStyleHelpers';\nimport { ToolbarSize } from './shared';\n\nexport const toolbarContainerBaseSx = {\n  bg: 'base.color.neutral.800',\n  width: '100%',\n  paddingX: 'base.spacing.x2',\n  paddingY: 'base.spacing.x3',\n  display: 'flex',\n  alignItems: 'center',\n};\n\ntype StyleFunctionProps = {\n  size: ToolbarSize;\n  themeProps: BiomeTheme;\n};\ntype ResponsiveStyleFunctionProps = Omit<StyleFunctionProps, 'size'> & {\n  size: MakeResponsive<ToolbarSize>;\n};\n\nexport function getContainerStyles({ size, themeProps }: StyleFunctionProps) {\n  switch (size) {\n    case 'small':\n      return {\n        height: '64px',\n        paddingX: themeProps.base.spacing.x4,\n      };\n\n    case 'medium':\n    default:\n      return {\n        height: '80px',\n        paddingX: themeProps.base.spacing.x6,\n      };\n  }\n}\n\nexport function getResponsiveContainerStyles({\n  size,\n  themeProps,\n}: ResponsiveStyleFunctionProps) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getContainerStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport function getTitleStyles({ themeProps, size }: StyleFunctionProps) {\n  switch (size) {\n    case 'small':\n      return getHeadingTextStyles({\n        themeProps,\n        size: 'xSmall',\n        weight: 'bold',\n      });\n\n    case 'medium':\n    default:\n      return getHeadingTextStyles({\n        themeProps,\n        size: 'medium',\n        weight: 'bold',\n      });\n  }\n}\n\nexport function getResponsiveTitleStyles({\n  themeProps,\n  size,\n}: ResponsiveStyleFunctionProps) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getTitleStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport function getCaptionStyles({ themeProps, size }: StyleFunctionProps) {\n  switch (size) {\n    case 'small':\n      return getBodyTextStyles({\n        themeProps,\n        size: 'xSmall',\n        weight: 'regular',\n      });\n\n    case 'medium':\n    default:\n      return getBodyTextStyles({\n        themeProps,\n        size: 'medium',\n        weight: 'regular',\n      });\n  }\n}\n\nexport function getResponsiveCaptionStyles({\n  themeProps,\n  size,\n}: ResponsiveStyleFunctionProps) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getCaptionStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport function getLeftButtConStyles({ themeProps, size }: StyleFunctionProps) {\n  switch (size) {\n    case 'small':\n      return { marginRight: themeProps.base.spacing.x4 };\n\n    case 'medium':\n    default:\n      return { marginRight: themeProps.base.spacing.x6 };\n  }\n}\n\nexport function getResponsiveLeftButtConStyles({\n  themeProps,\n  size,\n}: ResponsiveStyleFunctionProps) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getLeftButtConStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n\nexport function getRightSideMarginStyles({\n  themeProps,\n  size,\n}: StyleFunctionProps) {\n  switch (size) {\n    case 'small':\n      return { marginLeft: themeProps.base.spacing.x4 };\n\n    case 'medium':\n    default:\n      return { marginLeft: themeProps.base.spacing.x6 };\n  }\n}\n\nexport function getResponsiveRightSideMarginStyles({\n  themeProps,\n  size,\n}: ResponsiveStyleFunctionProps) {\n  const sizeAsArray = Array.isArray(size) ? [...size] : [size];\n  sizeAsArray.shift();\n  return merge(\n    ...sizeAsArray.map((responsiveSize, index) => {\n      if (responsiveSize != null && !isError(responsiveSize)) {\n        const mediaStyleRule = `@media screen and (min-width: ${themeProps.base.breakpointAsArray?.[index]}px)`;\n        return {\n          [mediaStyleRule]: getRightSideMarginStyles({\n            size: responsiveSize,\n            themeProps,\n          }),\n        };\n      }\n      return {};\n    }),\n  );\n}\n","import { useTheme } from '@emotion/react';\nimport merge from 'ts-deepmerge';\n\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Box, BoxProps } from '../Box';\nimport { DEFAULT_TOOLBAR_SIZE, TOOLBAR_SIZES, ToolbarSize } from './shared';\nimport { getCaptionStyles, getResponsiveCaptionStyles } from './styles';\n\nexport type ToolbarCaptionProps = Omit<BoxProps, 'rc'> & {\n  size?: MakeResponsive<ToolbarSize>;\n};\n\nexport function ToolbarCaption({\n  size = DEFAULT_TOOLBAR_SIZE,\n  sx = {},\n  ...props\n}: ToolbarCaptionProps) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_TOOLBAR_SIZE,\n    TOOLBAR_SIZES,\n  );\n  const captionStyles = merge(\n    { ...lineClamp(1), color: 'base.color.text.secondary' },\n    getCaptionStyles({ themeProps, size: startingSize }),\n    getResponsiveCaptionStyles({\n      themeProps,\n      size,\n    }),\n    sx,\n  );\n  return <Box {...props} sx={captionStyles} rc={<p />} />;\n}\n\nToolbarCaption.displayName = 'Toolbar.Caption';\n","import { DistributiveOmit } from '@emotion/react';\nimport { ReactElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { ButtConProps, MakeResponsive } from '../../types';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { ButtCon } from '../Clickable';\nimport { DEFAULT_TOOLBAR_SIZE, TOOLBAR_SIZES, ToolbarSize } from './shared';\nimport { getLeftButtConStyles, getResponsiveLeftButtConStyles } from './styles';\n\nexport type ToolbarLeftButtConProps<\n  RC extends ReactElement | undefined = undefined,\n> = DistributiveOmit<ButtConProps<RC>, 'size'> & {\n  size?: MakeResponsive<ToolbarSize>;\n};\n\nexport function ToolbarLeftButtCon<\n  RC extends ReactElement | undefined = undefined,\n>({\n  size = DEFAULT_TOOLBAR_SIZE,\n  variant = 'tertiary',\n  sx = {},\n  ...props\n}: ToolbarLeftButtConProps<RC>) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_TOOLBAR_SIZE,\n    TOOLBAR_SIZES,\n  );\n  const buttConStyles = merge(\n    {\n      color: 'base.color.text.secondary',\n      flexShrink: 0,\n    },\n    getLeftButtConStyles({ themeProps, size: startingSize }),\n    getResponsiveLeftButtConStyles({\n      themeProps,\n      size,\n    }),\n    sx,\n  );\n  return (\n    <ButtCon {...props} variant={variant} size={size} sx={buttConStyles} />\n  );\n}\n\nToolbarLeftButtCon.displayName = 'Toolbar.LeftButtCon';\n","import { Children, isValidElement } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport { useTheme } from '../../hooks';\nimport { MakeResponsive } from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { isChildSubcomponent } from '../../utils/subcomponentHelpers';\nimport { Box, BoxProps } from '../Box';\nimport { ButtCon, Button } from '../Clickable';\nimport { HorizontalMenu } from '../HorizontalMenu';\nimport { SmartClone } from '../SmartClone';\nimport { DEFAULT_TOOLBAR_SIZE, TOOLBAR_SIZES, ToolbarSize } from './shared';\nimport {\n  getResponsiveRightSideMarginStyles,\n  getRightSideMarginStyles,\n} from './styles';\n\nexport type ToolbarRightSlotProps = BoxProps & {\n  size?: MakeResponsive<ToolbarSize>;\n};\n\nexport function ToolbarRightSlot({\n  size = DEFAULT_TOOLBAR_SIZE,\n  children,\n  sx = {},\n  testId,\n  ...props\n}: ToolbarRightSlotProps) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_TOOLBAR_SIZE,\n    TOOLBAR_SIZES,\n  );\n  return (\n    <Box\n      {...props}\n      sx={merge(\n        {\n          display: 'flex',\n          gap: 'base.spacing.x2',\n        },\n        getRightSideMarginStyles({ size: startingSize, themeProps }),\n        getResponsiveRightSideMarginStyles({ size, themeProps }),\n        sx,\n      )}\n      testId={testId}\n    >\n      {Children.map(children, child => {\n        if (\n          isChildSubcomponent(child, Button) ||\n          isChildSubcomponent(child, ButtCon)\n        ) {\n          // @NOTE: render sub-component children, with some special extra props\n          return (\n            <SmartClone\n              variant={\n                isValidElement(child) && child.props.variant\n                  ? child.props.variant\n                  : 'tertiary'\n              }\n              size={\n                isValidElement(child) && child.props.size\n                  ? child.props.size\n                  : size\n              }\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n        if (isChildSubcomponent(child, HorizontalMenu)) {\n          return (\n            <SmartClone\n              size={\n                isValidElement(child) && child.props.size\n                  ? child.props.size\n                  : size\n              }\n            >\n              {child}\n            </SmartClone>\n          );\n        }\n\n        return child;\n      })}\n    </Box>\n  );\n}\n\nToolbarRightSlot.displayName = 'Toolbar.ToolbarRightSlot';\n","import { useTheme } from '@emotion/react';\nimport { ReactElement, ReactNode } from 'react';\nimport merge from 'ts-deepmerge';\n\nimport {\n  DomPropsWithDomRef,\n  MakeResponsive,\n  StandardComponentWithProps,\n} from '../../types/shared';\nimport { getStartingSize } from '../../utils/styleHelpers';\nimport { lineClamp } from '../../utils/sxChunks';\nimport { Box } from '../Box';\nimport { DEFAULT_TOOLBAR_SIZE, TOOLBAR_SIZES, ToolbarSize } from './shared';\nimport { getResponsiveTitleStyles, getTitleStyles } from './styles';\n\nexport type ToolbarTitleProps = StandardComponentWithProps<\n  HTMLHeadingElement,\n  {\n    size?: MakeResponsive<ToolbarSize>;\n    children?: ReactNode;\n  }\n>;\n\nexport function ToolbarTitle<RC extends ReactElement | undefined = undefined>({\n  size = DEFAULT_TOOLBAR_SIZE,\n  sx = {},\n  rc = <h3 />,\n  ...props\n}: RC extends undefined\n  ? DomPropsWithDomRef<'h3'> & ToolbarTitleProps\n  : ToolbarTitleProps & { rc: RC }) {\n  const themeProps = useTheme();\n  const startingSize = getStartingSize(\n    size,\n    DEFAULT_TOOLBAR_SIZE,\n    TOOLBAR_SIZES,\n  );\n  const titleStyles = merge(\n    {\n      color: 'base.color.text.primary',\n      ...lineClamp(1),\n    },\n    getTitleStyles({ themeProps, size: startingSize }),\n    getResponsiveTitleStyles({\n      themeProps,\n      size,\n    }),\n    sx,\n  );\n  return <Box {...props} sx={titleStyles} rc={rc} />;\n}\n\nToolbarTitle.displayName = 'Toolbar.Title';\n"],"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","names":["import_react","import_framer_motion","import_ts_deepmerge","import_react","import_react","import_react","import_react","initialState","base","import_jsx_runtime","base","merge","import_framer_motion","import_react","import_ts_deepmerge","import_design_tokens","import_ts_deepmerge","merge","import_jsx_runtime","base","merge","import_design_tokens","import_framer_motion","import_react","import_react","import_jsx_runtime","isEqual","import_framer_motion","import_lodash","import_react","import_ts_deepmerge","import_react","import_react","import_ts_deepmerge","import_react","import_react","useEmotionTheme","base","import_react","import_react_is","import_react","import_ts_deepmerge","import_react","_a","_b","merge","import_ts_deepmerge","import_ts_deepmerge","merge","_a","_b","merge","_a","import_design_tokens","import_ts_deepmerge","import_jsx_runtime","import_ts_deepmerge","import_react","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_jsx_runtime","merge","shimmerSx","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_framer_motion","import_jsx_runtime","base","_a","import_jsx_runtime","base","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","merge","import_ts_deepmerge","merge","import_jsx_runtime","baseContainerStyles","merge","debounce","import_react","import_react","import_design_tokens","import_framer_motion","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","_a","merge","import_ts_deepmerge","import_react","import_ts_deepmerge","import_react","ls","import_design_tokens","import_react","import_react_is","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_ts_deepmerge","import_ts_deepmerge","import_ts_deepmerge","base","base","merge","import_react","import_ts_deepmerge","base","merge","import_ts_deepmerge","base","merge","base","merge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_ts_deepmerge","import_react","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","merge","import_jsx_runtime","_a","_b","merge","import_jsx_runtime","iconSx","_a","_b","merge","import_react","import_ts_deepmerge","import_jsx_runtime","buttConSx","merge","base","iconSx","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","merge","import_jsx_runtime","_a","merge","import_jsx_runtime","import_jsx_runtime","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","RIGHT_TRANSLATE","LEFT_TRANSLATE","BOTTOM_TRANSLATE","NO_TRANSLATE","merge","import_react","import_jsx_runtime","import_jsx_runtime","initialState","import_react","import_jsx_runtime","initialState","import_lodash","debounce","import_design_tokens","import_react","import_ts_deepmerge","import_jsx_runtime","base","merge","import_design_tokens","import_react","import_jsx_runtime","import_jsx_runtime","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_react_is","import_react","import_react_is","import_react","import_react","import_react","import_react","import_lodash","import_react","debounce","import_react","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","import_ts_deepmerge","merge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","base","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_react","import_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_react","import_ts_deepmerge","import_framer_motion","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_react","import_framer_motion","import_ts_deepmerge","import_framer_motion","import_ts_deepmerge","import_jsx_runtime","base","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_ts_deepmerge","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","merge","_a","_b","import_react","import_ts_deepmerge","import_react","import_jsx_runtime","badgeSx","merge","import_jsx_runtime","import_ts_deepmerge","isHeading","baseStyles","renderResponsiveStyles","base","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_react","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","isHeading","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","baseStyles","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","baseStyles","renderResponsiveStyles","shimmerSx","baseStyles","import_jsx_runtime","shimmerSx","base","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","containerSx","inputCssStyles","import_jsx_runtime","merge","containerSx","inputCssStyles","import_ts_deepmerge","containerSx","tickSx","import_jsx_runtime","merge","containerSx","tickSx","import_jsx_runtime","merge","baseStyles","import_react","import_jsx_runtime","import_design_tokens","import_framer_motion","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","merge","rightChevronSx","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","merge","import_react","import_jsx_runtime","_a","_b","import_react","import_ts_deepmerge","import_ts_deepmerge","merge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","_a","merge","import_jsx_runtime","_a","_b","merge","import_design_tokens","import_framer_motion","import_react","import_ts_deepmerge","import_jsx_runtime","_a","rightChevronSx","merge","import_ts_deepmerge","getContainerSx","base","import_jsx_runtime","containerSx","merge","getContainerSx","textSx","import_react","import_ts_deepmerge","import_ts_deepmerge","base","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","_b","merge","import_ts_deepmerge","import_react","import_jsx_runtime","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","merge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","getContainerSx","getResponsiveContainerSx","import_jsx_runtime","merge","import_jsx_runtime","merge","getContainerSx","getResponsiveContainerSx","import_react","import_ts_deepmerge","import_react","import_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","_a","import_jsx_runtime","_a","_b","import_react","import_framer_motion","import_ts_deepmerge","clearValueButtonSx","getContainerSx","getResponsiveContainerSx","import_jsx_runtime","merge","getContainerSx","getResponsiveContainerSx","clearValueButtonSx","_a","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_ts_deepmerge","baseContainerSx","getContainerSx","base","getResponsiveContainerSx","import_jsx_runtime","containerSx","merge","baseContainerSx","getContainerSx","getResponsiveContainerSx","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_ts_deepmerge","getContainerStyles","renderResponsiveContainerStyles","merge","base","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","renderResponsiveContainerStyles","containerSx","merge","getContainerStyles","import_ts_deepmerge","import_ts_deepmerge","import_jsx_runtime","import_ts_deepmerge","getContainerSx","base","getResponsiveContainerSx","import_jsx_runtime","merge","import_jsx_runtime","_a","containerSx","merge","getContainerSx","getResponsiveContainerSx","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_ts_deepmerge","getContainerStyles","merge","import_jsx_runtime","merge","getContainerStyles","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_jsx_runtime","_a","merge","import_react","import_ts_deepmerge","import_jsx_runtime","import_jsx_runtime","import_react","base","import_jsx_runtime","_a","merge","import_lodash","import_react","import_ts_deepmerge","containerSx","import_jsx_runtime","debounce","_a","merge","containerSx","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","base","import_jsx_runtime","merge","import_jsx_runtime","merge","_a","import_react","import_ts_deepmerge","maskImagePrefix","svgXmlns","getContainerSx","base","getResponsiveContainerSx","import_jsx_runtime","containerSx","merge","getContainerSx","getResponsiveContainerSx","import_react","import_ts_deepmerge","import_react","import_ts_deepmerge","baseContainerSx","base","merge","import_react","import_react","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_jsx_runtime","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_jsx_runtime","import_react","import_ts_deepmerge","import_jsx_runtime","base","merge","import_jsx_runtime","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","_a","merge","baseContainerSx","import_ts_deepmerge","import_ts_deepmerge","merge","import_react","import_jsx_runtime","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","import_react","import_ts_deepmerge","import_ts_deepmerge","getContainerStyles","getResponsiveContainerStyles","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_react","import_ts_deepmerge","import_jsx_runtime","merge","import_jsx_runtime","merge","getContainerStyles","getResponsiveContainerStyles"]}