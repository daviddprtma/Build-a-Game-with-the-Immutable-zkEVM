import { defineConfig } from 'cypress';
import execa from 'execa';

const findBrowser = () => {
  // the path is hard-coded for simplicity
  const browserPath =
    '/Applications/Brave Browser.app/Contents/MacOS/Brave Browser';
  const browser = execa(browserPath, ['--version'])
    .then(result => {
      // STDOUT will be like "Brave Browser 77.0.69.135"
      const [, version] = /Brave Browser (\d+\.\d+\.\d+\.\d+)/.exec(
        result.stdout,
      ) as Array<string>;
      const majorVersion = parseInt(version.split('.')[0]);

      return [
        {
          name: 'Brave',
          displayName: 'Brave',
          channel: 'stable',
          family: 'chromium',
          version,
          path: browserPath,
          majorVersion,
        },
      ];
    })
    .catch(() => {
      // when Brave doesnt exist, simply return an empty array instead
      return [];
    });
  return browser;
};

const COMMON_CONFIG = {
  env: {
    coverage: false,
  },
  async setupNodeEvents(on: any, config: any) {
    const newConfig = await require('./cypress/plugins/index.js')(on, config);
    const browser = await findBrowser();
    return {
      ...newConfig,
      browsers: [...newConfig.browsers, ...browser],
    };
  },
};

export default defineConfig({
  component: {
    ...COMMON_CONFIG,
    specPattern: './src/**/*.cy.test.{js,ts,jsx,tsx}',
    devServer: {
      framework: 'react',
      bundler: 'webpack',
    },
    projectId: 'z3pb6a',
  },
  viewportWidth: 500,
  viewportHeight: 500,
  defaultCommandTimeout: 5000,
  retries: {
    runMode: 2,
    openMode: 0,
  },
  video: false,
});
